{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 191,
                        "title": "build: bump core",
                        "repository": {
                            "nameWithOwner": "sablier-labs/v2-periphery",
                            "primaryLanguage": {
                                "name": "Solidity"
                            }
                        },
                        "createdAt": "2023-09-28T10:14:50Z",
                        "mergedAt": "2023-09-28T18:37:28Z",
                        "url": "https://github.com/sablier-labs/v2-periphery/pull/191",
                        "state": "MERGED",
                        "author": {
                            "login": "andreivladbrg"
                        },
                        "editor": null,
                        "body": "Update the `v2-core` branch to main and add the `transferable` parameter from this [PR](https://github.com/sablier-labs/v2-core/pull/668).\r\n\r\nNotes:\r\n1. I have not changed yet the `package.json` file for the new `v2-core` version because it's not released on npm. Installing it as a github package would not work due to [prepack](https://github.com/sablier-labs/v2-core/blob/e626e6f9f9c460a8b42b3501de71debb684965b3/package.json#L60) from core. It would fail as seen [here](https://app.warp.dev/block/dfG3EBwso2os6NbedCqQuh).\r\n2. At the moment we are deploying the core contracts in the fork tests because using the old version of them would not work due to the new boolean added.",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "looks good except for that gas optimization",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We need to define this before merkleRoot to save gas by tight packing.",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-periphery/pull/191#discussion_r1340520613",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "069b80c",
                                                            "authoredDate": "2023-09-28T12:23:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: it is not true that storage variables are tightly packed like struct fields.\n\nhttps://chat.openai.com/share/67619484-f686-4d11-8cac-cb9e8d4ca1ce\nhttps://ethereum.stackexchange.com/q/155029/24693",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-periphery/pull/191#discussion_r1340538359",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "069b80c",
                                                            "authoredDate": "2023-09-28T12:23:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "lgtm",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ChatGPT seems to have given an incorrect response here. Storage variables are also tightly packed.\nIt's true that because of dealing with reduced-size variables in the same slot, changing the value of y will consume more gas (~100 in comparison) in the case of contract B, but it will also save gas (~16,000 in comparison) when setting it the first time. It depends on the use case and how many times each variable is read or written.\nHowever, in the above code, it does not matter because immutable variables are part of the creation code and not of the contract storage.\n\nhttps://docs.soliditylang.org/en/latest/internals/layout_in_storage.html\nhttps://docs.soliditylang.org/en/latest/contracts.html#immutable",
                                                        "author": {
                                                            "login": "smol-ninja"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-periphery/pull/191#discussion_r1418867427",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "069b80c",
                                                            "authoredDate": "2023-09-28T12:23:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "However, in the above code, it does not matter because immutable variables are part of the creation code and not of the contract storage.\n\nyes, this is correct, that's what i've told him privately",
                                                        "author": {
                                                            "login": "andreivladbrg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-periphery/pull/191#discussion_r1418874467",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "069b80c",
                                                            "authoredDate": "2023-09-28T12:23:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 22,
                        "title": "ODY-276 About\u30da\u30fc\u30b8\u306e\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u5bfe\u5fdc",
                        "repository": {
                            "nameWithOwner": "daydule/odyssey-frontend",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-12-16T02:35:41Z",
                        "mergedAt": "2023-12-27T12:46:54Z",
                        "url": "https://github.com/daydule/odyssey-frontend/pull/22",
                        "state": "MERGED",
                        "author": {
                            "login": "atoook"
                        },
                        "editor": {
                            "login": "atoook"
                        },
                        "body": "# \u4e8b\u524d\u78ba\u8a8d\r\n\r\n- [x] PR\u524d\u306b\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u305f\u304b\r\n- [x] \u6a5f\u5bc6\u60c5\u5831\u3092\u542b\u3093\u3067\u3044\u306a\u3044\u304b\r\n- [x] [\u958b\u767a\u30eb\u30fc\u30eb](https://daydule.atlassian.net/wiki/spaces/DAYDULE/pages/9765029)\u3092\u5b88\u3063\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u304b\r\n- [x] \u5358\u4f53\u30c6\u30b9\u30c8\u304c\u5168\u3066OK\u306b\u306a\u3063\u3066\u3044\u308b\u304b\uff08\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5834\u5408SKIP\uff09\r\n- [x] \u6700\u65b0\u306e`develop`\u30d6\u30e9\u30f3\u30c1\u3092\u53cd\u6620\u3057\u3066\u3044\u308b\u304b\r\n- [x] \u30d3\u30eb\u30c9\u30a8\u30e9\u30fc/ESLint\u30a8\u30e9\u30fc\u306f\u8d77\u304d\u3066\u3044\u306a\u3044\u304b\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u512a\u5148\u5ea6\uff08\u3069\u308c\u304b\u4e00\u3064\uff09\r\n\r\n- [ ] \u3059\u3050\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] 3\u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] 7\u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u306e\u5ea6\u5408\u3044\r\n\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3057\u3063\u304b\u308a\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30ef\u30fc\u306b\u3088\u308b\u52d5\u4f5c\u78ba\u8a8d\r\n\r\n- [ ] @tom-takeru \r\n- [ ] @Mellbrother \r\n- [ ] @kzk27 \r\n\r\n# \u3084\u3063\u305f\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n- \u4ee5\u4e0b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u5bfe\u5fdc\r\n AboutCardWithImage\r\n AboutCardWithText\r\n- AboutCardWithImage\u306eisImageLeft Props\u3092\u524a\u9664\u3057\u3066\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u81ea\u4f53\u3092Left/Right\u306b\u5206\u5272\uff08\u4f1a\u8b70\u3067\u5171\u6709\u6e08\uff09\r\n \u203b\u7406\u7531\uff11\uff1a\u753b\u9762\u30b5\u30a4\u30ba\u53d6\u5f97\u5f8c\u306bisImageLeft\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u51fa\u3057\u308f\u3051\u3057\u3088\u3046\u3068\u3059\u308b\u3068ssr\u51fa\u6765\u306a\u304f\u306a\u308b\u305f\u3081\r\n \u203b\u7406\u7531\uff12\uff1aAboutCardWithImage\u3092csr\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3068\u3053\u308d\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9NG\u304c\u89e3\u6d88\u3067\u304d\u306a\u304b\u3063\u305f\u305f\u3081 \r\n\r\n# \u3084\u3089\u306a\u3044\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u3066\u3082\u304a\u304b\u3057\u304f\u306a\u3044\u3051\u3069\u3084\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u304a\u3051\u308b\u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u305d\u306e\u4ed6<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u4e0a\u8a18\u306e\u9805\u76ee\u4ee5\u5916\u306b\u4f1d\u3048\u308b\u3079\u304d\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "\u4ee5\u4e0b\u3092\u5225\u30c1\u30b1\u30c3\u30c8\u3067\u5bfe\u5fdc\u3059\u308b\u5206\u3068\u3057\u3066\u8d77\u7968\u3057\u307e\u3057\u305f\uff01\n\u3053\u306ePR\u304c\u30de\u30fc\u30b8\u3055\u308c\u3066\u304b\u3089\u3001\u3069\u3053\u304b\u3067\u512a\u5148\u5ea6\u3092\u898b\u3066\u3084\u308a\u307e\u3057\u3087\u3046\uff01\n\u672cPR\u3067\u5bfe\u5fdc\u53ef\u80fd\u3067\u3057\u305f\u3089\u3001\u5bfe\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u30c1\u30b1\u30c3\u30c8\u3092\u524a\u9664\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\uff01\n\nAboutCardWithText.tsx\u3000\u304c\u30e2\u30d0\u30a4\u30eb\u306e\u6642\u306b\u753b\u9762\u3044\u3063\u3071\u3044\u306b\u5e83\u304c\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u4fee\u6b63\nAboutCardWith(Right/Left).stories.tsx\u306b\u30b9\u30de\u30db\u5e45\u3067\u306e\u30b9\u30c8\u30fc\u30ea\u3092\u8ffd\u52a0\n\n1\u306b\u3064\u3044\u3066",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u3053\u308c\u3063\u3066\u306a\u3093\u306e\u305f\u3081\u306b\u5165\u308c\u305f\u3093\u3067\u3059\u304b\uff1f",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436242042",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ChatGPT\u306b\u8cea\u554f\u3060\u3051\u3057\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u3001\u77e5\u3089\u3093\u3068\u8a00\u308f\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3001\u3001\u3001\u3002\nhttps://chat.openai.com/share/adc90fb5-54c2-4f1c-8b17-e2928e556b02",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436248823",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@tom-takeru\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b.tsx\u306e\u62e1\u5f35\u5b50\u3092\u3064\u3051\u3066import\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u3059\u304c\uff08\u4fee\u6b63\u524d\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u8ffd\u52a0\u3057\u305f\u8a18\u61b6\u304c\u3042\u308a\u307e\u3059\uff09\u304c\u3001\u4e0d\u8981\u306a\u306e\u3067\u524a\u9664\u3057\u307e\u3059\u3002\nimport { XXX } from 'XXXX.tsx';",
                                                        "author": {
                                                            "login": "atoook"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436360202",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM\uff01 \ud83d\udc24",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 114,
                        "title": "Show info header only on first command",
                        "repository": {
                            "nameWithOwner": "shakacode/heroku-to-control-plane",
                            "primaryLanguage": {
                                "name": "Ruby"
                            }
                        },
                        "createdAt": "2023-11-20T17:21:04Z",
                        "mergedAt": "2023-12-01T20:44:33Z",
                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114",
                        "state": "MERGED",
                        "author": {
                            "login": "ahangarha"
                        },
                        "editor": null,
                        "body": "\r\n---\r\nCloses #111 ",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Is this the best way to do this? In other places, we use instance/class variables:",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1403334504",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4cfaf11",
                                                            "authoredDate": "2023-11-20T17:18:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I am not happy about it either but this was the only way I could implement it.\nI tried this at first. But when we run a command (run CLI start method) in another command, we get into a new instance, and we don't have access to the earlier instance variables.",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1404562743",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4cfaf11",
                                                            "authoredDate": "2023-11-20T17:18:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This raises a WTF...\nWhere in the world did you get the ObjectSpace idea?\nCounting object instances is a total hack.\nYou could probably set a static counter on or boolean on the CPL class. In other words, instance variable on the class, not the instance.\nUse a class instance variable (aka static) on the cpl class.\nhttps://chat.openai.com/share/e62c8db1-0622-4617-b8a6-5c3a4d82f387",
                                                        "author": {
                                                            "login": "justin808"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1404708568",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4cfaf11",
                                                            "authoredDate": "2023-11-20T17:18:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\"already\" feels redundant. showed_info_header already gets the point across.",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1405147053",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Can we not just call show_info_header directly without Cpl::Cli, since we're inside of the class?",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1405147230",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "No.\nIt seems we are defining instance methods for each command. If we want to call static methods from instance methods, we must prefix it with the class. This confusion was one of the reasons I tried to find another way to implement this feature.\nI can replace Cpl::Cli with self.class, but I think this is clearer.",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1405348325",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Looks good to me, just one thing I missed about initializing the variable, but no need for re-review.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We don't need to initialize it.",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406016725",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "77ddae2",
                                                            "authoredDate": "2023-11-26T08:10:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "You're right.\nMaybe it would be even better to move show_info_header to a helper then, because it would be easier to call it. But the current way works too, so up to you. I'll approve the PR.",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406017865",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Since we use it once, let's keep it here. Let's move it there when we need to. Agree?",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406463687",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done! I removed it.\nI thought an explicit default value assignment would be better.",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406469550",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "77ddae2",
                                                            "authoredDate": "2023-11-26T08:10:21Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 52,
                        "title": "Voice functionality added with Whisper",
                        "repository": {
                            "nameWithOwner": "OthersideAI/self-operating-computer",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-12-01T21:33:58Z",
                        "mergedAt": "2023-12-05T14:15:44Z",
                        "url": "https://github.com/OthersideAI/self-operating-computer/pull/52",
                        "state": "MERGED",
                        "author": {
                            "login": "younesbram"
                        },
                        "editor": null,
                        "body": "Added voice functionality with whisper. Implemented a `--voice` command-line flag using `argparse`.\r\n",
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 904,
                        "title": "\u6574\u7406: \u7591\u554f\u5f62 upspeak \u306e\u5358\u7d14\u5316",
                        "repository": {
                            "nameWithOwner": "VOICEVOX/voicevox_engine",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-12-19T08:22:22Z",
                        "mergedAt": "2023-12-21T05:24:41Z",
                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904",
                        "state": "MERGED",
                        "author": {
                            "login": "tarepan"
                        },
                        "editor": {
                            "login": "tarepan"
                        },
                        "body": "## \u5185\u5bb9\r\n\u6982\u8981: \u7591\u554f\u5f62 upspeak \u51e6\u7406\u306e\u5358\u7d14\u5316\u306b\u3088\u308b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0  \r\n\r\n\u30cd\u30b9\u30c8\u306e\u89e3\u6d88\u30fb\u51e6\u7406\u306e\u7c21\u7d20\u5316\u306b\u3088\u3063\u3066\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3092\u304a\u3053\u306a\u3063\u305f\u3002  \r\n\r\n## \u95a2\u9023 Issue\r\npart of #897\r\n\r\n## Reviewer \u5411\u3051\u60c5\u5831\r\n3\u3064\u306e\u95a2\u6570\u30cd\u30b9\u30c8\u3092\u524a\u9664\u3057\u305f\u305f\u3081\u3001diff \u304c\u6a5f\u80fd\u3057\u3066\u3044\u307e\u305b\u3093\u3002  \r\ncommit \u3054\u3068\u306b 1 \u3064\u306e\u95a2\u6570\u3092\u524a\u9664\u3057\u305f\u305f\u3081\u3001\u30ec\u30d3\u30e5\u30fc\u6642\u306b\u306f commit log \u3092\u53c2\u7167\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002  ",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u3053\u306e\u5909\u66f4\u3067\u3059\u304c\u3001\u4e00\u822c\u7684\u306b\u306f\u95a2\u6570\u5074\u306b\u30d5\u30e9\u30b0\u3092\u4e0e\u3048\u3066\u3069\u3046\u3059\u308b\u304b\u3092\u59d4\u306d\u308b\u3088\u308a\u3082\u3001\u5358\u4e00\u51e6\u7406\u3092\u884c\u3046\u95a2\u6570\u306b\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u3055\u308c\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nChatGPT\u306b\u4e21\u8005\u306e\u30e1\u30ea\u30c3\u30c8\u3092\u805e\u3044\u3066\u307f\u305f\u611f\u3058\u3001\u3053\u306e\u8fd4\u7b54\u304c\u81ea\u5206\u306e\u8003\u3048\u3068\u8fd1\u304b\u3063\u305f\u3067\u3059\u3002\nhttps://chat.openai.com/share/cb0a7a43-fbff-4876-801a-921c90ed5618\n\u4f55\u304b\u3053\u3046\u3057\u3066\u3044\u308b\u610f\u56f3\u304c\u3042\u308c\u3070\u77e5\u308a\u305f\u3044\u3067\u3059\uff01",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433359944",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u4e00\u822c\u7684\u306b\u306f ... \u5358\u4e00\u51e6\u7406\u3092\u884c\u3046\u95a2\u6570\u306b\u3059\u308b\u306e\u304c\u826f\u3044\n\n\ud83d\udc4d\n\u4e00\u822c\u8ad6\u3068\u3057\u3066\u540c\u610f\u3067\u3059\u3002\n\n\u3053\u3046\u3057\u3066\u3044\u308b\u610f\u56f3\u304c\u3042\u308c\u3070\n\n\u300cupspeak \u9069\u7528\u6709\u7121\u542b\u3081\u3066 1 \u6a5f\u80fd\u3068\u307f\u306a\u3057\u3001\u53b3\u5bc6\u306b\u30c6\u30b9\u30c8\u3067\u304d\u308b\u304b\u3089\u300d\u304c\u610f\u56f3/\u7406\u7531\u3067\u3059\u3002\n\u73fe\u5728\u306e test_synthesis_engine_base.py \u3067\u306f spy \u306b\u7528\u3044\u3066 .synthesis() \u306e\u4e00\u90e8\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n  \n    \n      voicevox_engine/test/test_synthesis_engine_base.py\n    \n    \n        Lines 214 to 218\n      in\n      831d28a\n    \n  \n  \n    \n\n        \n          \n           self.synthesis_engine.synthesis( \n        \n\n        \n          \n               query, 0, enable_interrogative_upspeak=enable_interrogative_upspeak \n        \n\n        \n          \n           ) \n        \n\n        \n          \n           # _synthesis_impl\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u4e0e\u3048\u3089\u308c\u305fquery\u3092\u691c\u8a3c \n        \n\n        \n          \n           actual = self.synthesis_engine._synthesis_impl.call_args[0][0].accent_phrases \n        \n    \n  \n\n\n\n  \n    \n      voicevox_engine/test/test_synthesis_engine_base.py\n    \n    \n        Lines 255 to 259\n      in\n      831d28a\n    \n  \n  \n    \n\n        \n          \n           self.create_synthesis_test_base( \n        \n\n        \n          \n               text=\"\u3053\u308c\u306f\u3042\u308a\u307e\u3059\u304b\uff1f\", \n        \n\n        \n          \n               expected=expected, \n        \n\n        \n          \n               enable_interrogative_upspeak=False, \n        \n\n        \n          \n           ) \n        \n    \n  \n\n\n\u3053\u306e\u30c6\u30b9\u30c8\u5bfe\u8c61\u9818\u57df\u304c\u300cupspeak \u9069\u7528\u6709\u7121 + upspeak\u9069\u7528\u300d\u3064\u307e\u308a\u4eca\u56de\u5207\u308a\u51fa\u3055\u308c\u305f apply_interrogative_upspeak() \u306b\u76f8\u5f53\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u73fe\u5728\u306e\u30c6\u30b9\u30c8\u3067\u306f\u3053\u306e\u30b3\u30fc\u30c9\u3092 enable_interrogative_upspeak \u30d5\u30e9\u30b0\u5024\u3092\u5909\u3048\u306a\u304c\u3089\u5e45\u5e83\u3044\u30d1\u30bf\u30fc\u30f3\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5e45\u5e83\u3055\u306fupspeak\u6709\u7121\u306e\u30d0\u30b0\u304c\u54c1\u8cea\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u305f\u3081\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n#899 \u3067\u8b70\u8ad6\u3055\u308c\u305f\u3088\u3046\u306b .synthesis() \u306e\u5165\u529b\u8a2d\u5b9a\u5168\u30d1\u30bf\u30fc\u30f3\u30c6\u30b9\u30c8\u306f\u4e0d\u53ef\u80fd\u3067\u3059\u3002\n\u3053\u308c\u304c\u7406\u7531\u3067\u3001\u30d5\u30e9\u30b0\u3092\u5916\u306b\u51fa\u3059\u3068\u73fe\u884c\u306e\u300cenable_interrogative_upspeak \u30d5\u30e9\u30b0\u5024\u3092\u5909\u3048\u306a\u304c\u3089\u5e45\u5e83\u3044\u30d1\u30bf\u30fc\u30f3\u300d\u3092\u6368\u3066\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\nenable_interrogative_upspeak \u30d5\u30e9\u30b0\u3092 upspeak \u91cf\u3092\u8abf\u6574\u3059\u308b\u4f55\u304b\u3068\u898b\u505a\u3057\u3066\u3057\u307e\u3048\u3070\u3001apply_interrogative_upspeak() \u306e\u5f15\u6570\u306b\u8abf\u6574\u8a2d\u5b9a\u5024\u304c\u5165\u308b\u306e\u306f\u305d\u3053\u307e\u3067\u9055\u548c\u611f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3088\u3063\u3066 upspeak\u9069\u7528\u6709\u7121\u542b\u3081\u3066 1 \u6a5f\u80fd\u3068\u307f\u306a\u3059\u306e\u306f\uff08\u5c11\u306a\u304f\u3068\u3082\uff09\u304a\u304b\u3057\u306a\u3053\u3068\u3067\u306f\u306a\u304f\u3001\u4ed6\u306e\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8\u3067\u30d5\u30e9\u30b0\u3092\u5f15\u6570\u306b\u3059\u308b\u304b\u5426\u304b\u6c7a\u3081\u3066\u826f\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u89b3\u70b9\u3092\u7dcf\u5408\u3057\u305f\u7d50\u679c\u3001\u9069\u7528\u6709\u7121\u542b\u30811\u6a5f\u80fd\u3068\u898b\u505a\u3057\u3066\u73fe\u884c\u306e\u5e45\u5e83\u3044\u30c6\u30b9\u30c8\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u6700\u5584\u3068\u8003\u3048\u3001\u4e00\u822c\u8ad6\u3068\u306f\u7570\u306a\u308b\u5207\u308a\u51fa\u3057\u65b9\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u8ffd\u8a18:\n\u5c06\u6765\u306e\u65b9\u5411\u6027\u3068\u3057\u3066\u3001\n\n#897 \u304c\u9032\u884c\u3057\u3066 .synthesis() \u3068 ._synthesis_impl() \u304c\u7d71\u5408\nquery_to_decoder_feature() \u5185\u3078\u672c PR \u306e apply_interrogative_upspeak() \u3092\u79fb\u690d\n\u4ed6\u306e apply \u95a2\u6570\u9054\u3068\u4e26\u3076\n\n\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\uff08\u4e0b\u30b3\u30fc\u30c9\u306f\u6700\u7d42\u72b6\u614b\u306e\u30a4\u30e1\u30fc\u30b8\uff09\ndef query_to_decoder_feature(query) -> tuple[ndarray, ndarray]:\n    accent_phrases = query.accent_phrases\n    # \u8a2d\u5b9a\u3092\u9069\u7528\u3059\u308b\n    accent_phrases = apply_interrogative_upspeak(accent_phrases, query) # query\u5185upspeak\u30d5\u30e9\u30b0\n    moras = apply_prepost_silence(to_flatten_moras(accent_phrases), query)\n    moras = apply_speed_scale(moras, query)\n    moras = apply_pitch_scale(moras, query)\n    ...",
                                                        "author": {
                                                            "login": "tarepan"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433424756",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u306a\u308b\u307b\u3069\u3067\u3059\uff01\uff01\n\u5c11\u306a\u304f\u3068\u3082\u4eca\u306ePR\u306eapply_interrogative_upspeak\u95a2\u6570\u306f\u3001query\u30af\u30e9\u30b9\uff08\u3064\u307e\u308a\u95a2\u6570\u306e\u8cac\u52d9\u7bc4\u56f2\u5916\uff09\u306benable_interrogative_upspeak\u304c\u3042\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u306a\u3044\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u3060\u3051\u898b\u305f\u5834\u5408\u306b\u3001\u306a\u305c\u3053\u306e\u30d5\u30e9\u30b0\u304c\u3042\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u306a\u3068\u3002\nquery\u305d\u306e\u3082\u306e\u3092\u6e21\u3059\u8a2d\u8a08\u3092\u4e88\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u8a71\u306f\u5225\u3067\u3057\u305f\u3002\u3044\u3063\u305f\u3093NOTE\u30b3\u30e1\u30f3\u30c8\u304c\u6709\u308b\u3068\u826f\u3044\u306e\u304b\u306a\u3068\uff01\n\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u30de\u30fc\u30b8\u3055\u305b\u3066\u3044\u305f\u3060\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff01",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433522317",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                \"\"\"\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5404\u30a2\u30af\u30bb\u30f3\u30c8\u53e5\u306e\u672b\u5c3e\u3078\u7591\u554f\u5f62\u30e2\u30fc\u30e9\uff08\u540c\u4e00\u6bcd\u97f3\u30fb\u7d99\u7d9a\u9577 0.15\u79d2\u30fb\u97f3\u9ad8\u2191\uff09\u3092\u4ed8\u4e0e\u3059\u308b\"\"\"\n          \n          \n            \n                \"\"\"\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5404\u30a2\u30af\u30bb\u30f3\u30c8\u53e5\u306e\u672b\u5c3e\u3078\u7591\u554f\u5f62\u30e2\u30fc\u30e9\uff08\u540c\u4e00\u6bcd\u97f3\u30fb\u7d99\u7d9a\u9577 0.15\u79d2\u30fb\u97f3\u9ad8\u2191\uff09\u3092\u4ed8\u4e0e\u3059\u308b\"\"\"\n          \n          \n            \n                # NOTE: \u5c06\u6765\u7684\u306bAudioQuery\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f15\u6570\u306b\u3059\u308b\u4e88\u5b9a",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433523753",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM\uff01\uff01\uff01",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 122355,
                        "title": "Kube-proxy/nftables: allow \"numgen inc\"",
                        "repository": {
                            "nameWithOwner": "kubernetes/kubernetes",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-12-17T10:03:18Z",
                        "mergedAt": null,
                        "url": "https://github.com/kubernetes/kubernetes/pull/122355",
                        "state": "CLOSED",
                        "author": {
                            "login": "uablrek"
                        },
                        "editor": {
                            "login": "uablrek"
                        },
                        "body": "This makes the nftables proxier distribute traffic in the same way as proxy-mode=ipvs with the \"rr\" scheduler\r\n\r\n\r\n#### What type of PR is this?\r\n\r\n/kind feature\r\n/sig network\r\n/area kube-proxy\r\n\r\n#### What this PR does / why we need it:\r\n\r\nExisting users of proxy-mode=ipvs may feel more comfortable if they can keep the round-robin distribution when upgrading to proxy-mode=nftables.\r\n\r\nIt should be noted that the same limitation applied for nftables with \"random inc\" as for ipvs/rr: the individual kube-proxy instances on the nodes are not coordinated, but distribute individually. And different schedulers are not possible, as in \"ipvs\".\r\n\r\n#### Which issue(s) this PR fixes:\r\n\r\nN/A\r\n\r\n#### Special notes for your reviewer:\r\n\r\nFor start this is a PoC.\r\n\r\nA more suitable name than `numgen` should probably be used in the proxier structure. Trying to look into the future, one might expect some new features in nftables, like maglev-hashing\", and make it possible to configure those future things without altering the config API, just use a new value for some distribution parameter.\r\n\r\n#### Does this PR introduce a user-facing change?\r\n\r\n```release-note\r\nAllow users to configure the distribution in proxy-mode=nftables to mimic proxy-mode=ipvs with round-robin\r\n```\r\n\r\n#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:\r\n\r\n\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "is the plan to make this a configuration option like in ipvs?\n\t// scheduler is the IPVS scheduler to use\n\tScheduler string `json:\"scheduler\"`",
                                                        "author": {
                                                            "login": "aojea"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430695581",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "this is going to be a bit of bikeshedding, but random seems to be a better default since is the one used by cilium and kube-proxy iptables, that I are used more than ivps https://gist.github.com/aojea/5f82db3ba5f1efd59bb73f4b28614a6a",
                                                        "author": {
                                                            "login": "aojea"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430698073",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I kind of agree. Random is random, but people expect too much of other schedulers, even \"rr\". Like the endless discussion of \"initial distribution\", mentioned for instance in #121591 (comment). Even maglev-hashing doesn't work out-of-the-box in the way people expect.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430938479",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "No plan at the moment. I just read the nft doc's and saw that it can be done. Easily.\nBut I can't say I have any strong opinions about it, except that is may make some current users of ipvs more comfortable with the upgrade as mentioned in the description. But people may select ipvs for other reasons than \"rr\", e.g. get rid of the \"probability chain\" in iptables, that can look horrible for many endpoints, or simply that they know ipvs and it's easier to understand (my case). Or they want another scheduler, which can't be supported by nftables anyway.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430943279",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I made some experiments of my own with K8s load-balancing, but without any http considerations, only plain tcp connects, at: https://github.com/uablrek/xcluster-ovls/tree/main/k8s-load-balancing\nThe hardest part was to create the table with Unix/Linux commands, please see:\nhttps://github.com/uablrek/xcluster-ovls/blob/510cca913b632ae0a8506c45bf69d92bc1e6373e/k8s-load-balancing/k8s-load-balancing.sh#L72",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430954376",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "But yes, my thought was a config option.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431253807",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ChatGPT thinks IPTables proxy uses round-robbin algorithm, directing new requests to next destination in the list of pods.  Maybe that is what people think/expect in general - round-robin rather than random \ud83e\udd14\nhttps://chat.openai.com/share/20271990-883b-476b-b5b0-3c2d2b7efbaf",
                                                        "author": {
                                                            "login": "aroradaman"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431275620",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It should be configurable. For now random, round-robin and hash could be supported, https://wiki.nftables.org/wiki-nftables/index.php/Load_balancing. I think someone out there is already implementing maglev-hashing. But it may be a good idea to keep it simple, and just do random. After all, it has worked fine for the vast majority of K8s users.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431346263",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I advocate for trying to keep the same behavior as in iptables, but @danwinship is leading this feature, let's see what he thinks",
                                                        "author": {
                                                            "login": "aojea"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431510065",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 11308,
                        "title": "AGDR/ Configure Overview section",
                        "repository": {
                            "nameWithOwner": "empirical-org/Empirical-Core",
                            "primaryLanguage": {
                                "name": "Ruby"
                            }
                        },
                        "createdAt": "2023-12-05T22:07:43Z",
                        "mergedAt": "2023-12-07T22:05:37Z",
                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308",
                        "state": "MERGED",
                        "author": {
                            "login": "eadams17"
                        },
                        "editor": null,
                        "body": "## WHAT\r\nconfigure Overview section of the Admin Growth Diagnostic Reports to aggregate and display data from the backend\r\n\r\n## WHY\r\nnow that the necessary APIs are available, we want to configure them to feed into the frontend UI\r\n\r\n## HOW\r\n- add a bunch of logic for making the various API calls and then aggregating the data once they are all receive\r\n- update styling of the table\r\n\r\n**just a note that there are quite a few snapshots that were updated-- this is because I moved the `DataTable` header name inside of a <span> element for more styling flexibility**\r\n\r\n### Screenshots\r\n(If applicable. Also, please censor any sensitive data)\r\n<img width=\"1422\" alt=\"Screen Shot 2023-12-05 at 2 49 46 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/04015b1e-0b4d-4f12-b929-5dbbfc929931\">\r\n<img width=\"1087\" alt=\"Screen Shot 2023-12-05 at 2 49 58 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/ccfd416e-a64a-4afc-888b-2f869cbc984b\">\r\n<img width=\"1074\" alt=\"Screen Shot 2023-12-05 at 2 51 55 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/4cfc973f-8191-47f0-8a9d-7610cf29aa77\">\r\n<img width=\"1091\" alt=\"Screen Shot 2023-12-05 at 2 52 25 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/26929dfe-fc77-4635-8ef1-ffca074d19a5\">\r\n<img width=\"1412\" alt=\"Screen Shot 2023-12-05 at 2 52 57 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/fc9a645b-0256-4768-90e6-5b45bdb4bbcf\">\r\n\r\n### Notion Card Links\r\n(Please provide links to any relevant Notion card(s) relevant to this PR.)\r\nhttps://www.notion.so/quill/Admin-Diagnostic-Growth-Report-Overview-Frontend-8e22794d03f345af85b1d95a62e77098?pvs=4\r\n\r\nPR Checklist | Your Answer\r\n------------ | -------------\r\nHave you added and/or updated tests? |  yes\r\nHave you deployed to Staging? | yes\r\nSelf-Review: Have you done an initial self-review of the code below on Github? | yes\r\nSpec Review: Have you reviewed the spec and ensured this meets requirements and/or matches design mockups? | yes",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@anathomical I noticed this misspelling-- is there anywhere else I need to worry about updating this value? (I already updated the PUSHER_EVENT_KEY in the OverviewSection frontend file and didn't find anywhere else when searching the codebase, but I wanted to check with you just to be sure)",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1416344668",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I was trying to use the passedData convention we use in some other test files to stub the incoming data(i.e. https://github.com/empirical-org/Empirical-Core/blob/07fc91f79f408045129e496356cb61dddfb2842c/services/QuillLMS/client/app/bundles/PremiumHub/components/canvas/container.tsx#L13), but I kept hitting some issues. Since this is time sensitive and I want to give Peter S the chance to start testing ASAP, I opted to punt on adding more thorough testing in a later PR.",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1416348676",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@eadams17 Good catch.  I think those should be the only two places where that value is defined: once on the front-end and once on the back-end.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417732205",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "There's a lot of really good work in here -- just a couple of places I think we need to clean things up before they're ready to go to production.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think I would just write this as .timeframe-filter.disabled .dropdown .dropdown__control .dropdown__value-container .dropdown__single-value { color: #7f7f7f } to avoid all the nesting. Also, should that color be a variable?",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417651242",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I'm okay with it not being in this PR, but I think it should probably be the next one (can you work on the tests while Peter Sharkey does his review?)",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417657186",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This function is really hard for me to parse. I think we need to split out some interior functions and work on formatting for readability. I think this is a good use case for getting help from ChatGPT -- here's an initial stab at it that might be useful: https://chat.openai.com/c/97307d69-7fcd-4b56-9c38-f8e884c5be4d. I think we also probably want some tests specific to this method (the same way we would about this object if it were being sent up from a controller).",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417665504",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\"our guide\" is duplicated in the last sentence on this line.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417667771",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "All the ternary logic in here is effectively duplicated and feels a little messy. I think we should do something like:\nconst performanceButtons = [\n  {\n    tab: OVERVIEW,\n    displayName: 'Performance Overview',\n    inactiveIconSrc: barChartGreySrc,\n    activeIconSrc: barChartWhiteIconSrc\n  },\n  ...\n]\n\nThen iterate through each of them to generate the button elements in their own function.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417673394",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Should these querystrings be constants?",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417678006",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Love the clean up here.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417745706",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "It would be good to have these numbers as constants so it's clear what they mean.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417746192",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "A couple of minor notes, but overall this looks good to me.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "If we're going to leave this commented out after a merge, we should probably add a // TODO:  note to make it easier to find this later.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417736447",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think you can use toString().padLeft(2, '0') instead of adding these if length === 1 conditions.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417743304",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think this conditional is fine as-is, but as far as I know it should be impossible for a row to have a postDiagnosticScore but not a preDiagnosticScore, so I think practically speaking you can just make this if (!postDiagnosticScore) if you wanted, but like I said, it's fine as-is.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417762704",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Totally dig these as constants.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417808774",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Given that all of these widths seem to be the same value, I wonder if this shouldn't also be a constant even if it's not from a shared file??",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417809595",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "So this isn't currently in the back-end, but reviewing this suggests to me that we should also have groupByValue in here.  Let's just do that in a separate PR, though, to avoid adding complexity to this one.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417816161",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "good call! I'll update. I already flagged the hex code to Jack so that he can map it to a variable so just waiting for that (it's used quite a bit around the codebase)",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418165632",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "love that suggestion-- I'll make this update",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418173696",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "yeah, I can make these constants",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418175049",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "that makes sense-- I'll update to be more succinct",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418181270",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "sounds good to me!",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418183358",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@emilia-friedberg I can't seem to access the link-- can you maybe send the prompt you inputted so I can have better context?",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418188924",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "The refactor you did with that function is so much easier to parse (and will be easier to debug if we ever need to now) -- beautiful work! Love the tests, too. I flagged one small thing I think may have been an error in the refactor but I don't need to review again. Thank you so much for doing all that. Excited to see this ship!",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "love these tests!",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1419674860",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ec943c8",
                                                            "authoredDate": "2023-12-07T19:06:19Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "should these two have activeTab === tab as the condition instead of tab === OVERVIEW?",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1419676648",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ec943c8",
                                                            "authoredDate": "2023-12-07T19:06:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ahh yeah, good catch! I had resolved it in my other branch but not here",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1419700208",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ec943c8",
                                                            "authoredDate": "2023-12-07T19:06:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 57,
                        "title": "Added -accurate, reflective mouse click mode",
                        "repository": {
                            "nameWithOwner": "OthersideAI/self-operating-computer",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-12-02T06:35:09Z",
                        "mergedAt": "2023-12-03T16:35:46Z",
                        "url": "https://github.com/OthersideAI/self-operating-computer/pull/57",
                        "state": "MERGED",
                        "author": {
                            "login": "klxu03"
                        },
                        "editor": null,
                        "body": "Implemented -accurate, reflective mouse click mode.\r\n\r\nIf you add the -accurate tag when running operate, it will enable accurate mode. Now, whenever the model tries to click on anything, it will send another additional request to GPT giving it a chance to adjust its initial percentage guesses.\r\n\r\nI first extract out the initial guess of where the model tries to click, and then I take a screenshot of a smaller 200 x 200 pixel rectangle around the initial guess. I then upsample the image by doubling the dimensions so it's bigger to GPT (all done in capture_mini_screenshot_with_cursor) and then ask the model to refine its guess, giving it the previous image/message as context as well as the previous X Y coordinate guess it attempted and give it a chance to add and subtract minute percentages (accurate_mode_double_check).\r\n\r\nLocally, this configuration has significantly improved the accuracy of clicking on my desktop configuration (two monitors). Currently I've only implemented it for Linux, but if this approach is liked it can easily be adapted to other OS.\r\n\r\nIdea could be further improved if the add_grid_to_image is further improved such that in the accurate_mode adding grid case to the mini screenshot, if instead of (25%, 25%) in the first intersection, instead it was (-3%, -5%) for example so it was just the relative percentage change. This will probably allow the model to have an easier time adding and subtracting the proper amount in the refined click.\r\n\r\nAlso I almost arbitrarily chose 200 x 200 as the rectangle size. I just noticed that on my desktop, the model would often be wrong by more than 100 pixels away, but less than 200 pixels so I just chose that as the size.\r\n\r\nI would be happy to improve my code, or explain anything as wanted!\r\n\r\nPS: I also added poetry support. But I can delete this and just add all of those files to .gitignore",
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 734,
                        "title": "Install dependencies with Node.js instead of git modules",
                        "repository": {
                            "nameWithOwner": "sablier-labs/v2-core",
                            "primaryLanguage": {
                                "name": "Solidity"
                            }
                        },
                        "createdAt": "2023-12-04T13:51:36Z",
                        "mergedAt": "2023-12-15T12:34:27Z",
                        "url": "https://github.com/sablier-labs/v2-core/pull/734",
                        "state": "MERGED",
                        "author": {
                            "login": "andreivladbrg"
                        },
                        "editor": null,
                        "body": "Addresses https://github.com/sablier-labs/v2-core/discussions/508 and updates `prb-math` to `4.0.2`.\r\n\r\nSince this project is not going to have a `lib` directory anymore, it no longer makes sense to keep the re-exported types. This is because if the project is installed with `forge install sablier-labs/v2-core` it won't have recursive modules to install, and node modules can't be installed. And if the project is installed with `yarn add @sablier/v2-core`, it would automatically install those deps (prb-math and openzeppelin).",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "feedback below",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We need to find a way to shorten this syntax - it's too verbose.\nRelated: sablier-labs/v2-periphery#152",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427176754",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "what's up with this space",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427176889",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "more spaces",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427177008",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "more spaces, wow",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427177108",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Let's remove \"slow\" - can be misunderstood to mean that Foundry is slow. The \"recommended\" note above is sufficient.",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427177732",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Shouldn't this be 4.x? Or 4.0.x?\nJust thinking out loud",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427178455",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Will these work with pnpm node modules system, @andreivladbrg? See what I asked you here\nCan you please perform some tests?",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427179207",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "dunno what's up with github, maybe a bug on them (similar to .sol)\nif you actually got to look at the file, it looks good\n\n  \n    \n      v2-core/.github/workflows/ci-deep.yml\n    \n    \n        Lines 93 to 108\n      in\n      96f89cf\n    \n  \n  \n    \n\n        \n          \n                   run: \"FOUNDRY_PROFILE=optimized forge build\" \n        \n\n        \n          \n            \n        \n\n        \n          \n                 - name: \"Build the test contracts\" \n        \n\n        \n          \n                   run: \"FOUNDRY_PROFILE=test-optimized forge build\"   \n        \n\n        \n          \n            \n        \n\n        \n          \n                 - name: \"Cache the build so that it can be re-used by the other jobs\" \n        \n\n        \n          \n                   uses: \"actions/cache/save@v3\" \n        \n\n        \n          \n                   with: \n        \n\n        \n          \n                     key: \"foundry-build-${{ github.sha }}\" \n        \n\n        \n          \n                     path: | \n        \n\n        \n          \n                       cache \n        \n\n        \n          \n                       out \n        \n\n        \n          \n                       out-optimized \n        \n\n        \n          \n              \n        \n\n        \n          \n                 - name: \"Add build summary\" \n        \n\n        \n          \n                   run: |",
                                                        "author": {
                                                            "login": "andreivladbrg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427360409",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "answered here #734 (comment)",
                                                        "author": {
                                                            "login": "andreivladbrg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427360695",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "answered here #734 (comment)",
                                                        "author": {
                                                            "login": "andreivladbrg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427360747",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think you got my point wrong, as also said in that discussion, pnpm places only the third party deps under the node_modules/.pnpm.\nIf you clone the repo, you can run pnpm install and its deps would be place under node_modules/, so we don't have to worry about the remappings for the projects itself.\nWhat I mean when I say that we should recommend yarn add  instead of pnpm add is when an integrator (as allo was) should add to their project our package.  For them, when adding our package, the third party deps are openzeppelin/contracts/ and @prb/math/:\n\n  \n    \n      v2-core/package.json\n    \n    \n        Lines 13 to 16\n      in\n      96f89cf\n    \n  \n  \n    \n\n        \n          \n           \"dependencies\": { \n        \n\n        \n          \n             \"@openzeppelin/contracts\": \"4.9.2\", \n        \n\n        \n          \n             \"@prb/math\": \"4.0.2\" \n        \n\n        \n          \n           }, \n        \n    \n  \n\n\nMore explantions about CLIs:\n\npnpm add : Installs a package and any packages that it depends on. https://pnpm.io/cli/install\npnpm install : is used to install all dependencies for a project. https://pnpm.io/cli/add\n\n\nCan you please perform some tests?\n\nDid several tests when I've written my answer here.",
                                                        "author": {
                                                            "login": "andreivladbrg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427364776",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "not sure what you mean:",
                                                        "author": {
                                                            "login": "andreivladbrg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427378710",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I've managed to cache the node_modules dir and re-use it, seems to work.",
                                                        "author": {
                                                            "login": "andreivladbrg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427402198",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I wasn't referring to the run: \"pnpm install\" step. I was referring to all of these separate steps - it would be great if we could have a shared job. See the linked issue.\n\nI've managed to cache the node_modules dir and re-use it\n\nThat's not what that cache: key does. It only caches global packages. See:\n\nhttps://github.com/actions/setup-node?tab=readme-ov-file#caching-global-packages-data\nactions/setup-node#612",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427850542",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Oh nevermind I looked at the code now and I see what you did.\nGreat idea to cache the node_modules!",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427851860",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@andreivladbrg there's no bug in GitHub. There were actual extra spaces there that you added in this PR. I have removed them via my latest commit.",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427852336",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "On a side note - it looks like you don't have Prettier properly configured locally. Please make sure that you follow the company's VSCode setup.\nCMD+S auto-formatted the YAML file on my end.",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427853164",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This step is now redundant given that we are caching node_modules.",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427871981",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2a8b0b4",
                                                            "authoredDate": "2023-12-14T23:28:29Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "There's a difference between 4.0.2 and 4.x and 4.0.x in the context of peer dependencies.\nhttps://chat.openai.com/share/cc9100d2-7294-42bc-b579-a3ef5c79e194\nAnyway, we can leave it as 4.0.2 for now; this was more so a reminder for me to have a look later on.",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427883018",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think you got my point wrong\n\nI didn't; I was just unclear in my question.\n\nIf you clone the repo, you can run pnpm install and its deps would be place under node_modules/, so we don't have to worry about the remappings for the projects itself.\n\nI know. I was referring to third-party developers installing V2 Core. Would the remappings still work recursively?\nSorry for not being clear earlier.\n\nWhat I mean when I say that we should recommend yarn add instead of pnpm add is when an integrator\n\nThis is equivalent to asking the integrators to switch over to Pnpm instead of Yarn. And, as I've asked you in the discussion: Surely there must be a way to force Pnpm to not put the dependencies under \"node_modules/.pnpm\" without asking users to manually install those packages?\n\nDid several tests when I've written my answer #508 (comment).\n\nThanks but you missed one of my questions. Let's follow up there.",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427886828",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "96f89cf",
                                                            "authoredDate": "2023-12-14T15:25:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "the slither-analyze job is going to be removed from ci.yml and we will need the pnpm installin its own file, see #726",
                                                        "author": {
                                                            "login": "andreivladbrg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427895278",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2a8b0b4",
                                                            "authoredDate": "2023-12-14T23:28:29Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Fine. In this case, it doesn't really matter what we do here - can you keep my latest commit as is, please?",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-core/pull/734#discussion_r1427898296",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2a8b0b4",
                                                            "authoredDate": "2023-12-14T23:28:29Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 2394,
                        "title": "Add support for `CollapsedDocStrings` in `@meta` block",
                        "repository": {
                            "nameWithOwner": "JuliaDocs/Documenter.jl",
                            "primaryLanguage": {
                                "name": "Julia"
                            }
                        },
                        "createdAt": "2024-01-08T03:51:58Z",
                        "mergedAt": "2024-02-04T23:41:31Z",
                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394",
                        "state": "MERGED",
                        "author": {
                            "login": "goerz"
                        },
                        "editor": null,
                        "body": "Setting `DocStringsCollapsed = true` in the `@meta` block of a particular page essentially clicks the \"Collapse all docstrings\" in the navigation bar after the page loads, collapsing all docstrings on that page.\r\n\r\nI think the approach of just having JavaScript click the collapse button is the right one here: First, I'm not sure that it would be possible to write out the page in a collapsed state, or at least not without doing some pretty gnarly rewrites of the `HTMLWriter`. More importantly, rendering the page expanded and then collapsing it with JavaScript seems like the right thing to do from an accessibility standpoint: We'd want the page to still be useful without JavaScript. I've been known to access API documentation in the terminal with `w3m`, so not relying on JavaScript to render the core content is something I actually care about. Screenreaders probably also wouldn't like if all docstrings initially rendered as `hidden`.\r\n\r\nCloses #2282",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I feel that ideally we'd do this by statically generating the necessary HTML. It looks like we use display: none on the section tags.. and then update some other stuff. Ideally, we'd have a class on the article tag that toggles everything.\nHow much effort would you be willing to put into this? I didn't test this yet, but I assume that this works, and we can merge this as is, and refactor later as well.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1451844771",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "More importantly, rendering the page expanded and then collapsing it with JavaScript seems like the right thing to do from an accessibility standpoint: We'd want the page to still be useful without JavaScript.\n\nAh.. that is a fair point actually. We should indeed make sure that it loads uncollapsed if you don't have JS enabled. So now I'm coming around to this approach.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1451845250",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Right. I'd still advocate for going with the approach in this PR. I started out with trying to write out the collapsed HTML if the option is set until I realized that:\n(a) It's much more difficult to implement that way. In fact, I'm not sure that I'd be able to do it in any reasonable amount of time.\n(b) \"Collapsed\" means display: none, which removes the content entirely without JS, which seems like a bad idea.\nThe test in the PR only checks for the presence of the injected JS. I don't think there's much I can do beyond that. I did test locally that the JS does what it's supposed to (very nicely, in fact). What I could do as an additional test is to use the feature in the Documenter documentation. Maybe collapsing all the Internal API pages by default?",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1451966296",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah, let's go with the JS approach.\nIt currently does have the problem that you can see all the docstrings collapsing when you navigate to the page though. Maybe @Hetarth02 has some ideas how to work around that.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452800293",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Interesting, I will definitely take a look into this.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452856024",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@Hetarth02 I'd appreciate that! You might be better at JS than me. I'm having real trouble getting it to load correctly. In my first iteration, it worked fine locally but only 90% of the time in Chrome and only 1% of the time in Safari. I'm guessing the script was running too early. In the current iteration, I've tried to move the <script> tag to the end of the file, but that's still behaving the same way (i.e., not working in Safari). I also tried putting it in an external script (I think local scripts load before external scripts, which may be part of the problem), but that was much more complicated to implement, and then just didn't work at all. I can push that branch again somewhere if you'd like to take a look at it.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452874609",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It currently does have the problem that you can see all the docstrings collapsing when you navigate to the page though\n\nYeah, I can't decide whether it's a problem or whether I actually kinda like it. But in any case, I think jQuery is handling the collapse animation. Maybe there's a way to temporarily disable the animation or at least speed it up?",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452875696",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes, Jquery handles the animation and there is a way to speed it up.\nI also think that, initially appearing as open then getting closed is okay.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452878063",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I can push that branch again\n\nPushed to https://github.com/JuliaDocs/Documenter.jl/tree/mg/meta-docstrings-collapsed2. This one doesn't work at all, though, and I'm not sure why.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452883918",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'm somewhat out of my depth when it comes to JS. Does anything from the discussion I had with ChatGPT seem useful here? https://chat.openai.com/share/a5c0b599-79f0-46e5-9840-74984896d398\nThe suggestion\n\nModify documenter.js to dispatch a custom event when it has fully loaded and executed. Then, in your script at the end of the page, add an event listener for this custom event before executing your code.\n\ndoesn't sound entirely implausible.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1453859719",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz Which branch should I check from?\nmg/meta-docstrings-collapsed2 or mg/meta-docstrings-collapsed",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459539083",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Preferably, mg/meta-docstrings-collapsed. The other one was an attempt to put the JS in a separate script file. It was both more complicated and didn't actually work, but I just wanted to keep the branch around in case mg/meta-docstrings-collapsed doesn't work out and I need to get back to it.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459554448",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "mg/meta-docstrings-collapsed works perfectly when looking at documentation locally with LiveServer, but doesn't work reliably when looking at the online documentation, e.g. at https://documenter.juliadocs.org/previews/PR2394/lib/internals/anchors/. In Chrome, it works most of the time, in Safari, it does not work most of the time. Presumably, the issue is the asynchronous execution of JS and the code that clicks the collapse button firing too early.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459561035",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz So, I fiddled around a bit. I have found a way which I think will work.\nBasically, what we will do is save all the @meta flags in data attribute of a div element. Something like below,\n<div data-docstringscollapsed=\"true\"></div>\nThen add a js script, which will perform the necessary actions for each flags. For example, like this\n// assets/html/js/metadata.js\n\n// libraries: jquery\n// arguments: $\n\nlet docstringscollapsed = $(\"div[data-docstringscollapsed]\").data();\n\nif (docstringscollapsed) {\n  $(\"#documenter-article-toggle-button\").click();\n}\nDoing this will always ensure that, all the scripts and DOM content will be loaded. Hence, it might mitigate what we are currently facing.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459634416",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "That sounds good! Do you want to just push to the mg/meta-docstrings-collapsed branch? I'm assuming you have permissions \u2013 or make a new branch, if you prefer.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459644657",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think I have the necessary permissions to do so.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459697400",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I can merge from https://github.com/Hetarth02/Documenter.jl/ into my PR then. Let me know which branch.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459709672",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Alright, will do so. Let me iron some things out and will ping you when I am done.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459717966",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz Sorry for the delay, I have pushed the changes to Draft-PR-2394. Also, made an PR to this branch.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463774307",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "No worries! Thanks for taking a look! I'll check it out.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463790058",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz Just FYI, this is just a rudimentary implementation from my side. There is of course room for improvement in logic.\ud83d\ude05",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463912569",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It works perfectly! Thanks for coming up with the approach that makes this reliable!",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463956341",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This seems fine to me. It still shows the close-animation after the page is loaded. I don't mind it that much, but @mortenpi might still prefer if we speed it up.\n@Hetarth02 Do you know what to add to control the animation speed?",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463958533",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fe1b190",
                                                            "authoredDate": "2024-01-23T20:27:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Seems a little unrelated to the PR, but I just kept it in",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463959065",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fe1b190",
                                                            "authoredDate": "2024-01-23T20:27:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Marked as \"experimental\" so we can still change this even after the PR is merged/released. For example, #2394 (comment)",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463983148",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6c43682",
                                                            "authoredDate": "2024-01-23T20:55:16Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think I figured it out: e5b84d3\nThe currently deployed preview documentation disables the animation completely. Better? I'm okay with either.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1464233043",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fe1b190",
                                                            "authoredDate": "2024-01-23T20:27:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This whole thing probably needs to be in a $(document).ready(function () { ... }?",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1471955796",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6cff39e",
                                                            "authoredDate": "2024-01-24T02:53:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Let's try it! https://documenter.juliadocs.org/previews/PR2394/ should now have that change. Of course, all I can say is that it continues to work for me, so you'll have to let us know :-)",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1472315311",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6cff39e",
                                                            "authoredDate": "2024-01-24T02:53:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Eh, yea, let's just keep it on the top-level. Doing namespacing adds other kinds of complexity. Some of these options will just be ignored by some backends.\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            - `DocStringsCollapsed`: if `true`, collapse all docstrings after loading the page (experimental).\n          \n          \n            \n            - `DocStringsCollapsed`: for output formats that support this (i.e. only [`HTML`](@ref Documenter.HTML) currently), if set to `true`, render all docstrings as collapsed by default.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1477009690",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6c43682",
                                                            "authoredDate": "2024-01-23T20:55:16Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "@goerz I took the liberty of pushing a DocStringsCollapsed -> CollapsedDocString bikeshed. Happy to revert it if you prefer DocStringsCollapsed. From my side, I'm happy if we merge this!",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjYw",
                "hasNextPage": true,
                "hasPreviousPage": true,
                "startCursor": "Y3Vyc29yOjUx"
            },
            "issueCount": 101
        }
    }
}