{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 22,
                        "title": "ODY-276 About\u30da\u30fc\u30b8\u306e\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u5bfe\u5fdc",
                        "repository": {
                            "nameWithOwner": "daydule/odyssey-frontend",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-12-16T02:35:41Z",
                        "mergedAt": "2023-12-27T12:46:54Z",
                        "url": "https://github.com/daydule/odyssey-frontend/pull/22",
                        "state": "MERGED",
                        "author": {
                            "login": "atoook"
                        },
                        "editor": {
                            "login": "atoook"
                        },
                        "body": "# \u4e8b\u524d\u78ba\u8a8d\r\n\r\n- [x] PR\u524d\u306b\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u305f\u304b\r\n- [x] \u6a5f\u5bc6\u60c5\u5831\u3092\u542b\u3093\u3067\u3044\u306a\u3044\u304b\r\n- [x] [\u958b\u767a\u30eb\u30fc\u30eb](https://daydule.atlassian.net/wiki/spaces/DAYDULE/pages/9765029)\u3092\u5b88\u3063\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u304b\r\n- [x] \u5358\u4f53\u30c6\u30b9\u30c8\u304c\u5168\u3066OK\u306b\u306a\u3063\u3066\u3044\u308b\u304b\uff08\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5834\u5408SKIP\uff09\r\n- [x] \u6700\u65b0\u306e`develop`\u30d6\u30e9\u30f3\u30c1\u3092\u53cd\u6620\u3057\u3066\u3044\u308b\u304b\r\n- [x] \u30d3\u30eb\u30c9\u30a8\u30e9\u30fc/ESLint\u30a8\u30e9\u30fc\u306f\u8d77\u304d\u3066\u3044\u306a\u3044\u304b\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u512a\u5148\u5ea6\uff08\u3069\u308c\u304b\u4e00\u3064\uff09\r\n\r\n- [ ] \u3059\u3050\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] 3\u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] 7\u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u306e\u5ea6\u5408\u3044\r\n\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3057\u3063\u304b\u308a\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30ef\u30fc\u306b\u3088\u308b\u52d5\u4f5c\u78ba\u8a8d\r\n\r\n- [ ] @tom-takeru \r\n- [ ] @Mellbrother \r\n- [ ] @kzk27 \r\n\r\n# \u3084\u3063\u305f\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n- \u4ee5\u4e0b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u5bfe\u5fdc\r\n AboutCardWithImage\r\n AboutCardWithText\r\n- AboutCardWithImage\u306eisImageLeft Props\u3092\u524a\u9664\u3057\u3066\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u81ea\u4f53\u3092Left/Right\u306b\u5206\u5272\uff08\u4f1a\u8b70\u3067\u5171\u6709\u6e08\uff09\r\n \u203b\u7406\u7531\uff11\uff1a\u753b\u9762\u30b5\u30a4\u30ba\u53d6\u5f97\u5f8c\u306bisImageLeft\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u51fa\u3057\u308f\u3051\u3057\u3088\u3046\u3068\u3059\u308b\u3068ssr\u51fa\u6765\u306a\u304f\u306a\u308b\u305f\u3081\r\n \u203b\u7406\u7531\uff12\uff1aAboutCardWithImage\u3092csr\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3068\u3053\u308d\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9NG\u304c\u89e3\u6d88\u3067\u304d\u306a\u304b\u3063\u305f\u305f\u3081 \r\n\r\n# \u3084\u3089\u306a\u3044\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u3066\u3082\u304a\u304b\u3057\u304f\u306a\u3044\u3051\u3069\u3084\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u304a\u3051\u308b\u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u305d\u306e\u4ed6<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u4e0a\u8a18\u306e\u9805\u76ee\u4ee5\u5916\u306b\u4f1d\u3048\u308b\u3079\u304d\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-12-26T09:34:15Z",
                                    "bodyText": "\u4ee5\u4e0b\u3092\u5225\u30c1\u30b1\u30c3\u30c8\u3067\u5bfe\u5fdc\u3059\u308b\u5206\u3068\u3057\u3066\u8d77\u7968\u3057\u307e\u3057\u305f\uff01 \u3053\u306ePR\u304c\u30de\u30fc\u30b8\u3055\u308c\u3066\u304b\u3089\u3001\u3069\u3053\u304b\u3067\u512a\u5148\u5ea6\u3092\u898b\u3066\u3084\u308a\u307e\u3057\u3087\u3046\uff01 \u672cPR\u3067\u5bfe\u5fdc\u53ef\u80fd\u3067\u3057\u305f\u3089\u3001\u5bfe\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u30c1\u30b1\u30c3\u30c8\u3092\u524a\u9664\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\uff01\n\nAboutCardWithText.tsx\u3000\u304c\u30e2\u30d0\u30a4\u30eb\u306e\u6642\u306b\u753b\u9762\u3044\u3063\u3071\u3044\u306b\u5e83\u304c\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u4fee\u6b63\nAboutCardWith(Right/Left).stories.tsx\u306b\u30b9\u30de\u30db\u5e45\u3067\u306e\u30b9\u30c8\u30fc\u30ea\u3092\u8ffd\u52a0\n\n1\u306b\u3064\u3044\u3066 \n\n\n\n[AboutCardWithText.tsx\u3000\u304c\u30e2\u30d0\u30a4\u30eb\u306e\u6642\u306b\u753b\u9762\u3044\u3063\u3071\u3044\u306b\u5e83\u304c\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u4fee\u6b63]\u3000\u306f\u5e45\u304c\u4f55px\u306e\u3068\u304d\u306b\u518d\u73fe\u3057\u307e\u3057\u305f\u304b\uff1f\u79c1\u306e\u74b0\u5883\u3060\u3068\u30de\u30fc\u30b8\u30f3\u304c\u52b9\u3044\u3066\u3044\u3066\u518d\u73fe\u3067\u304d\u3066\u3044\u306a\u3044\u3067\u3059\u3002\u3002\u3002\n\n\n[AboutCardWith(Right/Left).stories.tsx\u306b\u30b9\u30de\u30db\u5e45\u3067\u306e\u30b9\u30c8\u30fc\u30ea\u3092\u8ffd\u52a0]\u306f\u4ee5\u4e0b\u6dfb\u4ed8\u306e\u3088\u3046\u306bStorybook\u306e\u6a5f\u80fd\u3067\u753b\u9762\u30b5\u30a4\u30ba\u306e\u8a2d\u5b9a\u3092\u5909\u3048\u3066\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\u3067\u5bfe\u5fdc\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\uff1f",
                                    "url": "https://github.com/daydule/odyssey-frontend/pull/22#issuecomment-1869406488",
                                    "author": {
                                        "login": "atoook"
                                    }
                                },
                                {
                                    "createdAt": "2023-12-26T12:32:30Z",
                                    "bodyText": "[AboutCardWithText.tsx\u3000\u304c\u30e2\u30d0\u30a4\u30eb\u306e\u6642\u306b\u753b\u9762\u3044\u3063\u3071\u3044\u306b\u5e83\u304c\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u4fee\u6b63]\u3000\u306f\u5e45\u304c\u4f55px\u306e\u3068\u304d\u306b\u518d\u73fe\u3057\u307e\u3057\u305f\u304b\uff1f\u79c1\u306e\u74b0\u5883\u3060\u3068\u30de\u30fc\u30b8\u30f3\u304c\u52b9\u3044\u3066\u3044\u3066\u518d\u73fe\u3067\u304d\u3066\u3044\u306a\u3044\u3067\u3059\u3002\u3002\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u30d6\u30e9\u30f3\u30c1\u304c\u53e4\u3044\u3060\u3051\u3067\u3057\u305f\u3001\u3001\u3001\u3002\u3059\u307f\u307e\u305b\u3093 \ud83d\ude47\n\n[AboutCardWith(Right/Left).stories.tsx\u306b\u30b9\u30de\u30db\u5e45\u3067\u306e\u30b9\u30c8\u30fc\u30ea\u3092\u8ffd\u52a0]\u306f\u4ee5\u4e0b\u6dfb\u4ed8\u306e\u3088\u3046\u306bStorybook\u306e\u6a5f\u80fd\u3067\u753b\u9762\u30b5\u30a4\u30ba\u306e\u8a2d\u5b9a\u3092\u5909\u3048\u3066\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\u3067\u5bfe\u5fdc\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u3059\u307f\u307e\u305b\u3093\u3001\u3001\u3001\u3002\u5b8c\u5168\u306b\u5fd8\u308c\u3066\u3044\u307e\u3057\u305f\uff01",
                                    "url": "https://github.com/daydule/odyssey-frontend/pull/22#issuecomment-1869513396",
                                    "author": {
                                        "login": "tom-takeru"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "\u4ee5\u4e0b\u3092\u5225\u30c1\u30b1\u30c3\u30c8\u3067\u5bfe\u5fdc\u3059\u308b\u5206\u3068\u3057\u3066\u8d77\u7968\u3057\u307e\u3057\u305f\uff01\n\u3053\u306ePR\u304c\u30de\u30fc\u30b8\u3055\u308c\u3066\u304b\u3089\u3001\u3069\u3053\u304b\u3067\u512a\u5148\u5ea6\u3092\u898b\u3066\u3084\u308a\u307e\u3057\u3087\u3046\uff01\n\u672cPR\u3067\u5bfe\u5fdc\u53ef\u80fd\u3067\u3057\u305f\u3089\u3001\u5bfe\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u30c1\u30b1\u30c3\u30c8\u3092\u524a\u9664\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\uff01\n\nAboutCardWithText.tsx\u3000\u304c\u30e2\u30d0\u30a4\u30eb\u306e\u6642\u306b\u753b\u9762\u3044\u3063\u3071\u3044\u306b\u5e83\u304c\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u4fee\u6b63\nAboutCardWith(Right/Left).stories.tsx\u306b\u30b9\u30de\u30db\u5e45\u3067\u306e\u30b9\u30c8\u30fc\u30ea\u3092\u8ffd\u52a0\n\n1\u306b\u3064\u3044\u3066",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u3053\u308c\u3063\u3066\u306a\u3093\u306e\u305f\u3081\u306b\u5165\u308c\u305f\u3093\u3067\u3059\u304b\uff1f",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436242042",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ChatGPT\u306b\u8cea\u554f\u3060\u3051\u3057\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u3001\u77e5\u3089\u3093\u3068\u8a00\u308f\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3001\u3001\u3001\u3002\nhttps://chat.openai.com/share/adc90fb5-54c2-4f1c-8b17-e2928e556b02",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436248823",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@tom-takeru\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b.tsx\u306e\u62e1\u5f35\u5b50\u3092\u3064\u3051\u3066import\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u3059\u304c\uff08\u4fee\u6b63\u524d\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u8ffd\u52a0\u3057\u305f\u8a18\u61b6\u304c\u3042\u308a\u307e\u3059\uff09\u304c\u3001\u4e0d\u8981\u306a\u306e\u3067\u524a\u9664\u3057\u307e\u3059\u3002\nimport { XXX } from 'XXXX.tsx';",
                                                        "author": {
                                                            "login": "atoook"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436360202",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM\uff01 \ud83d\udc24",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 875,
                        "title": "feature/pos-syncing-and-steady-state",
                        "repository": {
                            "nameWithOwner": "deso-protocol/core",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-12-16T17:59:41Z",
                        "mergedAt": "2024-02-07T20:39:14Z",
                        "url": "https://github.com/deso-protocol/core/pull/875",
                        "state": "MERGED",
                        "author": {
                            "login": "tholonious"
                        },
                        "editor": null,
                        "body": "",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2024-02-02T05:35:21Z",
                                    "bodyText": "In pos_snapshot_entries.go, please verify that this assumption is still true:\nfunc (bav *UtxoView) ComputeSnapshotEpochNumberForEpoch(epochNumber uint64) (uint64, error) {\n\tif epochNumber < SnapshotLookbackNumEpochs {\n\t\t// We want to return 0 in this case and not error. We start snapshotting with our StateSetup block height,\n\t\t// so we should have the correct number of snapshots and not hit this case once we hit the ConsensusCutover\n\t\t// block height. This case will only be hit immediately following the StateSetup block height. We run one\n\t\t// OnEpochCompleteHook right away on the StateSetup block height which will increment our CurrentEpochNumber\n\t\t// from zero (the starting default) to one. Then we wait one epoch and run our second OnEpochCompleteHook to\n\t\t// increment our CurrentEpochNumber from one to two. At this point, we will have the correct number of\n\t\t// snapshots and no longer hit this edge case.\n\t\t//\n\t\t// The problem is what about snapshot values we need to use in that first block where CurrentBlockHeight =\n\t\t// StateSetup block height and then the first epoch after that? The only snapshot values that we use relate\n\t\t// to our new PoS txn types. We pull the snapshot GlobalParamsEntry to retrieve the StakeLockupEpochDuration\n\t\t// and the ValidatorJailEpochDuration. Both of these impact the new PoS txn types which are unlocked after\n\t\t// the StateSetup block height. The ValidatorJailEpochDuration value doesn't really matter since no validators\n\t\t// will be jailed until the ConsensusCutover block height. For the StakeLockupEpochDuration (and all other\n\t\t// snapshot GlobalParamsEntry values), if there is no snapshot value, we return an empty GlobalParamsEntry with\n\t\t// just our defaults, which is what we intend. There's one other small edge case here which is if we update the\n\t\t// StakeLockupEpochDuration parameter within that first block (which would be weird and should not happen),\n\t\t// then that value will take immediate effect in the first epoch with no lagged snapshot wait period.\n\t\treturn 0, nil\n\t}\n\treturn SafeUint64().Sub(epochNumber, SnapshotLookbackNumEpochs)\n}",
                                    "url": "https://github.com/deso-protocol/core/pull/875#issuecomment-1922865425",
                                    "author": {
                                        "login": "diamondhands0"
                                    }
                                },
                                {
                                    "createdAt": "2024-02-02T05:55:04Z",
                                    "bodyText": "AHA! Now I'm pretty sure I've got you good. In ConnectBlock(), the first time you call RunEpochCompleteHook() at height = cutover1, you call it with blockHeader.ProposedInView, which is ZERO because it's a PoW block. This trickles all the way down through runEpochCompleteEpochRollover to computeNextEpochEntry where this happens:\n\tnextEpochEntry := &EpochEntry{\n\t\tEpochNumber:                     currentEpochNumber + 1,\n\t\tInitialBlockHeight:              currentEpochFinalBlockHeight + 1,\n\t\tInitialView:                     currentEpochFinalView + 1,\n\t\tFinalBlockHeight:                nextEpochFinalBlockHeight,\n\t\tCreatedAtBlockTimestampNanoSecs: nextEpochBlockTimestampNanoSecs,\n\t}\n\nCan you see what's wrong here? currentEpochFinalView is ZERO when it should (I think) be blockHeight. If you call GetView() instead of Header.ProposedInView, I think it should fix everything. As it's written now, I think you will set InitialView = 0 + 1 until you get to cutover2, at which point I'm not really sure what happens yet...",
                                    "url": "https://github.com/deso-protocol/core/pull/875#issuecomment-1922887550",
                                    "author": {
                                        "login": "diamondhands0"
                                    }
                                },
                                {
                                    "createdAt": "2024-02-02T06:09:40Z",
                                    "bodyText": "At height = cutover2, you are called processBlockPoS on a PoW block that does not have block.Header.ProposerVotingPublicKey nor block.Header.ProposerVotePartialSignature set (I think). At minimum, I can't see how these fields would be set for the first call of processBlockPoS. If this is the case, I'm confused about how we're managing to pass through processBlockPoS > validateLeaderAndQC > hasValidProposerPartialSignaturePoS since the latter has this check at the top:\n\tvotingPublicKey := block.Header.ProposerVotingPublicKey\n\tproposerPartialSig := block.Header.ProposerVotePartialSignature\n\t// If the proposer partial sig is nil, we can't validate it. That's an error.\n\tif proposerPartialSig.IsEmpty() {\n\t\treturn false, nil\n\t}\n\nI'm going to keep reading...",
                                    "url": "https://github.com/deso-protocol/core/pull/875#issuecomment-1922915316",
                                    "author": {
                                        "login": "diamondhands0"
                                    }
                                },
                                {
                                    "createdAt": "2024-02-04T04:33:25Z",
                                    "bodyText": "In block_view.go there is a line effectiveFeeU256 := failingTransactionRate.Mul(failingTransactionRate, failingTransactionFee). Change it to effectiveFeeU256 := uint256.NewInt().Mul(failingTransactionRate, failingTransactionFee)\nAlways use NewInt when assigning to a new variable.",
                                    "url": "https://github.com/deso-protocol/core/pull/875#issuecomment-1925577793",
                                    "author": {
                                        "login": "diamondhands0"
                                    }
                                },
                                {
                                    "createdAt": "2024-02-04T04:35:29Z",
                                    "bodyText": "Also in block_view.go:3928, I think you could overflow after the multiplication.\n\teffectiveFeeU256 := failingTransactionRate.Mul(failingTransactionRate, failingTransactionFee)\n        // Add a check for overflow here. \n\teffectiveFeeU256.Div(effectiveFeeU256, basisPointsAsUint256)\n\nI think for multiplication, you check that the resulting value is bigger than each of the two multiplied values.",
                                    "url": "https://github.com/deso-protocol/core/pull/875#issuecomment-1925578054",
                                    "author": {
                                        "login": "diamondhands0"
                                    }
                                },
                                {
                                    "createdAt": "2024-02-04T04:38:12Z",
                                    "bodyText": "Also in block_view.go:_connectFailingTransaction on line 3938, I think you're comparing a raw txn fee to a fee rate:\n\tif effectiveFee < gp.MinimumNetworkFeeNanosPerKB {\n\t\teffectiveFee = gp.MinimumNetworkFeeNanosPerKB\n\t}\n\nTo fix this, I think you need to multiply by 1k and divide by the size of the txn, and maybe add one in the comparison to cover truncation. Then you need to set effectiveFee = minimum * 1000 / txnSize.\nAlso add some tests to check this.",
                                    "url": "https://github.com/deso-protocol/core/pull/875#issuecomment-1925578407",
                                    "author": {
                                        "login": "diamondhands0"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm seed hex not mnemonic? I guess because (mnemonic)->seedHex is a one-way operation, so everyone will have the latter but NOT everyone will have the former right?",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452664410",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "So I think we're modifying the bestHeaderChain independent of the bestChain, even though we want them to be in-sync. I think it's fine, just feels a bit scary to have two things that need to remain consistent being modified independently.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452844792",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ugh it deleted this long comment I wrote and now I have to type it again... I was saying that this could break frontends because they have the following flow:\n\nBackend constructs txn and sends it to frontend to sign\nFrontend signs and sends to /submit-transaction\n/submit-transaction calls BroadcastTransaction (this thing) and returns\nThen the frontend refreshes under the assumption the txn is in the mempool and its effect will show up after the refresh.\n\nIf we delete this thing then it could cause frontends to miss the txn's effect on refresh. A few ways to fix this:\n\nHave frontend wait for inclusion in a block, which will take a bit of time. Not a big deal. We could wait for a post but maybe not a diamond or things like that.\nAlternatively we could be smarter about how we render things in the mempool in the frontend.\n\nI don't think we have to worry about this for now. I'm just mentioning for when you encounter it later.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452848504",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I've been thinking about this. Better to make it a param or flag? I think flag to start would be good so we can tune it. Eventually for Revolution it needs to be more static, but that can wait...",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452852985",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I will come back to this, but we used to use this in the steady-state to keep the node in sync as follows:\n\nWe call GetHeaders on a peer\nThey send us a header bundle\nBased on that we may or may not fetch a block\n\nIf we're not doing the above, then we must have a different way of fetchin ga block when the consensus is running. Is this because blocks are \"pushed\" to us? I'll keep reading.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452855266",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think there could be a problem if you hold the the ChainLock.RLock() while you wait for this thing. Maybe not. It does take like a whole second or two, though, and I think kindof bad to hold the RLock for that long maybe idk. Think about it.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452858510",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This makes me a little nervous as there might be edge cases where it's rejected that we haven't thought of, but I can't think of any so probably OK.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452868076",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Huh. That's all we had to add eh? Pretty elegant...",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452868783",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Mention why we need this. I saw it but nice to have it there.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452879464",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm, good call. We really only need to hold the ChainLock.RLock() while reading the blockTip's height. I've updated the code to reflect that",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456051682",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yup. That's all we need to integrate the new consensus :)",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456055369",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "AFAIK, there isn't a standard derivation path to convert a BIP39 seed phrase to BLS private key. So we use the standard seedHex -> bls.PrivKey conversion provided by the FlowCrypto package.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456063493",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456067757",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes, we want to make this a flag that's easily tunable via ENV variables. The comment to make it a param was just ambiguous. I've fixed it",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456081777",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Agreed. If a txn is accepted by the PoW mempool, then it must be accepted by the PoS mempool too. The PoS mempool has a strictly relaxed set of txn acceptance rules compared to its PoW counterpart. I can't think of any edge cases either, so this should be safe",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456089539",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes! We have a different and simpler way of fetching blocks once the new consensus is running:\n\nBlocks are pushed to us without us having to request them in the new consensus\nWhenever we see an orphan block with an unknown ancestor, we request the missing ancestor a peer until we have a fully connected chain",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456095635",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm, I'm not sure this is much of an issue. I did notice in ProcessBlockPoW that we call processHeaderPoW in a way that mutates the bestHeaderChain independently, so I figured this would be safe.\nI'll noodle on this to see if we can better couple mutations to the bestChain and bestHeaderChain here while keeping the reorgs simple. LMK if you have a strong opinion on this one",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456099796",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Start this out as a configurable flag on the node.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460171949",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This seems like it should totally work, but a thought I had is it may be inefficient in the sense that you will do a lot of round-trips if you get a far-ahead block. For example, if the peer has A -> B -> C -> D -> E -> F and you're at just A and the peer sends you F, then you will try to connect F, fail, then request E, then you'll get E, try to connect it fail and request D, and so on. I don't think we need to optimize this right now because nodes will generally be nearly-synced at this stage. But leave a comment that this behavior exists if it's correct.\nOne way to fix this is to send your tip inside the GetBlocks message, and then the node can auto-send you everything from your tip to its tip. But again I think this is probably a premature optimization we don't need to make right now. If you like that optimization then leave it as a TODO for fun.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460183510",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Btw just added context: The above suggestion is a simplified version of what GetHeaders does. The GetHeaders thing does a sophisticated \"common ancestor\" check between the two nodes by sending an exponentially-backed-off list of your headers, eg: tip, tip-1, tip-2, tip-4, tip-8, tip-16, ..., genesis. This covers cases where nodes are super divergent, which can happen in Bitcoin but can't happen in PoS so it doesn't make sense to port it over. Instead, sending the committed tip only, and then having the node send you its next N blocks from the tip automatically, seems like the \"most right\" thing to do with PoS. But again I think what you have works and just adding a TODO is good and will work great.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460185114",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmmm... it feels like you don't need to store the safe blocks on the fc object. Rather, you can just compute them on the fly from the blockchain object every time. This would be like a tiny bit less efficient, but it would also be less redundant and less error-prone.\nIs there a reason you want to store and update a list of safeblocks on the fc object rather than recomputing them on the fly every time?",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460195510",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ah I see... it looks like the FastHotStuffEventLoop is distinct from the FastHotStuffConsensus object, and the former doesn't have a blockchain object, which is why you have to do this update manually. This makes sense, and I like the design because it makes it much easier to test the consensus code.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460196199",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ok but I'm still confused about something. Don't you always need to call UpdateSafeBlocks, even if the new block was added to the tip? I'm not seeing where FastHotStuffEventLoop.safeBlocks gets updated in the case where we just attach a block to the tip, even though I think we should be adding the tip block to safeBlocks in that case.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460200230",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sorry nevermind. It's a few lines later, and gets updated in FastHotStuffEventLoop.ProcessTipBlock().",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460200408",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Just a heads-up. By the time we get here, we're guaranteed that our tip will be within MaxTipAge of the \"true\" tip on the network, where MaxTipAge is 24h. Specifically, the order is: 1) sync all the headers, 2) download all the blocks for those headers, 3) the next thing that would trigger with your code is _handleBlock().\nIf we assume the above, then we could potentially be an hour or more behind at step (2) causing the first tip block we get to do a lot of catch-up. I think this is probably fine, since an hour of blocks is only 3600 little blocks. But it's something to keep in mind as your testing. And if it's slow or suboptimal, you can do the update to add your committed tip to GetBlocks() that I mentioned previously.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460218176",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Reading through a bit more, I think something a bit odd that could happen is you could hit some weird timeouts if you call fastHotStuffConsensus.Start() before that last hour or two of blocks has been downloaded. It seems like it would figure itself out, but just be aware of this as you start testing.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460232024",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Something I couldn't figure out yet is where we broadcast votes/timeouts to our peers. I think maybe you haven't done this yet because it relies on the connection management stuff.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460235845",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm... so BIP39 is actually supposed to go from mnemonic -> seedHex, not to be confused with bip32 which deals with derivation paths and things like that. You can open identity and hit \"advanced\" on the part where it shows you a seed phrase and then see how it converts it:\nhttps://ibb.co/wwW1rKH\nMy thinking is it would probably be good to make it so that the flag is a mnemonic, and that the seed hex used is identical to that generated by identity, which is standard bip39 generation.\nI could also see the argument for keeping it as raw seed hex. In that case we'll just have to tell people to copy it from the advanced section or something. Also it feels easier to lose a seed hex than a mnemonic but idk.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460246030",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "There should be a function somewhere that's like MnemonicToSeed or SeedToMnemonic",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460246261",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes, this requires the connection management code to be complete. For now, I independently implemented the consensus and added TODO's at the exact lines where network messages would be broadcast. The network send calls will be plug-and-play once Piotr has finished the networking code.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1462538957",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Oh, I like this. And agreed that a seed phrase is easier to manage for node operators, vs a more arbitrary seed hex. The one thing I'm not sure of is whether the seed hex generated via BIP39 matches the number of bytes that the bls private key expects. I'll try to update to this.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1462541512",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Implemented in PR #946",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1465473483",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Implemented in PR #949",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1466595361",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Your understanding of the block by block roundtrip to sync A ... F is correct. It is inefficient, but my expectation was also that by the time a validator is in the steady state consensus, it will be nearly synced with all of its peers that this isn't an issue.\n\nOne way to fix this is to send your tip inside the GetBlocks message, and then the node can auto-send you everything from your tip to its tip. But again I think this is probably a premature optimization we don't need to make right now. If you like that optimization then leave it as a TODO for fun.\n\nYour comment is a big unlock for better optimizing the syncing here. I'll add the TODO with context + link to this comment. This will be a straightforward optimization if we ever need it.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1466628141",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "You're right, this totally breaks the frontends. I'm seeing it already on regtest. cc: @lazynina since this is something we'll need to solve.\nPast discussions on this landed on optimistic UI updates for less critical and idempotent txns (posts, comments, likes,...) and to wait for block confirmation for more sensitive txns (basic transfers, limit order,...). The state syncer was the natural place to do optimistic updates. As a v0 solution though, maybe it's fine to wait for one block conf for everything cc: @lazynina so you're aware",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1468263782",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "On second review, updating the bestChain in lockstep with the bestHeaderChain here is fine. It's turns out to be a no-op from the context of running processBlockPoS because the bestHeaderChain always ends up with the same final state as the bestChain. But the peace of mind of updating them in lockstep here is a nice to have. I've addressed your feedback in #962",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1470073442",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Added the comment here: #963",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1470143215",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes, this will figure itself out! Consecutive timeouts have exponential backoff, so a node that's timing out will have its view increment more slowly than the rest of the network. After 2-3 views, the timed out node will have a lower view than the rest of the network, so it will accept the rest of the network's higher view blocks",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1470151209",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The only caveat is that depending on how far back the timed out node is it, the syncing may be inefficient. It's the same inefficiency you pointed out in #875 (comment)\nI think that's an optimization we can defer for the future depending on testing looks on devnet",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1470153615",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Something I was telling Zordon is we should make it so these arguments accept EITHER a \"seed hex\" OR a \"seed phrase.\" Not sure if you want to do that here, but I'm mentioning as it came in handy elsewhere. I think he made it so that if it starts with 0x, he reads it as a seed hex, otherwise he reads it as a seed phrase.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475489288",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm... is it better for these to be flags or for them to be ParamUpdater? I'm thinking about how we would change these values later, for example if we want to reduce the block production interval to 1s or even faster if we think the network can handle it.\nRight now, there's not really a good upgrade path here. You would need everyone to upgrade their flags at the exact same time or else the network would break. I think originally we said we'd put these in ParamUpdater for this reason, since it can safely change these values.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475491774",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Separate question is whether we should start this number low and increase it OR start it high and decrease it. I thought about it, and it feels like starting LOW is actually better. If we start it low, we'll encounter issues in devnet and know what our \"limits\" are. However, if we start it high we may be running at too generous of a buffer and always be too afraid to reduce it.\nThis is also something that seems easier to test with ParamUpdater, since you can play with values quickly while the network is live and see what happens, rather than having to reboot the whole network.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475492471",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "These mempool params seem appropriate as flags. In my view, any consensus variables that require coordination among node operators should be in ParamUpdater probably. Anything that individual nodes can update independently should be flags.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475493147",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I notice you're ignoring the error here. What it looks like is happening right now is the following:\n0. When we boot up the node before the PoS cut-over height, we will set its PoS params, which will cause us to enter this loop (note that IsRunning() doesn't have a block height check).\n\nBefore the PoS cut-over height, we are calling fasthotStuffConsensus.HandleBlock() -> processBlockPoS -> tryConnectBlockAsNewTip (or whatever it's called), which is erroring because we're not at the cut-over height yet.\nThe error bubbles all the way up to here, where it's ignored.\nEventually, we pass the cut-over height and this stops erroring.\n\nInstead, I recommend the following:\n\nGate this on the cut-over height so we don't enter it until we're supposed to.\nCatch the error here, since it probably means something is messed up.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475519738",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Why not !srv.blockchain.IsPoSBlockHeight here?",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475522790",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ok, I take it back. It looks like we're smart about calling Start(). In particular, we only call it after we reach the cut-over height height, which means IsRunning() will return false until that point.\nWe should still catch the error here though!",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475522794",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I'm walking through the transition from PoW to PoS and I'm running into an issue, which I can't resolve. Based on my analysis, it seems like we should hit a RuleErrorRuleErrorParentBlockHasViewGreaterOrEqualToChildBlock at the PosCutoverHeight2. I'll explain why it looks like this to me, and maybe you can tell me what I'm missing:\ngenesis\n* block_producer.go\n* Miner queries for template with height = Pos2CutoverHeight\n* Finds winning hash\n* Sends it to /submit-block\n* Gets to _handleBlock() with a PoW block that has height << PosCutoverHeight2\n* srv.fastHotStuffConsensus.HandleBlock() is skipped because IsRunning() is not true\n* ProcessBlock calls processBlocPoW because < PosCutoverHeight2\n* block_producer.go and miners get busy producing the next PoW block...\n\nGood so far!\n\n\nPoW height = PoSCutoverHeight - 1\n* A block is mined with height = PoSCutoverHeight - 1\n* Gets to _handleBlock()\n* srv.fastHotStuffConsensus.HandleBlock() is skipped because IsRunning() is not true\n* ProcessBlock calls processBlocPoW because < PosCutoverHeight2\n* block_producer.go and miners get busy producing the next PoW block...\n\nPoW height = PoSCutoverHeight2\n* Here's where it gets weird. Notice that block_producer.go does NOT set ProposedInView to anything, so I assume it's zero for all PoW blocks, including this one.\n* _handleBlock() is called on this last PoW block\n* BUT ProcessBlock calls processBlockPoS because = PosCutoverHeight2\n* We et to -> getLineageFromCommittedTip -> getCommittedTip -> returns PoW block with height = (PosCutoverHeight2 - 1)\n  - This works because all PoW blocks return IsCommitted() = true. Still good so far...\n* Where we get screwed is I think we end up returning RuleErrorParentBlockHasViewGreaterOrEqualToChildBlock in getLineageFromCommittedTip() because we never set the view in any of our PoW blocks.\n\n\nI was searching around to see if maybe we were implicitly setting ProposedInView to the height somewhere but I couldn't find anywhere we were doing it. Not sure how we could ever get past getLineageFromTip() with a PoW block without setting ProposedInView to the right value in the parent.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475539437",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I see we set ProposedInView here, which is good. But again I'm not seeing how ew get past the error in getLineageFromCommittedTip().",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475542183",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Did some more digging. It looks like you define a MsgDeSoHeader.GetView() that patches the view with the height for HeaderVersion1/0. BUT the code in getLineageFromTip() still looks wrong because it's calling block.Header.ProposedInview. Will keep reading...",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475543506",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Mystery solved. Before the line that checks ProposedInView in getCommittedTip(), there is this line, which breaks out of the for loop:\nif currentBlock.Hash.IsEqual(highestCommittedBlock.Hash) {\n    break\n\nThis results in an empty ancestors list being returned, which is what we expect.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475551088",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Love it! Could add a line saying: Mathematically: A' = A \u2216 A \u2229 B and B' = B \u2216 A \u2229 B",
                                                        "author": {
                                                            "login": "AeonSw4n"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1474926672",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e205050",
                                                            "authoredDate": "2024-02-01T16:34:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "*equal",
                                                        "author": {
                                                            "login": "AeonSw4n"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1474979739",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e205050",
                                                            "authoredDate": "2024-02-01T16:34:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "*defined",
                                                        "author": {
                                                            "login": "AeonSw4n"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475121718",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e205050",
                                                            "authoredDate": "2024-02-01T16:34:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Should we change the oldestAllowedTipTime to less than 24h (bc.params.MaxTipAge) for PoS? It feels like 24 hours of blocks in PoS are much more outdated than 24 hours of PoW blocks.",
                                                        "author": {
                                                            "login": "AeonSw4n"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475600728",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sounds good. I'll catch and log the error here",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476189294",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We need to start the FastHotStuffConsensus once the chain has connected the final PoW block, which has a height of ProofOfStake2ConsensusCutoverBlockHeight - 1. The final PoW block is the genesis block for the PoS chain, on top of which the PoS consensus votes or times out on",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476212949",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Seems fine to me. I'll update these to ParamUpdater params",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476239258",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sounds good. Will move these to ParamUpdater too",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476239765",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved in PR #1005",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476539821",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Should we replace this with IsPoSBlockHeight for consistency?",
                                                        "author": {
                                                            "login": "AeonSw4n"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476564259",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b2f03f4",
                                                            "authoredDate": "2024-02-02T16:16:29Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah, this line is safe. I updated it to set ProposedInView: finalPoWBlock.Header.GetView() so it's clearer too",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476618384",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved in PR #1009",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476645021",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b2f03f4",
                                                            "authoredDate": "2024-02-02T16:16:29Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Clarified the comment further in PR #1010",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476691065",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Can you simplify this as simply:\nif tipHeight < cc.params.GetFinalPoWBlockHeight()\n\nlike you have in server.go?",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477121496",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I would explain a bit more of the \"why\" here. I think we're doing this because it's the easiest way to special-case our QC validation logic at the cutover height. But just explain it so we know/remember.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477122059",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Every time I hit \"Go to Definition\" for one of these, it takes me here rather than to the implementation. Even hitting \"Show Usages\" doesn't take me there. Is there an easy way to jump directly to the implementation that I'm not aware of?",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477144463",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think there's any way for this to be incorrect but just to be safe I would replace all instances of Header.ProposedInview with GetView(), including this instance here.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477172508",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We shouldn't rely on a timeSource anymore. For context, Bitcoin has a really weird way of dealing with time that we sortof emulated before, but that we're not going to be porting over to PoS.\nFor PoS, we want to simply set the block timestamp to:\ncurrentTimestamp = MIN(time.UnixNano(), parentBlock.TstampNanos + 1)\nCritically, the nodes on the network should allow for some amount of drift, say a few minutes, but should reject blocks outside of that strict time range. Bitcoin does this rejection but its window is 2 hours or so, and it does not enforce monotonically increasing timestamps, which causes complications (it would be better if it did).\nI remember we decided that monotonically increasing the timestamp would prevent attacks, but now that I'm thinking about it I'm not 100% sure we need it. It prevents attacks in Proof of Work because the timestamp is used by Proof of Work to adjust the difficulty, but I don't think we rely explicitly on the timestamp for anything in consensus itself, and so I think just having it be currentTimestamp = time.UnixNano() would probably work. In this case, a validator can fudge the time up to our strict time window for one block, but then the next validator would correct it.\nThe above being said, I recommend keeping monotonically increasing timestamps unless we have a good reason not to have them. Among other things, they lead to more consistent behavior for things that rely on the timestamp, such as lockups. In the specific example of lockups, you could have a weird case where a lockup is unlockable for one block but not unlockable for the next, which is kinda dumb (though not fatal).\nSo I would just leave a comment explaining as much as you can about the relevant context above.\nAlso just as a history lesson, I believe Bitcoin Core sets its timestamp based on the median of what its peers tell it the time is or something like that. I don't know if it still does this, but I think that's how Satoshi had it. It prevents your clock from drifting too hard from everyone else's clock, so that you're always suggesting blocks that are within their window.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477174191",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Make sure that the mempool cannot accept a txn above this size or it will sit in the mempool forever being skipped by the block producer.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477174956",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think I mentioned this earlier. Can't remember what the decision was though.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477179728",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think if this fails, then newView is compromised and you have to recompute it before you go to the next iteration. Maybe what I would do to keep it light is set copiedView, err = newView.CopyUtxoView() and run this check on copiedView to guarantee newView is always clean. And then if it passes you do newView = copiedView like above.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477184560",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "You don't need to hold the lock when you're making a copy. Rewrite this as follows:\nvar readOnlyPointer *UtxoView\nmp.augmentedLatestBlockViewMutex.RLock()\nreadOnlyPointer = mp.augmentedLatestBlockViewMutex\nmp.augmentedLatestBlockViewMutex.RUnlock()\n\nnewView, err := readOnlyPointer.CopyUtxoView()\n\nNote that we can do this because, unlike with the legacy mempool, we are never modifying augmentedLatestBlockView ever. This seems like a small change, but I think it will dramatically increase efficiency because it means we're almost never holding the lock. This change is also the reason why I recommend we decrease the wait time between recomputations of the augmented view.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477185165",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "For symmetry, I'd make this augmentedBlockViewRefreshIntervalMillis / 10 so that it checks faster if you update that variable.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477185451",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'd like to start this value at 10ms. I don't think it will cause locking issues here the way it does with legacy mempool because here we hold the write-lock only to make a pointer-copy. In theory, that means we really could set this value to zero and probably be fine. But 10ms seems like a good middle-ground that users hopefully won't really notice.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477185598",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'd rename this to readOnlyAugmentedLatestBlockView since we actually never modify it. Instead, we just always throw away the old one and let it get garbage-collected.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477185644",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think you need to hold the lock during the copy. I would rewrite this as:\nmp.RLock()\nreadOnlyPointer = mp.readOnlyLatestBlockView\nmp.RUnblock()\n\nnewView, err := readOnlyPointer.CopyUtxoView()\n\nThis works because we never modify the value of readOnlyLatestView. Instead, we just change the pointer. So you only need to guard the pointer access, not the copy.\nI've always used locks for these cases, but a pointer-copy is so chill I thought maybe Go made it so that it's guaranteed to be atomic. And I think on most hardware the pointer-copy IS atomic, meaning you don't even need a lock around it. But it looks like it's not a guarantee so best to keep the guard you have there.\nThis was my research:\nhttps://chat.openai.com/share/f8aade6f-7822-484a-9057-f656f7429669\nhttps://www.reddit.com/r/golang/comments/yb1ijr/race_or_not_race/",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477186869",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "A minor note to help you understand my other comments: This field is truly readOnly now, meaning that we don't ever modify the underlying view after we set it. Instead, we just change the pointer to point to a new view. This means that the code for updating this value, as well as the augmentedLatestBlockView value, is much more efficient than it was with the legacy mempool. The reason is that the legacy mempool used to require a view-copy to be inside of a lock, whereas we only need a pointer-copy to be inside of a lock. Much better than before! Which means we can have a lower time between each update. I recommend 10ms.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477187098",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think you want BlockUntilReadOnlyViewRegenerated here. I think _addTxn is called when we initialize the mempool, which means you'll be blasting it with txns. Instead, you want to do this wait in BroadcastTransaction() only, which is where it was before anyway. You can just look at the diff and make sure that the position of BlockUntilReadOnlyViewRegenerated hasn't changed, and make sure it makes sense why it hasn't changed.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477187686",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: Resolved this myself.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477191363",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: Resolved this myself.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477191416",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: Resolved this myself.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477191430",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: Resolved this myself.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477191454",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: Resolved this myself.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477191487",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Nice find. This pointer copy is definitely more optimal",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478412290",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The event loop is referenced as the interface type. So, no there isn't a a built-in way to go to the implementation directly in VS Code. You'd have to Ctrl+Shift+F to search for it.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478475608",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The interface is useful so we can test the consensus using a mock event loop type. Marking this as resolved since it's not a code issue, and is instead an IDE limitation",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478476597",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478485183",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Marking this as resolved since there's no action item for this feature PR on it.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478490750",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This is resolved by the PoS mempool's new augment view refresh async job",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478491522",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We settled on having strictly increasing block timestamps with up to a 10 minute forward buffer. It should not be possible for a block proposer to roll back time with a previously proposed block. This would break the integrity of lockups, among what I'm sure will be other edge cases built on future assumptions of strictly increasing timestamps in other use cases.\nI'll update this to get rid of the timeSource, and to introduce strictly increasing timestamps.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478858734",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The GetView() is a convenience when accepting incoming PoW blocks so that we can use block height as a pseudo \"view\". IMO, it's more appropriate to use the raw ProposedInView field here when constructing and validating blocks. This way, there's no way we can misread and conflate the block height as the view.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478940909",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Addressed in PR #1016",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1479058560",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't have a strong opinion on this. An optional check on the 0x prefix seems fine to add later on when needed. This uses the standard BIP39 seed phrase -> seed conversion, so it should just work out of the box to use a hex seed encoding",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1481959657",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Tracking this separately as a TODO for node syncing optimizations",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1481972361",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjI=",
                "hasNextPage": false,
                "hasPreviousPage": false,
                "startCursor": "Y3Vyc29yOjE="
            },
            "issueCount": 2
        }
    }
}