{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 1323,
                        "title": "ThingsBoard Cloud Subscription plans definition. Updated API Limits",
                        "repository": {
                            "nameWithOwner": "thingsboard/thingsboard.github.io",
                            "primaryLanguage": {
                                "name": "Sass"
                            }
                        },
                        "createdAt": "2024-01-23T13:36:51Z",
                        "mergedAt": "2024-02-16T15:10:25Z",
                        "url": "https://github.com/thingsboard/thingsboard.github.io/pull/1323",
                        "state": "MERGED",
                        "author": {
                            "login": "stitenko"
                        },
                        "editor": null,
                        "body": "## PR description\r\n\r\nThe documentation updated for ...\r\n\r\n## Link checker\r\n\r\nThe links will be checked by the build agent automatically once you create or update your PR.\r\n\r\nYou can use the following command to check the broken links locally.\r\n\r\n```bash\r\ndocker run --rm -it --network=host --name=linkchecker ghcr.io/linkchecker/linkchecker --check-extern --no-warnings http://0.0.0.0:4000/\r\n```\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This is a rate limit and not an API / Entity limit",
                                                        "author": {
                                                            "login": "ashvayka"
                                                        },
                                                        "url": "https://github.com/thingsboard/thingsboard.github.io/pull/1323#discussion_r1466564736",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8a04ffd",
                                                            "authoredDate": "2024-01-24T06:45:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The text style of the new elements is completely different from the text style of the old elements!",
                                                        "author": {
                                                            "login": "ashvayka"
                                                        },
                                                        "url": "https://github.com/thingsboard/thingsboard.github.io/pull/1323#discussion_r1466566498",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8a04ffd",
                                                            "authoredDate": "2024-01-24T06:45:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "<td>200/sec<br>but no more then 6K/min<br>but no more then 140K/hour</td>\nvs\n<td>100 messages per 1 sec,<br>but less than 3000 messages per 60 sec,<br>but less than 70000 messages per 3600 sec</td>",
                                                        "author": {
                                                            "login": "ashvayka"
                                                        },
                                                        "url": "https://github.com/thingsboard/thingsboard.github.io/pull/1323#discussion_r1466568298",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8a04ffd",
                                                            "authoredDate": "2024-01-24T06:45:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Use the following description style:\nup to 200 per second, not exceeding 6,000 per minute, and capped at 140,000 per hour.\nReference: https://chat.openai.com/share/e/e98f326f-dff8-472a-8e8b-e6a56b027fe9",
                                                        "author": {
                                                            "login": "ashvayka"
                                                        },
                                                        "url": "https://github.com/thingsboard/thingsboard.github.io/pull/1323#discussion_r1472899291",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "143be1b",
                                                            "authoredDate": "2024-01-31T13:25:39Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Used the suggested description style for the \"Rate Limits\" section",
                                                        "author": {
                                                            "login": "stitenko"
                                                        },
                                                        "url": "https://github.com/thingsboard/thingsboard.github.io/pull/1323#discussion_r1489616004",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "143be1b",
                                                            "authoredDate": "2024-01-31T13:25:39Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 228,
                        "title": "feat: add `/securities` route to get all securities to display to the user ",
                        "repository": {
                            "nameWithOwner": "maybe-finance/maybe",
                            "primaryLanguage": {
                                "name": "Ruby"
                            }
                        },
                        "createdAt": "2024-01-25T18:58:16Z",
                        "mergedAt": "2024-02-02T14:50:53Z",
                        "url": "https://github.com/maybe-finance/maybe/pull/228",
                        "state": "MERGED",
                        "author": {
                            "login": "crnsh"
                        },
                        "editor": null,
                        "body": "This is in preparation to solve #131 and the first step of #215.\r\n- Adds a `/securities` endpoint to get all securities (only symbol and exchangeName) from the database.",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "A TypeScript repo without semi-colons? Who's in charge here? Lol.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Is this a placeholder or full implementation? Just curious on if you're planning to get all and filter client side or add some query params for searching (similar to institutions). I'm guessing this is setting up for the add investment form?",
                                                        "author": {
                                                            "login": "tmyracle"
                                                        },
                                                        "url": "https://github.com/maybe-finance/maybe/pull/228#discussion_r1467886241",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8e0585e",
                                                            "authoredDate": "2024-01-25T19:15:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah this is for setting up the investment form. I'll have two Listbox elements for picking a stock. One selects the exchange, and then the stocks of that exchange are available in the other Listbox (this happens after selecting / creating an account).\nThat's why I'll need all stocks, so this is the complete implementation. If I need something else I'll create another PR but it seems that this is all I need for the backend part of #131.",
                                                        "author": {
                                                            "login": "crnsh"
                                                        },
                                                        "url": "https://github.com/maybe-finance/maybe/pull/228#discussion_r1467923661",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8e0585e",
                                                            "authoredDate": "2024-01-25T19:15:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Can we get away with only one Listbox? I wonder how many people know the exchange vs just the ticker or company name. I'm imagining a single listbox and each result displays the relevant info needed to select the right security (name, ticker, exchange). Would be great to be able to search by ticker or name so I can just type Apple or Samsara and get the result I'm looking for.",
                                                        "author": {
                                                            "login": "tmyracle"
                                                        },
                                                        "url": "https://github.com/maybe-finance/maybe/pull/228#discussion_r1467941804",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8e0585e",
                                                            "authoredDate": "2024-01-25T19:15:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah that's actually a better idea. Search by symbol and then disambiguate with exchange.\nEven with this approach I'll need all the stocks though",
                                                        "author": {
                                                            "login": "crnsh"
                                                        },
                                                        "url": "https://github.com/maybe-finance/maybe/pull/228#discussion_r1467944955",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8e0585e",
                                                            "authoredDate": "2024-01-25T19:15:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sending all of the 11k securities (and more in the future) to the client is going to have negative performance implications. I'd check the implementation of institution router and institution service for how server-side search is implemented elsewhere in the app. There should be an initial batch sent to the client (current standard is 50 results, see the enum PageSize in account-types.ts) and the search (debounced) should return the results that match the query using postgres full-text search.",
                                                        "author": {
                                                            "login": "tmyracle"
                                                        },
                                                        "url": "https://github.com/maybe-finance/maybe/pull/228#discussion_r1468636041",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8e0585e",
                                                            "authoredDate": "2024-01-25T19:15:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 7117,
                        "title": "Add: Handle telnet links with Mudlet",
                        "repository": {
                            "nameWithOwner": "Mudlet/Mudlet",
                            "primaryLanguage": {
                                "name": "C++"
                            }
                        },
                        "createdAt": "2024-01-30T18:06:27Z",
                        "mergedAt": null,
                        "url": "https://github.com/Mudlet/Mudlet/pull/7117",
                        "state": "OPEN",
                        "author": {
                            "login": "guhitb"
                        },
                        "editor": {
                            "login": "vadi2"
                        },
                        "body": "#### Brief overview of PR changes/additions\r\n- Updated command line arguments to accept any URI or file path (first positional argument)\r\n- Made `MudletInstanceHandler` packages generic so any URI can be passed to another Mudlet Instance.\r\n- Updated mudlet.desktop, registry keys, and Plist (see https://github.com/Mudlet/installers/pull/115) to handle opening telnet links on each operating system.\r\n- Reused telnet ui components and profile selection logic from https://github.com/Mudlet/Mudlet/pull/3131\r\n#### Motivation for adding to Mudlet\r\nfixes https://github.com/Mudlet/Mudlet/issues/689\r\n/claim #689\r\n#### Other info (issues closed, discussion etc)\r\nI'm having trouble testing the linux telnet file association on my machine. I think I have something misconfigured that's not part of the Mudlet repo. I placed `MimeType=x-scheme-handler/telnet;application/zip;` in `mudlet.desktop` and ran `xdg-mime default mudlet.desktop x-scheme-handler/telnet` to set default.\r\n\r\nTesting: open http://www.durismud.com and click on on the `Play now` link.",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "The link handling didn't work for me on macOS, but that might be because the other PR registering URI's isn't merged yet.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Could you add qsl() around string literals here and in other places please?",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1477100653",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "What does this do?",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1477101092",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Do you think this could be a ranged for instead? Better to avoid while loops if possible.",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1477101277",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Long due, thank you!",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1477102102",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "With Qt's https://doc.qt.io/qt-6/implicit-sharing.html constants don't matter as much btw, but this is okay too!",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1477102496",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm, grammar?",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1477102580",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Try lregister for macOS: https://chat.openai.com/share/ca778a07-0203-4535-88ac-2c85e85cf384",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1477103401",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Could macOS get a check too?",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1477106222",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It's unused, I'll will remove it",
                                                        "author": {
                                                            "login": "guhitb"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1477639329",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I can change it to something like for (int i = mQueuedUris.length() - 1; i >= 0; i--) to avoid while, but I don't think a ranged for will work since the loop needs to remove items from the list during the loop.",
                                                        "author": {
                                                            "login": "guhitb"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1477668647",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sure!",
                                                        "author": {
                                                            "login": "vadi2"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1477710184",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Sorry if this seems a bit nit-picky - I'm just trying to polish it up a bit.\nThanks for working on this as it has been something that we wanted doing for a long time. \ud83d\ude0c\nOne further suggestion would have though is that: can you ensure you have left a blank line between successive methods /functions in the source code.\nHTH",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "QObject is a bit of a special case I think as it is the base class for many, if not all other Qt classes - so it does make sense to have it before the other class headers (though they probably #include it them selves anyhow)... thoughts @vadi2 ? \ud83e\udd37\u200d\u2642\ufe0f",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478720705",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "That is a bit of a dodgy \"bash\"-ism (I think) - ~ as the WHOLE of the first directory specifier does indeed mean the \"user's\" home directory in the bash (and some other) shells - however ~someotherUser/  means the home directory of someOtherUser which is not how the code afterwards will handle it - I think you have to be more discerning than just using file.startsWith(\"~\") here - you may have to check for a directory separator immediately afterwards to be sure...",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478734556",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Careful - I do not think you want to hit this line if you have already unlocked it before by carrying out one of the blocks of code inside the ifs otherwise you could get nasal daemons - the Qt documentation for this method notes that it:\n\nUnlocks the mutex. Attempting to unlock a mutex in a different thread to the one that locked it results in an error. Unlocking a mutex that is not locked results in undefined behavior.",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478753846",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\ud83d\udc4d",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478755740",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah, but it does shut up a compilation warning - which is useful as it means one can focus on the compilation errors... \ud83d\ude00",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478757489",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e00e7f3",
                                                            "authoredDate": "2024-01-30T18:08:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Please check the spacing still lines up nicely for the \"Package path or telnet URI\" (and that it fits within 80 columns IIRC)... \ud83e\udd1e",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478760319",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Doesn't this also need to include URLS with the mudlet scheme type as well?",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478763008",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I am not seeing this used anywhere in this PR - is it needed?",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478764590",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This should work for Q_OS_FREEBSD also. https://man.freebsd.org/cgi/man.cgi?query=xdg-mime&apropos=0&sektion=1&manpath=FreeBSD+13.2-RELEASE+and+Ports&arch=default&format=html\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            #if defined(Q_OS_LINUX)\n          \n          \n            \n            #if defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD)",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478771171",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "These two blocks of code are mutual exclusive so they should be combined - also as I reported above the latter should work for FreeBSD so it can be combined with the Linux one:\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            #endif\n          \n          \n            \n            #if defined(Q_OS_LINUX)\n          \n          \n            \n            #elif defined(Q_OS_LINUX) || defined(Q_OS_FREEBSD)",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478775885",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\ud83e\udd2e - for complex classes I suppose the default/empty initialisation with {} does look attractive but for plain old data types like this I honestly think this is better:\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                int profilesFound{};\n          \n          \n            \n                int profilesFound = 0;",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478801713",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Maybe?\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                for (auto& host : hostList) {\n          \n          \n            \n                for (const auto& host : hostList) {",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478806151",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "We are not using that form of providing information to the translation team (see #5522) - instead try:\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                        mpConnectionDialog->showInformationMessage(tr(\"%n matching profiles found for %1, which would you like to open?\",\n          \n          \n            \n                                                                      \"this message is shown when Mudlet is opened from a telnet:// link on a webpage, and more than one profile matches the game server/port - so \"\n          \n          \n            \n                                                                      \"the user needs to pick which of the available profiles they'd like to play with\",\n          \n          \n            \n                                                                      profilesFound)\n          \n          \n            \n                                                                           .arg(url.host()));\n          \n          \n            \n                        /*: This message is shown when Mudlet is opened from a telnet:// link on a webpage, and more than one profile matches the game server/port - so \n          \n          \n            \n                            the user needs to pick which of the available profiles they'd like to play with.*/\n          \n          \n            \n                        mpConnectionDialog->showInformationMessage(tr(\"%n matching profiles found for %1, which would you like to open?\",\n          \n          \n            \n                                                                      \"\",\n          \n          \n            \n                                                                      profilesFound)\n          \n          \n            \n                                                                           .arg(url.host()));",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478830151",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Please move it up a bit so that it is in the correct alphabetical sort position (after line 210)...",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478838053",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "A suggestion to try and avoid repeating the exact \"your default client\" phrase. Also to explain what it would be the default for! \ud83d\ude00\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                  <string>Mudlet is not currently set as your default client. Would you like to make it your default client?</string>\n          \n          \n            \n                  <string>Mudlet is not currently set as the default client for handling <tt>telnet://</tt> URLs. Would you like to make it your default?</string>\n          \n      \n    \n    \n  \n\nYou might need to tweak the <tt>...</tt> - I am trying to get it displayed (almost) like: telnet: appears here (but without any shading).",
                                                        "author": {
                                                            "login": "SlySven"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1478847716",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It's unused, I'll remove it",
                                                        "author": {
                                                            "login": "guhitb"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1480560426",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Thanks for noticing this! I placed it outside the loop to avoid checking if(i==0) inside the loop, but it seems like that's the correct way to do it.",
                                                        "author": {
                                                            "login": "guhitb"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1480575253",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It does, I'll update listUrisWithScheme to check a QStringList of allowed schemes.",
                                                        "author": {
                                                            "login": "guhitb"
                                                        },
                                                        "url": "https://github.com/Mudlet/Mudlet/pull/7117#discussion_r1480698457",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a9c4262",
                                                            "authoredDate": "2024-02-04T09:53:25Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Testing has revealed a problem on Linux \ud83d\ude05 the temporary location the AppImage gets extracted and run from will always change. Do you think this is solvable? We're looking at migrating to flatpak at the same time, so it's not worth too much effort to make it work for AppImages.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "macOS testing always says \"checking default:  false\". Have you got access to a mac? If no I can do some testing for you.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 228,
                        "title": "Replacing enums with string and installing isort & ruff",
                        "repository": {
                            "nameWithOwner": "cleanlab/cleanvision",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-10-05T18:17:45Z",
                        "mergedAt": null,
                        "url": "https://github.com/cleanlab/cleanvision/pull/228",
                        "state": "OPEN",
                        "author": {
                            "login": "smttsp"
                        },
                        "editor": {
                            "login": "smttsp"
                        },
                        "body": "## Summary\r\n\r\n> What is the reason for this Pull-Request?\r\n\r\nThis PR replaces HashType and IssueType enums with strings. IssueType was created before but in some places, string was used. This PR resolves that issue. \r\n\r\nAlong with those, ruff and isort which are linting and import formatting tools, respectively, added to in requirements. \r\n\r\nIf `isort` and `ruff` are not desired, I can remove them from the commits\r\n\r\n**NOTE**: This PR will be merged after https://github.com/cleanlab/cleanvision/pull/227/files if it is merged. Then, we can get rid of the commits from that PR (by rebasing onto main). Currently, we see those changes here which will be gone after the rebasing.\r\n\r\n## Impact\r\n\r\n> What is the scope of your changes and who/where do you think they will affect?\r\n\r\nSmall code clean up and some formatting. Along with that additional installations. Normally, these installations should not go into production code, they should stay in `dev` but I am not sure how to do that in the current setting. In the future, by separating requirements from requirements-dev.txt, we may be able to achieve that. \r\n\r\n## Testing\r\n\r\n> What testing have you done and verified? Please link to the one unit test that is most end-to-end check of your new functionality. It's ok if your unit tests are not yet comprehensive when you first open the PR, we can revisit them later!  \r\n\r\n- to be done\r\n\r\n## Ticket(s) or Conversations\r\n\r\n> What Git or Slack items (Issues, threads etc) are specifically related to this work? Please link them here.\r\n\r\n\r\n## References\r\n\r\n> Include any extra information that may be helpful to reviewers of your Pull-Request here (e.g. relevant URLs or Wiki pages that could help give background information). If relevant, please include additional code snippets (and their outputs/return values) showing alternative ways to use your newly added methods.\r\n\r\n-\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We set a 100 character line-length limit in the cleanlab code. I believe the same applies here.\nSome of the reformatted lines may need to be reverted because of this.",
                                                        "author": {
                                                            "login": "elisno"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1353839934",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e3b2007",
                                                            "authoredDate": "2023-10-05T18:57:35Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This dependency should be included in a PR where we actually introduce its use.\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            loguru",
                                                        "author": {
                                                            "login": "elisno"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1353840632",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e3b2007",
                                                            "authoredDate": "2023-10-05T18:57:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "CC @sanjanag",
                                                        "author": {
                                                            "login": "elisno"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1353841756",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e3b2007",
                                                            "authoredDate": "2023-10-05T18:57:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Some of the reformatted lines may need to be reverted because of this.\n\nyes, I will re-run the formatting.",
                                                        "author": {
                                                            "login": "smttsp"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1353974047",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e3b2007",
                                                            "authoredDate": "2023-10-05T18:57:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "yes, makes sense. committed your suggestion",
                                                        "author": {
                                                            "login": "smttsp"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1354928053",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e3b2007",
                                                            "authoredDate": "2023-10-05T18:57:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I ran formatting after setting it to 100, nothing has changed.\nA majority of my changes were docstrings that were extremely long, length=100-200 that I manually split",
                                                        "author": {
                                                            "login": "smttsp"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1354943246",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e3b2007",
                                                            "authoredDate": "2023-10-05T18:57:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "one comment",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@elisno, for example this line was 135, the above line is 144, etc",
                                                        "author": {
                                                            "login": "smttsp"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1354954914",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "49ae7c7",
                                                            "authoredDate": "2023-10-11T12:54:47Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I added an example below: #228 (comment) regarding what I meant",
                                                        "author": {
                                                            "login": "smttsp"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1354957287",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e3b2007",
                                                            "authoredDate": "2023-10-05T18:57:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "My mistake, I didn't realize the formatted (docstrings) were extremely long and manually split.\nThen ignore my initial comment here.",
                                                        "author": {
                                                            "login": "elisno"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1355048050",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e3b2007",
                                                            "authoredDate": "2023-10-05T18:57:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@smttsp About adding ruff:\nIt's known for being fast, but we already have flake8 for checking our code. We do ignore some errors in flake8, so there might be room for improvement.\nHowever, ruff is not set up in the CI/pre-commit steps, and it's not clear what unique help it brings to the project.\nSuggestion\nFor this PR, I suggest we keep the formatting improvements but remove the ruff dependency until we have a clearer understanding of its benefits. I propose we move the discussion about ruff to another Github Issue to explore if it solves anything new, or if there are other strong reasons to include it. This way, we keep the PR focused while exploring the linting tools and practices separately.\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            ruff",
                                                        "author": {
                                                            "login": "elisno"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1355077197",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "49ae7c7",
                                                            "authoredDate": "2023-10-11T12:54:47Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Could isort be added to .pre-commit-config.yaml?",
                                                        "author": {
                                                            "login": "elisno"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1355084866",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "49ae7c7",
                                                            "authoredDate": "2023-10-11T12:54:47Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "unfortunately, I don't have hands-on experience with pre-commit but chatgpt says, yes:\nhttps://chat.openai.com/share/d6e0ccd3-67d2-4cf3-bb2e-6504a4861586",
                                                        "author": {
                                                            "login": "smttsp"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1355497525",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "49ae7c7",
                                                            "authoredDate": "2023-10-11T12:54:47Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "sure, I can drop ruff.\nthe main benefit is AFAIK speed. It is 200-300x faster than flake8, which may not be much as flake8 takes 10-15 seconds ruff takes <1 sec.",
                                                        "author": {
                                                            "login": "smttsp"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1355516481",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "49ae7c7",
                                                            "authoredDate": "2023-10-11T12:54:47Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "done",
                                                        "author": {
                                                            "login": "smttsp"
                                                        },
                                                        "url": "https://github.com/cleanlab/cleanvision/pull/228#discussion_r1356004487",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "49ae7c7",
                                                            "authoredDate": "2023-10-11T12:54:47Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 259,
                        "title": "Updated to include webhook subscription",
                        "repository": {
                            "nameWithOwner": "Altinn/altinn-broker",
                            "primaryLanguage": {
                                "name": "C#"
                            }
                        },
                        "createdAt": "2024-01-08T10:32:13Z",
                        "mergedAt": "2024-01-08T13:55:17Z",
                        "url": "https://github.com/Altinn/altinn-broker/pull/259",
                        "state": "MERGED",
                        "author": {
                            "login": "tomshag"
                        },
                        "editor": null,
                        "body": "Updated Webhook for malware scanning to include handling of subscription.\r\n\r\n## Description\r\nThe existing webhook functionality only handled the actual update of file status based on malware scan result.\r\nThis update will handle subscription requests so that Azure can actually connect to the webhook.\r\n\r\n## Related Issue(s)\r\n- #220\r\n\r\n## Verification\r\n- [x] **Your** code builds clean without any errors or warnings\r\n- [x] Manual testing done (required)\r\n- [x] Relevant automated test added (if you find this hard, leave it and we'll help out)\r\n- [x] All tests run green\r\n\r\n## Documentation\r\n- [x] User documentation is updated with a separate linked PR in [altinn-studio-docs.](https://github.com/Altinn/altinn-studio-docs) (if applicable)\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Jeg tror denne kan skrives som:\nstring jsonBody = File.ReadAllText(\"Data/WebHookSubscriptionValidationTest.json\");\nMen WebHookSubscriptionValidationTest.json m\u00e5 settes til \u00e5 v\u00e6re en Content-ressurs med \"Copy if newer\" (eller always).",
                                                        "author": {
                                                            "login": "Ceredron"
                                                        },
                                                        "url": "https://github.com/Altinn/altinn-broker/pull/259#discussion_r1444506661",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b294083",
                                                            "authoredDate": "2024-01-08T10:27:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ref:\nhttps://chat.openai.com/share/b7853f70-84b8-477b-9879-a93a51215f81",
                                                        "author": {
                                                            "login": "Ceredron"
                                                        },
                                                        "url": "https://github.com/Altinn/altinn-broker/pull/259#discussion_r1444508795",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b294083",
                                                            "authoredDate": "2024-01-08T10:27:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Nyeste commit skal ordne det.\nBasert p\u00e5 det jeg husker fra Visual Studio er det best \u00e5 alltid bruke CopyIfNewer; dersom du alltid kopierer vil dette kunne kreve at du gj\u00f8r bygg av prosjektet og dermed alle avhengige prosjekter hver gang du gj\u00f8r bygg av solution selv om ingenting er endret av kode eller fil.",
                                                        "author": {
                                                            "login": "tomshag"
                                                        },
                                                        "url": "https://github.com/Altinn/altinn-broker/pull/259#discussion_r1444566699",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b294083",
                                                            "authoredDate": "2024-01-08T10:27:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 26098,
                        "title": "Parse LaTeX matrices and literal complex numbers",
                        "repository": {
                            "nameWithOwner": "sympy/sympy",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2024-01-19T13:01:40Z",
                        "mergedAt": null,
                        "url": "https://github.com/sympy/sympy/pull/26098",
                        "state": "OPEN",
                        "author": {
                            "login": "8vasu"
                        },
                        "editor": {
                            "login": "8vasu"
                        },
                        "body": "Fixes #14007 \r\nAddresses https://github.com/sympy/sympy/issues/25676 and https://github.com/sympy/sympy/issues/25366\r\n\r\nI have written this with the goal of using a purely SymPy-based backend (or SymPy as a part of SageMath) in [symtex.el](https://github.com/ultronozm/symtex.el) and [compuTeX](https://github.com/8vasu/compuTeX). I wish to unify the typesetting and computation aspects of working with matrix groups in my GNU Emacs/AUCTeX-based workflow. \r\n\r\nEdit: I do not mean to rush anyone, but the reason for this PR is that the `latex2sympy2` that we are currently using in our projects depends on ANTLR 4.7, which imports `typing.io`. We keep getting  warnings that `typing.io` is deprecated and that it will be completely removed in Python 3.12. Currently I am using the default Python 3.11 in Debian, but that might change in an OS update/upgrade in the near future. We have found a parsing solution using GNU Emacs Calc, but we depend on SymPy's `parse_expr` anyway. Matrices are a must for us, and I am looking for a clean solution that just uses `parse_latex`.\r\n\r\nEdit: This PR is being split into 2 parts. Currently this only has content for the Lark parser. The following message remains unchanged, and still mentions ANTLR, which is to be ignored.\r\n\r\nEdit: added `\\prime` and `\\ast` as new ways of performing matrix transpose and matrix self-adjoint.\r\n\r\n## Overview of features added or modified:\r\n\r\n1. Matrix parsing is added to both the ANTLR-based and the\r\nLark-based parsers.\r\n2. Literal complex numbers are introduced via the LaTeX macro\r\n`\\sympyi` in order to facilitate working with matrices with complex\r\nnumber entries.\r\n3. Since the single quote (prime) symbol is sometimes used to denote\r\nmatrix transpose, that is introduced, and as a side-effect, primed\r\nsymbols are added to the Lark parser, and the behavior of primes\r\non symbols in ANTLR and Lark are made consistent and completely\r\nfaithful to the input. For example, the input `\"a''_{b'''}''''\"`\r\ngenerates `sympy.Symbol(\"a''_{b'''}''''\")`. Before this commit, the\r\nANTLR-based parser would generate `sympy.Symbol(\"a_{b'}\")` from the\r\ninput `\"a_b'\"`; LaTeX compilers interpret this differently: the\r\nprime in `\"a_b'\"` is rendered on the `\"a\"` as opposed to the `\"b\"`. This\r\ncommit follows the convention followed by LaTeX compilers.\r\n\r\n## List of features added:\r\n\r\n1. Imaginary unit: `\\sympyi`\r\n2. Matrix parsing (`array` and AMS-LaTeX `matrix`, `pmatrix`, `bmatrix`)\r\nand detailed error handling\r\n3. Determinant parsing (`\\det`, `vmatrix`, `|array matrix|`,\r\n`|AMS-LaTeX matrix|`)\r\n4. Transpose via superscripts `^T`, `^{T}`, `^{'}`, `'`. Applied multiple\r\ntimes via `''`, `'''`, ..., `^{''}`, `^{'''}`, ...\r\n5. Conjugate transpose via superscripts `^H`, `^{H}`, `^{*}`. Applied\r\nmultiple times via `^{**}`, `^{***}`, ...\r\n6. Matrix Trace: `\\sympytr`\r\n7. Matrix adjugate: `\\sympyadj`\r\n8. The above matrix functionality works on all matrix expressions\r\nand not just individual literal matrices; for example, `\\det` can\r\nbe applied to the sum of 2 LaTeX matrices.\r\n9. Large number of new tests for all new functionality.\r\n\r\n## List of features modified:\r\n\r\n1. Symbols (one letter, greek, multi-letter, subscripted) can have\r\nprimes (single quotes) on them in the Lark grammar.\r\n2. Primes on output symbols and functions are now completely\r\nfaithful to the input strings (see added tests).\r\n3. In the Lark grammar, integral, derivative, and limit\r\nexpressions have been moved from `_expression_mul` to `_expression_func`\r\nso that, for instance, integrals can be multiplied with each other.\r\n4. In the Lark grammar, the rule `adjacent_expressions` has been\r\nmodified so that `\"fraction _expression\"` is now\r\n`\"fraction _expression_mul\"`. This is done to eliminate the incorrect\r\nalternatives in the ambiguous interpretations of `\\frac{a}{b} x+y`,\r\n`\\frac{a}{b} + \\frac{x}{y}`, `\\frac{a}{b} - \\frac{x}{y}`, etc.\r\n5. The Lark grammar now understands `\"+ expression\"` as just\r\n`\"expression\"`.\r\n6. Some tests have been modified to reflect change in behavior.\r\n\r\n    Relevant issue: https://github.com/sympy/sympy/issues/14007\r\n\r\n#### Release Notes\r\n\r\n<!-- Write the release notes for this release below between the BEGIN and END\r\nstatements. The basic format is a bulleted list with the name of the subpackage\r\nand the release note for this PR. For example:\r\n\r\n* solvers\r\n  * Added a new solver for logarithmic equations.\r\n\r\n* functions\r\n  * Fixed a bug with log of integers. Formerly, `log(-x)` incorrectly gave `-log(x)`.\r\n\r\n* physics.units\r\n  * Corrected a semantical error in the conversion between volt and statvolt which\r\n    reported the volt as being larger than the statvolt.\r\n\r\nor if no release note(s) should be included use:\r\n\r\nNO ENTRY\r\n\r\nSee https://github.com/sympy/sympy/wiki/Writing-Release-Notes for more\r\ninformation on how to write release notes. The bot will check your release\r\nnotes automatically to see if they are formatted correctly. -->\r\n\r\n<!-- BEGIN RELEASE NOTES -->\r\n* parsing\r\n  * Introduced matrix and literal complex number parsing.\r\n\r\n<!-- END RELEASE NOTES -->\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "What is this file?",
                                                        "author": {
                                                            "login": "asmeurer"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1459818157",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0165b38",
                                                            "authoredDate": "2024-01-19T12:35:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "That was auto generated by something. I think it is a graphical tree-like representation of one of the parsers. I will remove it before the final merge.",
                                                        "author": {
                                                            "login": "8vasu"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460130156",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0165b38",
                                                            "authoredDate": "2024-01-19T12:35:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This sppf.png file is generated by Lark when using debug mode. It is meant to facilitate debugging of the grammar.\nThat being said, it doesn't belong in the repo and should indeed be removed.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460376227",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0165b38",
                                                            "authoredDate": "2024-01-19T12:35:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This diff probably shouldn't be there.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460450022",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think this BEGIN_A and BEGIN_B (and similarly, END_A and END_B) is a good naming scheme. Can we think of an alternative, perhaps more descriptive name?",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460451786",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This shouldn't be here like this, and it shouldn't be a naked import. It should be inside the if lark clause. If lark is installed, then that evaluates to True and we can freely import from Lark. Otherwise, we need to define dummy classes for all the things we imported so that the code still works syntactically.\nThe TL;DR is that you need to move this inside the if lark clause, and then define a dummy Tree class in the else part of that clause.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460454205",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Maybe a couple of comments indicating what it means if len(tokens) is 4, or len(tokens) is 5 here would be nice to have.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460454741",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "handle_division doesn't need to be an external function like this. It can be a private helper function of the Transformer class. The Transformer class already has an example of a function like this:  _extract_differential_symbol.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460456635",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think this belongs here. I'm assuming that this was a copy-paste error.",
                                                        "author": {
                                                            "login": "wermos"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460457865",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The commented line should not be there, but I omitted \\\\\\\\ since that is the row separator for matrices. I will remove the commented line.",
                                                        "author": {
                                                            "login": "8vasu"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460459492",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Those are dummies. I am open to suggestions.",
                                                        "author": {
                                                            "login": "8vasu"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460460593",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Working on this.",
                                                        "author": {
                                                            "login": "8vasu"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460460920",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I will remove it now.",
                                                        "author": {
                                                            "login": "8vasu"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1460461497",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a31ab3",
                                                            "authoredDate": "2024-01-20T06:09:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think that we should turn off debug in production here.\nsppf.png only conditionally generates when you have some stuff like dot installed in environment,\nand maybe that's why we are getting different results (and extremely slow one for you)",
                                                        "author": {
                                                            "login": "sylee957"
                                                        },
                                                        "url": "https://github.com/sympy/sympy/pull/26098#discussion_r1468279205",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0165b38",
                                                            "authoredDate": "2024-01-19T12:35:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 338,
                        "title": "[Service] NIT followups to `AddService` in #316",
                        "repository": {
                            "nameWithOwner": "pokt-network/poktroll",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2024-01-19T16:29:19Z",
                        "mergedAt": "2024-01-19T21:41:23Z",
                        "url": "https://github.com/pokt-network/poktroll/pull/338",
                        "state": "MERGED",
                        "author": {
                            "login": "Olshansk"
                        },
                        "editor": null,
                        "body": "## Summary\r\n\r\nNIT followups to #316 added in a separate PR to avoid blocking the base PR.\r\n\r\n## Type of change\r\n\r\nSelect one or more:\r\n\r\n- [ ] New feature, functionality or library\r\n- [ ] Bug fix\r\n- [x] Code health or cleanup\r\n- [ ] Documentation\r\n- [ ] Other (specify)\r\n\r\n## Testing\r\n\r\n- [ ] **Run all unit tests**: `make go_develop_and_test`\r\n- [ ] **Run E2E tests locally**: `make test_e2e`\r\n- [ ] **Run E2E tests on DevNet**: Add the `devnet-test-e2e` label to the PR. This is VERY expensive, only do it after all the reviews are complete.\r\n\r\n## Sanity Checklist\r\n\r\n- [ ] I have tested my changes using the available tooling\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, updated documentation and left TODOs throughout the codebase\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Left a few nits on imports but gunna approve please fix then merge <3",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "NIT: These should be in the second block",
                                                        "author": {
                                                            "login": "h5law"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/338#discussion_r1459422117",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "NIT: Move this back to second block.",
                                                        "author": {
                                                            "login": "h5law"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/338#discussion_r1459422986",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Do you have any idea why this doesn't format it correctly?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/338#discussion_r1459666500",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "https://github.com/incu6us/goimports-reviser\nhttps://github.com/golang/vscode-go/wiki/features#format-and-organize-imports\nhttps://github.com/golang/vscode-go/wiki/advanced#formatting-code-and-organizing-imports\n\n  \n    \n      poktroll/.golangci.yml\n    \n    \n         Line 30\n      in\n      943669e\n    \n  \n  \n    \n\n        \n          \n           gci: \n        \n    \n  \n\n\nThese links should help, I don't know exactly as I don't use vscode - but the last code reference to my linting PR should help as a reference on the 2nd link.",
                                                        "author": {
                                                            "login": "h5law"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/338#discussion_r1459703230",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "goimports != goimports-reviser you want a final group which is prefixed with our repo name. Pretty sure there is a goimports-reviser plugin maybe for vscode but whatever way you find to make it work - document it somewhere so we can make a configs section",
                                                        "author": {
                                                            "login": "h5law"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/338#discussion_r1459706335",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "https://chat.openai.com/share/d2590505-31e2-4e34-be93-8e4fabf8d872 @Olshansk this should do it ;)",
                                                        "author": {
                                                            "login": "h5law"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/338#discussion_r1459717523",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "incu6us/goimports-reviser#147 \ud83e\udd37",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/338#discussion_r1459914701",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c3e842b",
                                                            "authoredDate": "2024-01-19T16:32:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 9209,
                        "title": "Add debugging to user settings page",
                        "repository": {
                            "nameWithOwner": "PrairieLearn/PrairieLearn",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2024-01-04T14:39:45Z",
                        "mergedAt": null,
                        "url": "https://github.com/PrairieLearn/PrairieLearn/pull/9209",
                        "state": "CLOSED",
                        "author": {
                            "login": "trombonekenny"
                        },
                        "editor": null,
                        "body": "It would be helpful to have an endpoint in PL that showed what data we received from the authentication provider. This wouldn't be an everyday requirement, but might help us quickly troubleshoot SSO setup with institution admins.\r\n\r\nThe User Settings page seemed like a reasonable place to display some additional authn information. This PR adds a \"?debug\" query flag to the page to enable embedding more information. There is a toggle for this mode at the bottom of the page -- if we want this functionality to be more hidden, we can remove the visible link to debug mode.\r\n\r\nRight now it only shows LTI 1.3 authentication data from the session. That still needs to be saved there; either in this PR or a different one.",
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 2272,
                        "title": "Keep updates and messages in outbox until client is connected",
                        "repository": {
                            "nameWithOwner": "zauberzeug/nicegui",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2024-01-01T20:21:16Z",
                        "mergedAt": "2024-01-05T14:13:56Z",
                        "url": "https://github.com/zauberzeug/nicegui/pull/2272",
                        "state": "MERGED",
                        "author": {
                            "login": "falkoschindler"
                        },
                        "editor": {
                            "login": "falkoschindler"
                        },
                        "body": "This PR is trying to delay updates and messages in case the corresponding client is not yet connected. This will solve problems like this:\r\n\r\n```py\r\n@ui.page('/')\r\ndef page():\r\n    label = ui.label('Hello world!')\r\n\r\n    async def update():\r\n        label.text = 'Hello again!'  # problem 1\r\n        with label:\r\n            ui.run_javascript('alert(\"Hello from JavaScript!\")')  # problem 2\r\n    background_tasks.create(update())\r\n```\r\n\r\nBecause element updates and other messages are kept in separate queues, there are basically two distinct problems. Messages are already solved, updates are still work in progress.",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "I think it would be better to have one loop for each client. Otherwise a blocking client.outbox.send() from one client will affect all the others. Even though a sio.emit() does not wait for a response object from the other side, it still can take time. See my inquiry with ChatGPT: https://chat.openai.com/share/266efdfa-5002-4670-abc5-e9941e437cf0",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Wonderful \ud83e\udd42",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 3,
                        "title": "Type call function data and response",
                        "repository": {
                            "nameWithOwner": "davestewart/extension-bus",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2024-01-16T13:40:34Z",
                        "mergedAt": null,
                        "url": "https://github.com/davestewart/extension-bus/pull/3",
                        "state": "CLOSED",
                        "author": {
                            "login": "davestewart"
                        },
                        "editor": {
                            "login": "davestewart"
                        },
                        "body": "This PR types the `call()` function `data` and `response`:\r\n\r\n```ts\r\n// background\r\nimport { makeBus } from '../src'\r\n\r\nimport Tab = chrome.tabs.Tab\r\n\r\nconst bus = makeBus('content', {\r\n  handlers: {\r\n    tabs: {\r\n      get ({ id }): Promise<Tab> {\r\n        return chrome.tabs.get(id)\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n```ts\r\n// some other process\r\n\r\n// existing bus\r\nbus.call<Tab, { id: number }>('tabs/get', { id: 1 }).then(tab => {\r\n  if (tab) {\r\n    console.log(tab.url)\r\n  }\r\n})\r\n```\r\n\r\nThis PR doesn't intend to provide any type safety between the handlers and the call, but allows a user to type the call parameters / return itself.\r\n\r\n@oliverdunk - does this answer your request?",
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjIw",
                "hasNextPage": true,
                "hasPreviousPage": true,
                "startCursor": "Y3Vyc29yOjEx"
            },
            "issueCount": 96
        }
    }
}