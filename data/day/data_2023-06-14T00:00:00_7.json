{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 9227,
                        "title": "(PC-25708)[API] fix: handle duplication during offer creation/edition",
                        "repository": {
                            "nameWithOwner": "pass-culture/pass-culture-main",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-11-20T16:00:16Z",
                        "mergedAt": "2023-11-27T16:23:43Z",
                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227",
                        "state": "MERGED",
                        "author": {
                            "login": "ogeber"
                        },
                        "editor": {
                            "login": "jira"
                        },
                        "body": "## But de la pull request\r\n\r\nLorsqu'on va mettre en place la pagination (en mettant le FF WIP_PRO_STOCK_PAGINATION \u00e0 True dans un premier temps), on va devoir g\u00e9rer la duplication d'offre (c\u00e0d la cr\u00e9ation d'une offre d\u00e9j\u00e0 existante) par le backend et non plus par le front-end. \r\n\r\nCe ticket sera merged dans la branche en cours de dev front [PC-25429](https://github.com/pass-culture/pass-culture-main/tree/PC-25429-use-paginated-route-for-stock-event) \r\n\r\nLes fixme seront supprim\u00e9s lorsqu'on va supprimer le FF WIP_PRO_STOCK_PAGINATION (pr\u00e9vu dans le ticket jira PC-25945)\r\n\r\nTicket Jira (ou description si BSR) : https://passculture.atlassian.net/browse/PC-25708\r\n\r\n## V\u00e9rifications\r\n\r\n- [x] J'ai \u00e9crit les tests n\u00e9cessaires\r\n- [ ] J'ai relu attentivement les migrations, en particulier pour \u00e9viter les _locks_, et je pr\u00e9viens les \u00e9quipes Sh\u00e9rif et Data\r\n- [ ] J'ai ajout\u00e9 des screenshots pour d'\u00e9ventuels changements graphiques\n\n[PC-25429]: https://passculture.atlassian.net/browse/PC-25429?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u00c0 partir du moment o\u00f9 on active le FF on ne fait plus rien ? Il n\u2019y a pas un bout du bloc du dessous qui devrait \u00eatre d\u00e9sindent\u00e9 ?",
                                                        "author": {
                                                            "login": "damien-ramelet"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1400585244",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7033da7",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u00c7a n\u2019est pas plut\u00f4t le r\u00f4le d\u2019une contrainte d\u2019unicit\u00e9 en DB\u202f?",
                                                        "author": {
                                                            "login": "damien-ramelet"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1400590401",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7033da7",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "C'est vrai que l\u00e0 on fait une requ\u00eate par stock \u00e0 cr\u00e9er. Ce qui peut faire jusqu'\u00e0 2500 requ\u00eate pour une requ\u00eate \u00e0 l'api.\nSi on veut vraiment v\u00e9rifier qu'un stock n'est pas d\u00e9j\u00e0 existant en base je pense qu'on peut le faire d'un coup avant. Au d\u00e9but de la route faire une seule requ\u00eate pour savoir si un stock existe d\u00e9j\u00e0.\nOn pourrait trouver avant coup quels stocks \u00e0 cr\u00e9er existent d\u00e9j\u00e0 et les ignorer",
                                                        "author": {
                                                            "login": "mageoffray"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1401750271",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7033da7",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "(autre) rien \u00e0 voir mais c'est bizarre que StockCreationBodyModel provienne de pcapi.routes.public.books_stocks.serialization",
                                                        "author": {
                                                            "login": "cepehang"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1401770306",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "87a253c",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "La contrainte d'unicit\u00e9 n'est pas possible parce que certains champs sont nullables, comme beginningDatetime et bookingLimitDatetime\nPour rappel, en SQL null est diff\u00e9rent de null sauf dans un select distinct",
                                                        "author": {
                                                            "login": "cepehang"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1401774890",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7033da7",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Voici une piste pour \u00e9viter les N+1 requ\u00eates : https://chat.openai.com/share/7f809ea3-cfcf-4ac2-80b9-1197feff7f1b",
                                                        "author": {
                                                            "login": "cepehang"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1401782514",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7033da7",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@cepehang\nAh bien vu, en effet !",
                                                        "author": {
                                                            "login": "damien-ramelet"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1401795915",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7033da7",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Est-ce qu'on ne pourrait pas r\u00e9gler ce probl\u00e8me avec une contrainte pour les cas o\u00f9 il n'y a pas de dates et une pour les autres lignes ?",
                                                        "author": {
                                                            "login": "jeremieb-pass"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1401797670",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7033da7",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "De base je me disais que c\u2019\u00e9tait certainement faisable de faire:\nCREATE UNIQUE INDEX unique_stock_per_offer ON stock (\"offerId\", \"beginningDatetime\", \"bookingLimitDatetime\", \"price\", \"priceCategoryId\", \"quantity\") WHERE stock.\"isSoftDeleted\" = False\nPour pouvoir avoir un index partiel et g\u00e9rer la contrainte d\u2019unicit\u00e9 sur les stocks qui ne sont pas soft delete. Mais reste effectivement le soucis des colonnes nullable, on peut aussi les exclure de l\u2019index mais il y a du coup un risque de doublon",
                                                        "author": {
                                                            "login": "damien-ramelet"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1401801663",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7033da7",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "(nommage) c'est une liste de stock ici, pas une liste d'id de stocks",
                                                        "author": {
                                                            "login": "cepehang"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1403595557",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c4e6baa",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "(design) je ne suis pas fan du mod\u00e8le pydantic qui contient des r\u00e8gles de validation m\u00e9tiers trop complexes, \u00e7a devrait \u00eatre la responsabilit\u00e9 de l'appelant de ne pas instancier n'importe quoi\n(performance) ici on est en O(n\u00b2) ce qui est inadmissible quand on ne veut pas prendre trop de temps \u00e0 s\u00e9rialiser, je suis d'avis \u00e0 simplement supprimer ce validateur",
                                                        "author": {
                                                            "login": "cepehang"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1403598420",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c4e6baa",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "(nommage) combinations_to_check ou si tu n'aimes pas le pluriel un nom avec list dedans",
                                                        "author": {
                                                            "login": "cepehang"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1404429393",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "124ef31",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "tu n'as pas l'air d'avoir besoin de beginning_later dans ce test",
                                                        "author": {
                                                            "login": "cepehang"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1404435530",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "124ef31",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "(nommage) tu testes la cr\u00e9ation de stocks ici",
                                                        "author": {
                                                            "login": "cepehang"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1404437728",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "124ef31",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Il faut pas qu'il existe pour pouvoir le modifier ?",
                                                        "author": {
                                                            "login": "ghaliela"
                                                        },
                                                        "url": "https://github.com/pass-culture/pass-culture-main/pull/9227#discussion_r1406168494",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "3cf548a",
                                                            "authoredDate": "2023-11-20T15:45:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 167,
                        "title": "Refactored core lib into 'agent-utils', 'evo-agent' and 'script-writer-agent' libs",
                        "repository": {
                            "nameWithOwner": "polywrap/evo.ninja",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-09-14T17:08:19Z",
                        "mergedAt": "2023-09-16T12:46:48Z",
                        "url": "https://github.com/polywrap/evo.ninja/pull/167",
                        "state": "MERGED",
                        "author": {
                            "login": "nerfZael"
                        },
                        "editor": {
                            "login": "nerfZael"
                        },
                        "body": "Like the title says core lib has been refactored into 'agent-utils', 'evo-agent' and 'script-writer-agent' libs.\r\nThe core lib itself I did not delete to not break everything with merge conflicts if another PR gets merge first",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "I think it would be much better to remove core, so that the changeset shows renames instead of adds. The full-file adds break the correlation of subsequent changes that may be based on previous commits.\nTL;DR: I think we'll have less conflicts if we remove core such that file changes are registered as renames.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "NIT: for our package naming convention, what do you think about\n@evo-ninja/evo-agent\n@evo-ninja/js-script-writer-agent\n@evo-ninja/agent-utils",
                                                        "author": {
                                                            "login": "dOrgJelli"
                                                        },
                                                        "url": "https://github.com/polywrap/evo.ninja/pull/167#discussion_r1327175988",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d053885",
                                                            "authoredDate": "2023-09-14T17:07:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Can we do away with the I prefix for interfaces? I think it is redundant, isn't consistent with the rest of the codebase, and is something that is not very common in modern typescript. GPT response: https://chat.openai.com/share/fe121cf1-d304-4aad-a223-151ae99ec458",
                                                        "author": {
                                                            "login": "dOrgJelli"
                                                        },
                                                        "url": "https://github.com/polywrap/evo.ninja/pull/167#discussion_r1327179733",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d053885",
                                                            "authoredDate": "2023-09-14T17:07:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think it makes sense to also have the js-engine types & shims in this package, as it fits nicely within this package's responsibilities.",
                                                        "author": {
                                                            "login": "dOrgJelli"
                                                        },
                                                        "url": "https://github.com/polywrap/evo.ninja/pull/167#discussion_r1327181334",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d053885",
                                                            "authoredDate": "2023-09-14T17:07:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Convention change or did you just add \"js-\" prefix to the script writer agent?",
                                                        "author": {
                                                            "login": "nerfZael"
                                                        },
                                                        "url": "https://github.com/polywrap/evo.ninja/pull/167#discussion_r1327362738",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d053885",
                                                            "authoredDate": "2023-09-14T17:07:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "While I would much rather work on a project with this convention than without, and argued for such in the past, it is not a hill I want to die on, so sure, we can do away with the convention on evo.",
                                                        "author": {
                                                            "login": "nerfZael"
                                                        },
                                                        "url": "https://github.com/polywrap/evo.ninja/pull/167#discussion_r1327372620",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d053885",
                                                            "authoredDate": "2023-09-14T17:07:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Does the script writer even use the engine or shims at all? I don't think it does. It would be weird to put them there at this moment",
                                                        "author": {
                                                            "login": "nerfZael"
                                                        },
                                                        "url": "https://github.com/polywrap/evo.ninja/pull/167#discussion_r1327373967",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d053885",
                                                            "authoredDate": "2023-09-14T17:07:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "yep my bad, thought I changed more but I ended up aligning with what you already had after rewriting a few times :P",
                                                        "author": {
                                                            "login": "dOrgJelli"
                                                        },
                                                        "url": "https://github.com/polywrap/evo.ninja/pull/167#discussion_r1327951713",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d053885",
                                                            "authoredDate": "2023-09-14T17:07:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Bless your soul \ud83d\ude4f I would honestly be fine with it if I saw other projects do the same within the TypeScript ecosystem.",
                                                        "author": {
                                                            "login": "dOrgJelli"
                                                        },
                                                        "url": "https://github.com/polywrap/evo.ninja/pull/167#discussion_r1327951909",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d053885",
                                                            "authoredDate": "2023-09-14T17:07:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ah true, good point, though it does make explicit reference to what supported packages (shims) exist.",
                                                        "author": {
                                                            "login": "dOrgJelli"
                                                        },
                                                        "url": "https://github.com/polywrap/evo.ninja/pull/167#discussion_r1327952021",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d053885",
                                                            "authoredDate": "2023-09-14T17:07:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 265,
                        "title": "Enhancements to Tournament Creation and Editing for Non-Staff Users",
                        "repository": {
                            "nameWithOwner": "uchicago-cs/chigame",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-11-22T17:56:46Z",
                        "mergedAt": "2023-12-06T01:39:08Z",
                        "url": "https://github.com/uchicago-cs/chigame/pull/265",
                        "state": "MERGED",
                        "author": {
                            "login": "jb-01"
                        },
                        "editor": null,
                        "body": "**Description:**\r\n\r\nThis PR relates to issue #172 and introduces several key updates to the tournament management system, focusing on the capabilities of non-staff users. The changes are aimed at providing non-staff users with greater autonomy in creating and managing tournaments while maintaining necessary oversight and control mechanisms. The updates include modifications to both the front-end (CRUD pages) and the back-end (Tournament model and related views).\r\n\r\n**Key Changes:**\r\n\r\n1. **Tournament Creation with Token Usage**: Non-staff users can now create tournaments, deducting one token from their account per tournament created. This enforces a token-based permission system, integrating with the User team's token management functionality.\r\n\r\n2. **Partial Edit Control for Tournament Creators**: Creators of a tournament (non-staff users who created a tournament) have been granted partial editing control over their tournaments. This includes updating certain attributes of the tournament. However, they cannot add or remove matches or players \u2013 actions which require staff intervention.\r\n\r\n3. **Access Control on Tournaments**: Non-staff users can only access tournaments they are part of. The `TournamentListView` has been modified to filter out tournaments that the user is not participating in, enhancing privacy and focus.\r\n\r\n4. **Restriction on Tournament Deletion**: Non-staff users are not permitted to delete or disable tournaments they created. Such actions must be routed through staff users due to the complex backend events triggered by a tournament's deletion.\r\n\r\n5. **Model Enhancements**: The `Tournament` model has been updated to include a `created_by` field, ensuring clarity on ownership. This field is critical for implementing the above functionalities, particularly around editing permissions and access control.\r\n\r\n**Technical Details:**\r\n\r\n- `TournamentCreateView` and `TournamentUpdateView` have been modified to check the user's token balance and ownership, respectively. `TournamentCreateView` deducts one token for each tournament created.\r\n- The `Tournament` model's `created_by` field links to the `User` model, establishing tournament ownership.\r\n- The `get_queryset` method in `TournamentListView` filters tournaments based on user participation and staff status.\r\n- `distribute_tokens()` is a future-proof function for automatically reloading each user\u2019s token balance after 30 days. It has been commented out so that the Users group can make necessary modifications to their `User` model beforehand.",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "you might want to check this link for an alternative way for implementing distribute token:\nhttps://chat.openai.com/share/e3e3871f-4acd-4959-94a3-d260c84f8ede\nNo matter which way you choose, please make sure to well-document your approach to the issue this PR is related to.",
                                                        "author": {
                                                            "login": "MuyanXie"
                                                        },
                                                        "url": "https://github.com/uchicago-cs/chigame/pull/265#discussion_r1402869452",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1da52e2",
                                                            "authoredDate": "2023-11-22T17:59:41Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm we don't have to have a placeholder for future date check. We can just manually distribute tokens on a certain date every month to all users. Please see above link for a reference. Once this is addressed, we are good to go",
                                                        "author": {
                                                            "login": "MuyanXie"
                                                        },
                                                        "url": "https://github.com/uchicago-cs/chigame/pull/265#discussion_r1402870116",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1da52e2",
                                                            "authoredDate": "2023-11-22T17:59:41Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "Well done! This PR looks good to me. Please check comments in case it might provide some insights. Once you've done documenting the distribute_token method and address the date to add token placeholder, I'll go ahead and approve this PR.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "This is a big PR, and clearly a lot of thought has been put in for all the functionalities. A few of the defined changes aren't properly working (see comments), but really great work with this one so far! Also, make sure you update with dev because I think you might get some migration conflicts.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It seems like you are removing tokens for staff as well which makes it so staff can only create one tournament. I'm getting the same error regardless of whether I am creating a tournament from a staff account or not. Also, I'd prefer if you had the redirection before the user tries to fill our the form. Maybe you could do if user.tokens and user.is_staff and return redirect immediately.",
                                                        "author": {
                                                            "login": "elizabethli31"
                                                        },
                                                        "url": "https://github.com/uchicago-cs/chigame/pull/265#discussion_r1405224495",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1da52e2",
                                                            "authoredDate": "2023-11-22T17:59:41Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Your PR description says staff members should be able to add/remove players, but you removed players and matches, so it doesn't allow for this functionality.",
                                                        "author": {
                                                            "login": "elizabethli31"
                                                        },
                                                        "url": "https://github.com/uchicago-cs/chigame/pull/265#discussion_r1405225349",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1da52e2",
                                                            "authoredDate": "2023-11-22T17:59:41Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This line seems to be making it so that only the creator is added to the players list.\nplayers = form.cleaned_data['players'] tournament.players.add(*players)\nwill fix this.",
                                                        "author": {
                                                            "login": "elizabethli31"
                                                        },
                                                        "url": "https://github.com/uchicago-cs/chigame/pull/265#discussion_r1405228071",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1da52e2",
                                                            "authoredDate": "2023-11-22T17:59:41Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "Token usage for creation, access control, and tournament deletion all work well! I would prefer if you could just remove the delete button for non-staff users instead of leading to a forbidden page (or at least it should be redirecting the user back to the tournament detail page with an error message).\nA couple of things I'd like to see in the next commit:\n\nPartial edit control needs to be fixed (removing or adding players). See my comment for more details\nInstead of taking users to a forbidden page (after trying to create without enough tokens, updating, deleting, etc.), I'd like for it to redirect back to the tournaments page instead. Reference some previous PRs from your team for code that includes messages.error and return(redirect)",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I am getting an error when I try to remove players and save the updated tournament (both as a non-staff and staff).\n\nIt's coming from line 357 (related_match = current_tournament.matches.get). This is happening because when I create a tournament, the matches aren't being created for some reason (it could be that your PR isn't up to date because previously this worked fine).",
                                                        "author": {
                                                            "login": "elizabethli31"
                                                        },
                                                        "url": "https://github.com/uchicago-cs/chigame/pull/265#discussion_r1412901622",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "12678f3",
                                                            "authoredDate": "2023-11-30T19:24:11Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Also, when I try to add players, I am getting \"You cannot add new players to the tournament after it has started.\" even if my tournament has not started yet.",
                                                        "author": {
                                                            "login": "elizabethli31"
                                                        },
                                                        "url": "https://github.com/uchicago-cs/chigame/pull/265#discussion_r1412901909",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "12678f3",
                                                            "authoredDate": "2023-11-30T19:24:11Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "Token usage works and errors are handled well! I'm still able to add players even if I'm not a staff. Also, please add a check somewhere in the detail view that doesn't allow players to access tournaments they are not in. Even though the tournaments are hidden from the list view, players can still access the detail view of them just by going to the specific url. Unless the functionality you want is for players to be able to find them somehow but not view them as a list. Additionally, on some pages, I'm seeing two update buttons which I think is the result of a merge with dev. Could you fix that too?",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "You need to check somewhere here that I am staff to edit the players too. Currently, I'm able to update the players even if I'm not staff",
                                                        "author": {
                                                            "login": "elizabethli31"
                                                        },
                                                        "url": "https://github.com/uchicago-cs/chigame/pull/265#discussion_r1415992705",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "aeb28c8",
                                                            "authoredDate": "2023-12-05T05:57:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM!",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 796,
                        "title": "feat: basic actes implementation and confirmite refacto",
                        "repository": {
                            "nameWithOwner": "etalab/annuaire-entreprises-site",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-11-21T17:47:36Z",
                        "mergedAt": "2023-11-29T17:38:43Z",
                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796",
                        "state": "MERGED",
                        "author": {
                            "login": "XavierJp"
                        },
                        "editor": {
                            "login": "XavierJp"
                        },
                        "body": "- refacto : donneesRestreinte into conformite\r\n- refacto : can now use `isProtected` in `<DataSection />`\r\n- feat: basic implementation of an Actes section accessible to every agents\r\n\r\ncloses #793 ",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Super, on sort du POC pour l'espace agent, ce qui va permettre de rajouter plus facilement de nouvelles fonctionnalit\u00e9s ! \ud83d\udc4f",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "On aurait envie que cette logique qui est purement d'affichage soit port\u00e9e par le \u00ab dumb \u00bb composant Section. Mais ce n'est absolument pas bloquant pour cette PR.",
                                                        "author": {
                                                            "login": "johangirod"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1401742207",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a5f6b84",
                                                            "authoredDate": "2023-11-21T18:13:14Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Avec le log qui se fait c\u00f4t\u00e9 serveur. J'aime bien !\nJe pense que pour bien polir la logique, useFetchData pourrait rethrow toutes les erreurs qui ne sont pas \u00ab attendues \u00bb (pas HttpError ni RequestAbortedDuringUnloadException). A r\u00e9flechir pour une prochaine PR.",
                                                        "author": {
                                                            "login": "johangirod"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1401749296",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a5f6b84",
                                                            "authoredDate": "2023-11-21T18:13:14Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "C'est top ! J'ai h\u00e9sit\u00e9 \u00e0 faire cette refacto hier, j'ai bien fait d'attendre :p",
                                                        "author": {
                                                            "login": "johangirod"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1401755576",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a5f6b84",
                                                            "authoredDate": "2023-11-21T18:13:14Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "2 trucs qui me chiffonent:\n\nDe la logique de mod\u00e8le dans de la vue\nY'a pas de test (donc je sais pas si \u00e7a marche :D)",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Cette logique tu ne peux pas la d\u00e9porter ailleurs ? Je suppose que tu as la m\u00eame logique c\u00f4t\u00e9 annuaires ?",
                                                        "author": {
                                                            "login": "skelz0r"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409440524",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "M\u00eame commentaire que pour actes\nJ'ajouterai que c'est \u00e0 mon sens pas une logique de vue ici mais vraiment intrins\u00e8que \u00e0 l'unit\u00e9 l\u00e9gale.",
                                                        "author": {
                                                            "login": "skelz0r"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409442005",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "(question de noob en js: y'a pas mieux que \u00e7a pour v\u00e9rifier que c'est null or empty ?)",
                                                        "author": {
                                                            "login": "skelz0r"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409443060",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Pas a ma connaissance :)",
                                                        "author": {
                                                            "login": "XavierJp"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409458419",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Mais je suis sur que tu as des libs pour \u00e7a",
                                                        "author": {
                                                            "login": "XavierJp"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409458784",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hum je ne vois pas trop comment le d\u00e9porter ailleurs. Est ce que ce sont les checks qui te d\u00e9rangent ? Ou le fait que la r\u00e9ponse change selon la nature de l'objet ?",
                                                        "author": {
                                                            "login": "XavierJp"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409463693",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "https://chat.openai.com/share/caad291b-920c-4e2e-bcc1-04c191f2d587\nLe contraire m'aurait \u00e9norm\u00e9ment \u00e9tonn\u00e9 pour un language comme typescript",
                                                        "author": {
                                                            "login": "skelz0r"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409464767",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ce qui me d\u00e9range c'est que tu fais des checks de propri\u00e9t\u00e9s sur un objet qui est un mod\u00e8le, et que \u00e7a n'a pas lieu d'\u00eatre dans de la vue (car il s'agit de logique m\u00e9tier de savoir qu'une association et un service public ne peuvent pas avoir d'actes)\nPour moi il faudrait avoir quelque chose comme uniteLegale.canHaveActes? (si c'est pas une m\u00e9thode \u00e0 minima un service en composition sur l'objet uniteLegale).",
                                                        "author": {
                                                            "login": "skelz0r"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409470564",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Est ce que ce sont les checks qui te d\u00e9rangent ? Ou le fait que la r\u00e9ponse change selon la nature de l'objet ?\n\nEt du coup ni l'un ni l'autre",
                                                        "author": {
                                                            "login": "skelz0r"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409471202",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hum je suis pas sur que ca marche pour ce que je cherche a faire ici :\nhttps://www.typescriptlang.org/play?#code/MYewdgzgLgBAhjAvDA2gXQNwChSVgI2TAFcAbU7XaGYJGYsAEwFMAzASzGcex3AhClmAOlIgA5gAoAhHACUfSIJFip0-AqrLREmcDlA",
                                                        "author": {
                                                            "login": "XavierJp"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409477458",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ah oui tr\u00e8s bien vu. Aucune raison d'appeler ces deux types d'entit\u00e9s ici. Merci",
                                                        "author": {
                                                            "login": "XavierJp"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409481447",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Il est marrant ce Chatgpt quand m\u00eame \u00e0 donner des fausses pistes :D",
                                                        "author": {
                                                            "login": "skelz0r"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409482221",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Non en fait je ne vois pas comment faire.\nLes assos et les services publics ne devraient pas avoir d'actes, mais il y une petite chance pour qu'ils en aient.\nDonc au niveau modele on les appelle.\nOn pourrait avoir une variable uniteLegale.noActesWarning mais c'est complexe et in fine, le warning lui-m\u00eame est essentiellement m\u00e9tier.\nSi la structure n'a pas d'actes ET c'est une asso ou un service public alors oui on peut se dire que c'est le cas normal d'une asso/sp non immatricul\u00e9 au RNE",
                                                        "author": {
                                                            "login": "XavierJp"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409483788",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Les assos peuvent se retrouver au RNE quand elles ont un jugement / observation au tribunal du commerce. En tout cas c'\u00e9tait le cas pour le RCS, mais est ce toujours le cas dans le RNE ? Et surtout, est ce qu'elles peuvent avoir des actes associ\u00e9s a cet enregistrement ?\nEn tout cas si on pouvait en \u00eatre certain il faudrait pouvoir ne pas appeler la route des actes pour les assos et les services publics.",
                                                        "author": {
                                                            "login": "XavierJp"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409508031",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Quelque soit les justifications que tu avances cela ne change rien au fait que tu effectues de la logique m\u00e9tier dans une vue, ce qui n'est pas une bonne approche. L'aspect technique de la chose dans une codebase ts je te la laisse :D",
                                                        "author": {
                                                            "login": "skelz0r"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409516351",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Pas grand chose \u00e0 dire \u00e0 la relecture, j'avais des commentaires mais en fait c'\u00e9tait sur les commits de merge, ultra surpris de voir ces commits plutot qu'un process de rebase mais c'est nettement plus large que la PR, je trouve que ca n'aide pas \u00e0 la relecture et pollue l'historique.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "IMO ce que veux dire loic c'est de simplement extraire de la vue la r\u00e8gle qui \u00e9tabli si oui ou non il y a des actes.\nC'est pas le check, c'est pas la logique d'affichage de la vue, c'est la r\u00e8gle m\u00e9tier sous jacente.\nDonc d\u00e9finir une m\u00e9thode dans '#models/index', hasActes qui permet de centraliser la r\u00e8gle m\u00e9tier de ce que ca signifie d'avoir des actes. Apr\u00e8s pour le rangement exact je ne sais pas.\nOn aura pas de solution \u00e0 base de model vu qu'on a des instances d'objets json sign\u00e9 par TS et non de vrai instance d'objet hydrat\u00e9 (au sens langage objet classique j'entends). Donc c'est une approche service est \u00e0 privil\u00e9gier ici.",
                                                        "author": {
                                                            "login": "Un3x"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409613417",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "(on a debrief de vive voix ;))",
                                                        "author": {
                                                            "login": "skelz0r"
                                                        },
                                                        "url": "https://github.com/etalab/annuaire-entreprises-site/pull/796#discussion_r1409623031",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "078d9f0",
                                                            "authoredDate": "2023-11-29T14:43:50Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 1091,
                        "title": "add option to enable or disable k3s local-storage controller",
                        "repository": {
                            "nameWithOwner": "kube-hetzner/terraform-hcloud-kube-hetzner",
                            "primaryLanguage": {
                                "name": "HCL"
                            }
                        },
                        "createdAt": "2023-11-09T17:29:58Z",
                        "mergedAt": "2023-11-24T16:22:02Z",
                        "url": "https://github.com/kube-hetzner/terraform-hcloud-kube-hetzner/pull/1091",
                        "state": "MERGED",
                        "author": {
                            "login": "mnbro"
                        },
                        "editor": null,
                        "body": "",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "@mnbro Thanks for the clarification, so please we would need to add support for the local-path provisioner for that new feature to make sense, as local storage cannot be used without it. Please follow the same method as Longhorn.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 2368,
                        "title": "Android system auth",
                        "repository": {
                            "nameWithOwner": "digitalbitbox/bitbox-wallet-app",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-11-22T10:53:15Z",
                        "mergedAt": "2023-11-29T14:54:27Z",
                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368",
                        "state": "MERGED",
                        "author": {
                            "login": "Beerosagos"
                        },
                        "editor": {
                            "login": "Beerosagos"
                        },
                        "body": "Watch-only can benefit from a feature that allows the user to authenticate when opening the bitboxapp, to protect the privacy. This commit creates an Auth component in the frontend that can trigger an environment-based authentication.\r\n\r\nOn Qt and Webdev the authentication succeds automatically, while on Android it requires the user to complete the system biometric authentication every time the app is resumed (.i.e. at startup and when the app comes to foreground after being put in the background).\r\n\r\nThe authentication check can be requested by the frontend using the `auth` endpoint.\r\n\r\nAuthentication messages from backend to frontend are sent via three new notifications:\r\n- 'auth-required': which triggers a new `authenticate` call from the frontend Auth component\r\n- 'auth-ok': which means authentication completed successfully\r\n- 'auth-err': which means authentication failed or has been canceled by the user.\r\n\r\nThere is also a `trigger-auth` endpoint that can be used by frontend components to trigger a new authentication flow (making the backend send a new `auth-required` notification).\r\n\r\nNOTES: \r\n- the authentication screen is just a draft and will need some styling in a future PR",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't like much using a MutableLiveData to trigger the requestAuth, but I could not find a nicer way to do it.",
                                                        "author": {
                                                            "login": "Beerosagos"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402147666",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e113dcf",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "very nice! haven't tested it yet since testing android is quite difficult for me, but will do it once before we merge this.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "instead of style.hidden you could just return null?\nif (!autRequired) { return null; }\nto not put anything into the DOM.",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402898205",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "imo it would be clearer to use the \"auth\" subject for all three events and use the Data field instead to send additional info which will be captured in the frontend subscription callback param. See for example\n\n  \n    \n      bitbox-wallet-app/frontends/web/src/api/backend.ts\n    \n    \n        Lines 79 to 102\n      in\n      6b8ec3c\n    \n  \n  \n    \n\n        \n          \n           export type TSyncConnectKeystore = null | { \n        \n\n        \n          \n             typ: 'connect'; \n        \n\n        \n          \n             keystoreName: string; \n        \n\n        \n          \n           } | { \n        \n\n        \n          \n             typ: 'error'; \n        \n\n        \n          \n             errorCode: 'wrongKeystore'; \n        \n\n        \n          \n             errorMessage: ''; \n        \n\n        \n          \n           }; \n        \n\n        \n          \n            \n        \n\n        \n          \n           /** \n        \n\n        \n          \n            * Returns a function that subscribes a callback on a \"connect-keystore\". \n        \n\n        \n          \n            * Meant to be used with `useSubscribe`. \n        \n\n        \n          \n            */ \n        \n\n        \n          \n           export const syncConnectKeystore = () => { \n        \n\n        \n          \n             return ( \n        \n\n        \n          \n               cb: TSubscriptionCallback<TSyncConnectKeystore> \n        \n\n        \n          \n             ) => { \n        \n\n        \n          \n               return subscribeEndpoint('connect-keystore', ( \n        \n\n        \n          \n                 obj: TSyncConnectKeystore, \n        \n\n        \n          \n               ) => { \n        \n\n        \n          \n                 cb(obj); \n        \n\n        \n          \n               }); \n        \n\n        \n          \n             }; \n        \n\n        \n          \n           }; \n        \n    \n  \n\n and \n  \n    \n      bitbox-wallet-app/backend/accounts.go\n    \n    \n        Lines 571 to 578\n      in\n      6b8ec3c\n    \n  \n  \n    \n\n        \n          \n           backend.Notify(observable.Event{ \n        \n\n        \n          \n           \tSubject: \"connect-keystore\", \n        \n\n        \n          \n           \tAction:  action.Replace, \n        \n\n        \n          \n           \tObject: data{ \n        \n\n        \n          \n           \t\tType:         \"connect\", \n        \n\n        \n          \n           \t\tKeystoreName: keystoreName, \n        \n\n        \n          \n           \t}, \n        \n\n        \n          \n           })",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402899262",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "these feel more like they should be POST - GET is for retrieving data, POST is to change state.",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402900283",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "docstrings missing (I know it is a bit pedantic \ud83d\ude02 but imo it is great for code hygiene to always document exported functions, even if they are trivial).\nwe need to fix that linter :P",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402900821",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "i would move the runningInAndroid() check inside the EnableAuthSetting component so it is self-contained, but no big deal.",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402902404",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "wrong name :P",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402902592",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "remove empty line?",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402903233",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "shouldn't we also do an auth for enabling it, to test that it works? say the auth thing does not work for some reason on some systems or Android versions - if we enabled this the user might not be able to unlock it ever again.",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402903805",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "i am impressed that typescript allows this, seeing that unsubscribe is not defined yet syntactically speaking \ud83e\udd2f",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402904324",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "@thisconnect I wondered the other day why getConfig() does not return TConfig so that we don't have to put this as TConfig thing everywhere. is there a reason?",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402904776",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "i guess the reason is so you can do the stuff here in MainActivity to have access to MainActivity.this? or is there a different reason?\nthis line specifically to reset the requestAuth var so the next one triggers this callback again does look a bit fishy \ud83d\ude02\ni had a chat with ChatGPT: https://chat.openai.com/share/f7b28f24-d71f-4502-9fa9-0b79b0e7cc20\nit commented on the fact that a device rotation etc. will trigger a onStart() again and observe here again, which means it could be called multiple times for each auth-request? did you test what happens after you rotate the screen multiple times:\n\nwhat happens to an active auth request?\nwhat happens to a auth request triggered after some screen rotations?",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402905911",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e113dcf",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "sholdn't you set this back to false after auth has failed or succeeded, so that if multiple auth requests happen in parallel, only one is processed at once?",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1402914433",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e113dcf",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I forgot that we have TConfig :P\nThe plan is iirc that we move config stuff to a react context and then type it correctly.",
                                                        "author": {
                                                            "login": "thisconnect"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1407899966",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "i guess the reason is so you can do the stuff here in MainActivity to have access to MainActivity.this? or is there a different reason?\n\nYes, exactly.\nI tested device rotations, but those do not seem to trigger a new onStart. I never experienced issues in that sense. Anyway, I spent a lot of time trying to improve this part to make it both more readable and stable. I experienced some nasty bugs, but now it seems good enough to me.",
                                                        "author": {
                                                            "login": "Beerosagos"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1408966463",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e113dcf",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done",
                                                        "author": {
                                                            "login": "Beerosagos"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1408966784",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Good point, done.",
                                                        "author": {
                                                            "login": "Beerosagos"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1408967112",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Eheh sorry, added",
                                                        "author": {
                                                            "login": "Beerosagos"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1408967730",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done",
                                                        "author": {
                                                            "login": "Beerosagos"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1408967888",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ops :D",
                                                        "author": {
                                                            "login": "Beerosagos"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1408968090",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Good point. I did it, but since the backend automatically skipped the auth if the config was set to false, I had to introduce a new concept of forced auth, which is executed without considering the authentication config flag.",
                                                        "author": {
                                                            "login": "Beerosagos"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1408969769",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2603c2d",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "when enabling auth, the screen lock auth appears, but i cannot cancel it. if one cancels/fails the auth, can it just go back and not enable the setting?",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "phoenix calls this \"Screen lock\" and description \"Lock access to the app with Android's screen lock/fingerprint\". I think these fit better, as \"authentication\" is not very clear imo.",
                                                        "author": {
                                                            "login": "benma"
                                                        },
                                                        "url": "https://github.com/digitalbitbox/bitbox-wallet-app/pull/2368#discussion_r1409036669",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "98883bb",
                                                            "authoredDate": "2023-11-22T09:48:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "tACK, most excellent!",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 1528,
                        "title": "@W-14446652@ Change CSP enforcement to an opt-in middleware.",
                        "repository": {
                            "nameWithOwner": "SalesforceCommerceCloud/pwa-kit",
                            "primaryLanguage": {
                                "name": "JavaScript"
                            }
                        },
                        "createdAt": "2023-11-07T17:30:26Z",
                        "mergedAt": "2023-11-07T23:25:44Z",
                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528",
                        "state": "MERGED",
                        "author": {
                            "login": "wjhsf"
                        },
                        "editor": null,
                        "body": "<!--- Provide a short summary of your changes in the Title field above -->\r\n\r\nIn v3.2.0, to facilitate adoption of Storefront Preview, we introduced logic to enforce a Content-Security-Policy header containing all the directives that are required for PWA Kit / Storefront Preview to function. However, while making CSP management easier for those who use it, this is a breaking change for users who explicitly do _not_ use the Content-Security-Policy header. \ud83e\udd15 Oops.\r\n\r\nThis PR simply removes the middleware function from the internal logic of `pwa-kit-runtime` and exports it so that end users must opt in to using the function.\r\n\r\n# Description\r\n\r\n<!--- A longer summary of your changes, including: a description of the issue that you\u2019re addressing, a list of required dependencies (if applicable), and any other relevant context. -->\r\n\r\n# Types of Changes\r\n\r\n<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->\r\n\r\n- [ ] **Bug fix** (non-breaking change that fixes an issue)\r\n- [ ] **New feature** (non-breaking change that adds functionality)\r\n- [ ] **Documentation update**\r\n- [ ] **Breaking change** (could cause existing functionality to not work as expected)\r\n- [ ] **Other changes** (non-breaking changes that does not fit any of the above)\r\n\r\n> Breaking changes include:\r\n>\r\n> - Removing a public function or component or prop\r\n> - Adding a required argument to a function\r\n> - Changing the data type of a function parameter or return value\r\n> - Adding a new peer dependency to `package.json`\r\n\r\n# Changes\r\n\r\n- (change1)\r\n\r\n# How to Test-Drive This PR\r\n\r\n- Check out v3.2.0, launch the app, save the CSP header.\r\n- Check out this code, launch the app. CSP header should be the same.\r\n- Remove the two security header middleware functions. Restart the app. CSP header should not be present.\r\nhttps://github.com/SalesforceCommerceCloud/pwa-kit/blob/3582944d8fc0053ac19022e0637610646f494384/packages/template-retail-react-app/app/ssr.js#L38-L60\r\n- Bonus fun: move the `defaultSecurityHeaders` middleware to after the `helmet` middleware and see that it doesn't change the CSP!\r\n\r\n# Checklists\r\n\r\n<!--- Enter an `x` in all the boxes that apply. -->\r\n<!--- If you\u2019re unsure about any of these, don\u2019t hesitate to ask. We\u2019re here to help! -->\r\n\r\n## General\r\n\r\n- [ ] Changes are covered by test cases\r\n- [ ] CHANGELOG.md updated with a short description of changes (_not_ required for documentation updates)\r\n\r\n## Accessibility Compliance\r\n\r\nYou must check off all items in **one** of the follow two lists:\r\n\r\n- [ ] There are no changes to UI\r\n\r\n_or..._\r\n\r\n- [ ] Changes were tested with a Screen Reader (iOS VoiceOver or Android Talkback) and had no issues\r\n- [ ] Changes comply with [WCAG 2.0 guidelines levels A and AA](https://www.wuhcag.com/wcag-checklist/)\r\n- [ ] Changes to common UI patterns and interactions comply with [WAI-ARIA best practices](https://www.w3.org/TR/wai-aria-practices-1.1/)\r\n\r\n## Localization\r\n\r\n- [ ] Changes include a UI text update in the Retail React App (which requires translation)\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "What does \"default\" mean in this context? \ud83e\udd14  we might want to be a bit more specific and call it  likestorefrontPreviewSecurityHeaders(prob also a bad name) ?",
                                                        "author": {
                                                            "login": "kevinxh"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385337953",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "3582944",
                                                            "authoredDate": "2023-11-07T17:20:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The behavior of enabling default headers seems more natural to me if it\u2019s a configuration value\u2026\nconst options = {\n   ...,\n   enableDefaultSecurityHeaders: true\n}",
                                                        "author": {
                                                            "login": "kevinxh"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385342068",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "3582944",
                                                            "authoredDate": "2023-11-07T17:20:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "DISMISSED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "By \"default\" I just mean \"mandatory for PWA Kit to work\". So it's not just Storefront Preview, even though that was the motivation for the change. And they're not strictly required if a project is using pwa-kit-runtime for something other than the retail react app.\nNaming things is hard. \ud83e\udd14",
                                                        "author": {
                                                            "login": "wjhsf"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385345124",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "3582944",
                                                            "authoredDate": "2023-11-07T17:20:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "If I'm a developer, I would want to know the benefit of opting in defaultSecurityHeaders\nThe answer is: you can't use storefront preview on runtime admin... <- this might not be clear to end users.",
                                                        "author": {
                                                            "login": "kevinxh"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385345685",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "3582944",
                                                            "authoredDate": "2023-11-07T17:20:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "wait... i think i might have misunderstanding...\nif it is \"mandatory for PWA Kit to work\", why do we make it an opt-in?",
                                                        "author": {
                                                            "login": "kevinxh"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385348178",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "3582944",
                                                            "authoredDate": "2023-11-07T17:20:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Because some users don't want to have any CSP header, and @johnboxall said we should make it opt-in, rather than opt-out.",
                                                        "author": {
                                                            "login": "wjhsf"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385369299",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "3582944",
                                                            "authoredDate": "2023-11-07T17:20:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@wjhsf would you consider putting this code in packages/pwa-kit-runtime/src/utils? We could always re-export from this file to maintain the interface you describe in the changelog.",
                                                        "author": {
                                                            "login": "johnboxall"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385374284",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bd427ee",
                                                            "authoredDate": "2023-11-07T18:07:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This comment describes part of what this function does:\n\nIt is an express.js middleware that sets default security headers including CSP + HSTS for PWA Kit sites.\nIt patches res.setHeader to include defaults normally required for PWA Kit operation.",
                                                        "author": {
                                                            "login": "johnboxall"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385383375",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bd427ee",
                                                            "authoredDate": "2023-11-07T18:07:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We do have an existing place where we apply patches:\n\n  \n    \n      pwa-kit/packages/pwa-kit-runtime/src/ssr/server/build-remote-server.js\n    \n    \n        Lines 1134 to 1193\n      in\n      a726c49\n    \n  \n  \n    \n\n        \n          \n           const applyPatches = once((options) => { \n        \n\n        \n          \n               // If we're running remotely, we also override the send() \n        \n\n        \n          \n               // method for ExpressJS's Response class (which is actually \n        \n\n        \n          \n               // a function). See responseSend for details. \n        \n\n        \n          \n               if (isRemote()) { \n        \n\n        \n          \n                   // http.ServerResponse.prototype \n        \n\n        \n          \n                   const expressResponse = express.response \n        \n\n        \n          \n                   expressResponse.send = responseSend(expressResponse.send) \n        \n\n        \n          \n               } \n        \n\n        \n          \n            \n        \n\n        \n          \n               // Patch the http.request/get and https.request/get \n        \n\n        \n          \n               // functions to allow us to intercept them (since \n        \n\n        \n          \n               // there are multiple ways to make requests in Node). \n        \n\n        \n          \n               http.request = outgoingRequestHook(http.request, options) \n        \n\n        \n          \n               http.get = outgoingRequestHook(http.get, options) \n        \n\n        \n          \n               https.request = outgoingRequestHook(https.request, options) \n        \n\n        \n          \n               https.get = outgoingRequestHook(https.get, options) \n        \n\n        \n          \n            \n        \n\n        \n          \n               // Patch the ExpressJS Response class's redirect function to suppress \n        \n\n        \n          \n               // the creation of a body (DESKTOP-485). Including the body may \n        \n\n        \n          \n               // trigger a parsing error in aws-serverless-express. \n        \n\n        \n          \n               express.response.redirect = function (status, url) { \n        \n\n        \n          \n                   let workingStatus = status \n        \n\n        \n          \n                   let workingUrl = url \n        \n\n        \n          \n            \n        \n\n        \n          \n                   if (typeof status === 'string') { \n        \n\n        \n          \n                       workingUrl = status \n        \n\n        \n          \n                       workingStatus = 302 \n        \n\n        \n          \n                   } \n        \n\n        \n          \n            \n        \n\n        \n          \n                   // Duplicate behaviour in node_modules/express/lib/response.js \n        \n\n        \n          \n                   const address = this.location(workingUrl).get('Location') \n        \n\n        \n          \n            \n        \n\n        \n          \n                   // Send a minimal response with just a status and location \n        \n\n        \n          \n                   this.status(workingStatus).location(address).end() \n        \n\n        \n          \n               } \n        \n\n        \n          \n            \n        \n\n        \n          \n               // Patch the whatwg-encoding decode function so that it will accept plain \n        \n\n        \n          \n               // JS strings and return them as-is. \n        \n\n        \n          \n               // eslint-disable-next-line @typescript-eslint/no-var-requires \n        \n\n        \n          \n               const whatWGEncoding = require('whatwg-encoding') \n        \n\n        \n          \n               const originalDecode = whatWGEncoding.decode \n        \n\n        \n          \n               whatWGEncoding.decode = (buffer, fallbackEncodingName) => { \n        \n\n        \n          \n                   /* istanbul ignore else */ \n        \n\n        \n          \n                   if (typeof buffer === 'string') { \n        \n\n        \n          \n                       return buffer \n        \n\n        \n          \n                   } \n        \n\n        \n          \n                   /* istanbul ignore next */ \n        \n\n        \n          \n                   return originalDecode(buffer, fallbackEncodingName) \n        \n\n        \n          \n               } \n        \n\n        \n          \n            \n        \n\n        \n          \n               // The 'http-proxy-middleware' module pollutes global by adding a lodash \n        \n\n        \n          \n               // reference to it as '_' (this global reference is not used). We kill \n        \n\n        \n          \n               // that reference here because otherwise it can hold on to references \n        \n\n        \n          \n               // to other objects. \n        \n\n        \n          \n               /* istanbul ignore next */ \n        \n\n        \n          \n               if (global._) { \n        \n\n        \n          \n                   delete global._ \n        \n\n        \n          \n               } \n        \n\n        \n          \n           }) \n        \n    \n  \n\n\nI don't have a strong opinion about whether this patch should also be applied there.",
                                                        "author": {
                                                            "login": "johnboxall"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385385186",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bd427ee",
                                                            "authoredDate": "2023-11-07T18:07:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "On naming: https://chat.openai.com/share/d5a18a26-08b3-47ea-a1ac-952dee512285\nI don't have strong feelings, but the name should communicate that a) it is a express.js middleware [can also be implied from import] b) it sets security related headers required for using the PWA Kit\nYes, folks should be allowed to opt into these headers \u2013\u00a0LWR sites as an example don't want the PWA Kit CSP.\nAlso, some customers struggle to create a CSP. They're hard. Sometimes letting them go is the only way they can truly be free.",
                                                        "author": {
                                                            "login": "johnboxall"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385392365",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "3582944",
                                                            "authoredDate": "2023-11-07T17:20:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            const {handler} = runtime.createHandler(options, (app) => {\n          \n          \n            \n            const runtime = getRuntime()\n          \n          \n            \n            const {handler} = runtime.createHandler(options, (app) => {",
                                                        "author": {
                                                            "login": "vmarta"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385458789",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bd427ee",
                                                            "authoredDate": "2023-11-07T18:07:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "My vote is on adding 'pwakit' to the name, like defaultPwaKitSecurityHeaders, so that it's more distinguishable. Because helmet also has a similar concept of defaults (see useDefaults on line 43).",
                                                        "author": {
                                                            "login": "vmarta"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385522075",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "3582944",
                                                            "authoredDate": "2023-11-07T17:20:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "+1 agree defaultPwaKitSecurityHeaders is preferable",
                                                        "author": {
                                                            "login": "bfeister"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385557142",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "3582944",
                                                            "authoredDate": "2023-11-07T17:20:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "I think @johnboxall's point about extending the existing patch and then the PWA Kit namespacing of the mixin variable need some resolution before we merge this",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Seems like it would be a bit awkward to apply the patch there, as that's always run, and this middleware is conditional.",
                                                        "author": {
                                                            "login": "wjhsf"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385579331",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bd427ee",
                                                            "authoredDate": "2023-11-07T18:07:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "That's fair",
                                                        "author": {
                                                            "login": "bfeister"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385580046",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bd427ee",
                                                            "authoredDate": "2023-11-07T18:07:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This is just an example snippet; not intended to be fully working code.",
                                                        "author": {
                                                            "login": "wjhsf"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385581546",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bd427ee",
                                                            "authoredDate": "2023-11-07T18:07:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I believe this comment you've removed it earlier. Let's delete it.",
                                                        "author": {
                                                            "login": "vmarta"
                                                        },
                                                        "url": "https://github.com/SalesforceCommerceCloud/pwa-kit/pull/1528#discussion_r1385664793",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f045e2b",
                                                            "authoredDate": "2023-11-07T22:20:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 604,
                        "title": "`Provider.checkToken` will no longer treat empty `refreshToken` strings as invalid tokens and fixed use of `__proto__` as `identityId` in `IdentitiesManager`",
                        "repository": {
                            "nameWithOwner": "MatrixAI/Polykey",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-10-25T00:54:56Z",
                        "mergedAt": "2023-10-26T01:11:50Z",
                        "url": "https://github.com/MatrixAI/Polykey/pull/604",
                        "state": "MERGED",
                        "author": {
                            "login": "amydevs"
                        },
                        "editor": {
                            "login": "amydevs"
                        },
                        "body": "### Description\r\n\r\n\r\n#### Provider\r\n\r\nThe `handleClaimIdentity` test in `tests/identities/IdentitiesManager.test.ts` was failing on `handleClaimIdentity`. This was because it was treating refreshTokens of empty strings as invalid tokens. This is no longer the case.\r\n\r\n\r\n```\r\nFAIL  tests/identities/IdentitiesManager.test.ts\r\n  IdentitiesManager\r\n    \u2713 IdentitiesManager readiness (85 ms)\r\n    \u2713 get, set and unset tokens (with seed=-201149676) (395 ms)\r\n    \u2713 start and stop preserves state (with seed=-201149676) (234 ms)\r\n    \u2713 fresh start deletes all state (with seed=-201149676) (255 ms)\r\n    \u2713 register and unregister providers (39 ms)\r\n    \u2713 using TestProvider (with seed=-201149676) (1553 ms)\r\n    \u2715 handleClaimIdentity (with seed=1486144507) (939 ms)\r\n\r\n  \u25cf IdentitiesManager \u203a handleClaimIdentity (with seed=1486144507)\r\n\r\n    Property failed after 1 tests\r\n    { seed: 1486144507, path: \"0:0:0:0:0:0:0:0:0:0:0:0:0:3:0:1:1:0:3:0:0:0:1:1:0:1:3:2:0:1\", endOnFailure: true }\r\n    Counterexample: [\"\",{\"accessToken\":\"          \",\"refreshToken\":\"\",\"accessTokenExpiresIn\":1698190047,\"refreshTokenExpiresIn\":0}]\r\n    Shrunk 29 time(s)\r\n    Got ErrorProviderUnimplemented:\r\n\r\n      64 |\r\n      65 |   public async refreshToken(): Promise<ProviderToken> {\r\n    > 66 |     throw new identitiesErrors.ErrorProviderUnimplemented();\r\n         |           ^\r\n      67 |   }\r\n      68 |\r\n      69 |   public async getAuthIdentityIds(): Promise<Array<IdentityId>> {\r\n\r\n      at TestProvider.refreshToken (tests/identities/TestProvider.ts:66:11)\r\n      at TestProvider.refreshToken [as checkToken] (src/identities/Provider.ts:85:25)\r\n      at TestProvider.checkToken [as publishClaim] (tests/identities/TestProvider.ts:152:16)\r\n      at src/identities/IdentitiesManager.ts:272:39\r\n      at constructor_.addClaim (src/sigchain/Sigchain.ts:449:20)\r\n      at withF (node_modules/@matrixai/resources/src/utils.ts:24:12)\r\n      at constructor_.handleClaimIdentity (src/identities/IdentitiesManager.ts:261:5)\r\n      at numRuns (tests/identities/IdentitiesManager.test.ts:361:7)\r\n      at AsyncProperty.run (node_modules/fast-check/lib/check/property/AsyncProperty.generic.js:49:28)\r\n      Hint: Enable verbose mode in order to have the list of all failing values encountered during the run\r\n      at buildError (node_modules/fast-check/lib/check/runner/utils/RunDetailsFormatter.js:131:15)\r\n      at asyncThrowIfFailed (node_modules/fast-check/lib/check/runner/utils/RunDetailsFormatter.js:148:11)\r\n\r\nTest Suites: 1 failed, 1 total\r\nTests:       1 failed, 6 passed, 7 total\r\nSnapshots:   0 total\r\nTime:        4.02 s\r\nRan all test suites matching /.\\/tests\\/identities\\/IdentitiesManager.test.ts/i.\r\nGLOBAL TEARDOWN\r\nDestroying Global Data Dir: /tmp/polykey-test-global-weOx7R\r\n```\r\n\r\nIt is also defined now that any expiry values in AccessToken set to 0, now have their related tokens treated as never-expiring. This was already the case before this PR, but inline comments have been added to document this.\r\n\r\n```ts\r\npublic async checkToken(\r\n    providerToken: ProviderToken,\r\n    identityId?: IdentityId,\r\n  ): Promise<ProviderToken> {\r\n    const now = Math.floor(Date.now() / 1000);\r\n    // this will mean that accessTokenExpiresIn = 0 will be false\r\n    if (\r\n      providerToken.accessTokenExpiresIn &&\r\n      providerToken.accessTokenExpiresIn >= now\r\n    ) {\r\n      if (providerToken.refreshToken == null) {\r\n        throw new identitiesErrors.ErrorProviderUnauthenticated(\r\n          'Access token expired',\r\n        );\r\n      }\r\n      // this will mean that refreshTokenExpiresIn = 0 does not throw\r\n      if (\r\n        providerToken.refreshTokenExpiresIn &&\r\n        providerToken.refreshTokenExpiresIn >= now\r\n      ) {\r\n        throw new identitiesErrors.ErrorProviderUnauthenticated(\r\n          'Refresh token expired',\r\n        );\r\n      }\r\n      return await this.refreshToken(providerToken, identityId);\r\n    }\r\n    return providerToken;\r\n  }\r\n```\r\n\r\n#### Prototype Pollution\r\n\r\nDuring testing, I noticed two other tests in `IdentitiesManager.test.ts` failing. This was because of fastcheck sometimes generating a string value of `__proto__` for the `identityId`. The `identityId` is used as the key for the object that comes out of RocksDB, there is a problem with prototype pollution. This is not only a security issue, but also that `JSON.stringify` does not serialize the `__proto__` property of an object, so certain the provider keys for that identity will never work. This PR uses `Object.defineProperty`to correctly set the `__proto__` property on the `providerTokens` object.\r\n\r\n### Issues Related\r\n* https://github.com/MatrixAI/Polykey-CLI/issues/40#issuecomment-1778016364\r\n* Fixes #608 \r\n\r\n### Tasks\r\n<!-- \r\n  List all tasks to be done by this PR.\r\n  If a task is no longer required, add a strikethrough (including the checkbox):\r\n  - ~~[ ] 3. ...~~ - being completed in #...\r\n-->\r\n- [x] 1. Fix conditional check of valid `refreshToken`\r\n- [x] 2. Inline documentation\r\n- [x] 3. Define implementation for `TestProvider.refreshToken`\r\n- [x] 4. Add errors to throw when prototype pollution of `identityId` is attempted\r\n\r\n### Final checklist\r\n<!-- Please check what applies. Note that these are not hard requirements but merely serve as information for reviewers. -->\r\n\r\n* [x] Domain specific tests\r\n* [x] Full tests\r\n* [x] Updated inline-comment documentation\r\n* [x] Lint fixed\r\n* [x] Squash and rebased\r\n* [x] Sanity check the final build\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Typo here.",
                                                        "author": {
                                                            "login": "CMCDragonkai"
                                                        },
                                                        "url": "https://github.com/MatrixAI/Polykey/pull/604#discussion_r1371985623",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d3ecf58",
                                                            "authoredDate": "2023-10-25T10:33:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Prefer IdentityIdInvalid. Usually describing word at the end.",
                                                        "author": {
                                                            "login": "CMCDragonkai"
                                                        },
                                                        "url": "https://github.com/MatrixAI/Polykey/pull/604#discussion_r1371986654",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d3ecf58",
                                                            "authoredDate": "2023-10-25T10:33:23Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "So, this __proto__ thing is special to JSON.stringify? Are there other keys that are special too? Seems very strange.",
                                                        "author": {
                                                            "login": "CMCDragonkai"
                                                        },
                                                        "url": "https://github.com/MatrixAI/Polykey/pull/604#discussion_r1371988116",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d3ecf58",
                                                            "authoredDate": "2023-10-25T10:33:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "i think stuff like __defineSetter__ and __defineGetter__ should be the same. However, Object.defineProperty should solve all that",
                                                        "author": {
                                                            "login": "amydevs"
                                                        },
                                                        "url": "https://github.com/MatrixAI/Polykey/pull/604#discussion_r1372448529",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d3ecf58",
                                                            "authoredDate": "2023-10-25T10:33:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "removed in favor of using Object.defineProperty",
                                                        "author": {
                                                            "login": "amydevs"
                                                        },
                                                        "url": "https://github.com/MatrixAI/Polykey/pull/604#discussion_r1372448655",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d3ecf58",
                                                            "authoredDate": "2023-10-25T10:33:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "fixed",
                                                        "author": {
                                                            "login": "amydevs"
                                                        },
                                                        "url": "https://github.com/MatrixAI/Polykey/pull/604#discussion_r1372449347",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d3ecf58",
                                                            "authoredDate": "2023-10-25T10:33:23Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 279,
                        "title": "Llama 2 On-Prem Inference Using vLLM and TGI",
                        "repository": {
                            "nameWithOwner": "facebookresearch/llama-recipes",
                            "primaryLanguage": {
                                "name": "Jupyter Notebook"
                            }
                        },
                        "createdAt": "2023-11-01T00:41:16Z",
                        "mergedAt": "2023-11-06T22:14:13Z",
                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279",
                        "state": "MERGED",
                        "author": {
                            "login": "jeffxtang"
                        },
                        "editor": null,
                        "body": "# What does this PR do?\r\n\r\nThis tutorial shows how to use Llama 2 with vLLM and Hugging Face TGI and how to use LangChain to talk to vLLM and TGI hosted Llama 2 on prem.\r\n\r\n<!--\r\nCongratulations! You've made it this far! You're not quite done yet though.\r\n\r\nPlease include a good title that fully reflects the extent of your awesome contribution.\r\n\r\nThen, please replace this with a description of the change and which issue is fixed (if applicable). Please also include relevant motivation and context. List any dependencies (if any) that are required for this change.\r\n\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n\r\n## Feature/Issue validation/testing\r\n\r\nPlease describe the tests that you ran to verify your changes and relevant result summary. Provide instructions so it can be reproduced.\r\nPlease also list any relevant details for your test configuration.\r\n\r\n- [ ] Test A\r\nLogs for Test A\r\n\r\n- [ ] Test B\r\nLogs for Test B\r\n\r\n\r\n## Before submitting\r\n- [ ] This PR fixes a typo or improves the docs (you can dismiss the other checks if that's the case).\r\n- [X ] Did you read the [contributor guideline](https://github.com/facebookresearch/llama-recipes/blob/main/CONTRIBUTING.md#pull-requests),\r\n      Pull Request section?\r\n- [ ] Was this discussed/approved via a Github issue? Please add a link\r\n      to it if that's the case.\r\n- [X ] Did you make sure to update the documentation with your changes?  \r\n- [ ] Did you write any new necessary tests?\r\n\r\nThanks for contributing \ud83c\udf89!\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "If we already pip install the vllm package, do we still need to clone the source repo for building locally? Maybe we can add some context here stating there are two ways to install vllm.",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379374646",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Just a quick note that Azure API hosting schema will also be using the one similar to OpenAI. Might be helpful to link documentation page here - https://platform.openai.com/docs/api-reference/chat/object",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379375755",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Have we ever consider using 2xA10G GPU here? In that case, we can also provide more advanced tutorial on model sharding or running two models on one instance by utilizing specific CUDA cores etc.",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379379631",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Besides the CLI, should we provide a python example snippet as well?",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379382266",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "actually clone the vllm repo is not for building locally, but for using its scripts like api_server.py\nand clone without \"pip install vllm\" won't work either, because dependency packages such as fastapi need to be installed to run the script.\nbut yes, i'll add a note to avoid the possible misunderstanding.",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379407600",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ok i added a note, but with the OpenAI API authentication link - the link above is not related to how the OpenAI compatible LLM instance is created.",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379415288",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I showed a command later to run vLLM on 4 GPUs with a new argument. This tutorial is still one of the quick start guides. I don't know how much time I'll need to add the sharding etc content. If you or @HamidShojanazeri has already done something like this, please add to the PR or maybe in a new PR.",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379417363",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The Google Colab shows complete Python code to talk to the servers. The curl commands are just for quick verification.",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379417739",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Can you double check to see if we really need the vllm repo here? I do see the way you launch api server a bit different from mine. Here is how I did it: python -m vllm.entrypoints.openai.api_server  --model meta-llama/Llama-2-70b-chat-hf --tensor-parallel-size 8 --disable-log-requests --port  8000",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379499707",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "OK, I did see in the colab we inferenced the API server via Langchain. I wonder if we want to add some example using POST in python, which is more raw. I have some example, let me link it later.",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379502486",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The reason is that vllm documentation is not so clear about this part. If we can add some examples here, I think it would helpful",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379502909",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Here is an example how I used the urlib to post requests to the api server.",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379507410",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes I tested in a new conda env without \"pip install vllm\" and then running \"python api_server.py...\" caused the error of unable to find fastapi. Your way works because you don't cd to vllm/entrypoints/openai. My way works because I cd to vllm/vllm/entrypoints first. All imports of vllm's source don't require \"pip install vllm\" but other packages required by vllm need to be installed first.\nYou have to use one of the two ways to install first before running the api_server.py: https://vllm.readthedocs.io/en/latest/getting_started/installation.html",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379522639",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Thanks but your examples seems to be in your private repo so I can't open it.\nConverting the curl command to a Python script is really straightforward, that's why I had the content \"Now in your Llama client app, you can make an HTTP request as the curl command above to send a query to Llama and parse the response.\" I assume if one needs that script, he/she can simply ask ChatGPT like this :)\nhttps://chat.openai.com/c/013cc516-71db-4ee7-b8e6-3ec946734cfe",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379528236",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Correct, I think that is what I mean here. You either run pip install vllm and install all dependencies as part of pip packages or install from source then run pip install requirements.txt or pip install -e . in the repo to install dependencies. That would avoid mis-match in the dependency package versions. There are chances where the dependencies versions in the main repo is different from pip packages.",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379529410",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sure, I can add a note in this PR for launching model replicas. Will add around your command which set TP for 4 GPUs",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379531095",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Also, I only showed the creation of the Llama instance \"llm\" in the Colab - but using LangChain or LlamaIndex will quickly be a lot more powerful and effective, when building Llama RAG apps, than using the raw post request which is mainly for quick API test.",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379531327",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Can't access your ChatGPT result :) it doesn't load for me. I have invited you to that repo, so you can take a look. Sure. I think it is a different use case, especially when you are running benchmarks and doesn't want to use any framework. Might not a good fit in this PR.",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379535190",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            With multiple GPUs, you can also run replica of models as long as your model size can fit into targeted GPU memory. For example, if you have two A10G with 24 GB memory, you can run two 7B Llama 2 models at the same time. This can be done by launching two api servers each targeting specific CUDA cores on different ports:\n          \n          \n            \n            `CUDA_VISIBLE_DEVICES=0 python api_server.py --host 0.0.0.0 --port 5000  --model meta-llama/Llama-2-7b-chat-hf --tensor-parallel-size 1 `\n          \n          \n            \n            and\n          \n          \n            \n            `CUDA_VISIBLE_DEVICES=1 python api_server.py --host 0.0.0.0 --port 5001  --model meta-llama/Llama-2-7b-chat-hf --tensor-parallel-size 1 `\n          \n          \n            \n            The benefit would be now you can balance incoming requests to both models, reaching higher batch size processing for a trade-off of generation latency.",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379540878",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c97d28c",
                                                            "authoredDate": "2023-11-01T23:14:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Added the suggestion below",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379541778",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "So back to your original question \"If we already pip install the vllm package, do we still need to clone the source repo for building locally?\" -  the answer is yes so the commands there are correct. I also added a note to clarify.",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379567763",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Can you access the link now? https://chat.openai.com/share/d289e3f8-9d84-4eea-b4d0-fafd752150c9 (I should've clicked the Share button first). If you still can't, you can just enter in ChatGPT this:\nwrite a python script that implements the curl command below:\ncurl http://localhost:5000/generate -d '{\n\"prompt\": \"Who wrote the book Innovators dilemma?\",\n\"max_tokens\": 300,\n\"temperature\": 0\n}'",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379569130",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Thanks for the note - how do the two commands differ from this single one?\npython api_server.py --host 0.0.0.0 --port 5000  --model meta-llama/Llama-2-7b-chat-hf --tensor-parallel-size 2\nand this one?\nCUDA_VISIBLE_DEVICES=0,1 python api_server.py --host 0.0.0.0 --port 5000  --model meta-llama/Llama-2-7b-chat-hf --tensor-parallel-size 2",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379570038",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c97d28c",
                                                            "authoredDate": "2023-11-01T23:14:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Both of your command is running tensor parallelsim. Basically sharding the compute into two GPUs and merge the results together. Whereas the command I shared were running one vllm replica in each GPU and in reality reaching higher throughput with \"data parallelsim\" serving. Such as some answer here",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1379580989",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c97d28c",
                                                            "authoredDate": "2023-11-01T23:14:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "So let me rephrase my original question, because it might caused some confusion here. The questions is: \"If we pip install the vllm packages already, can we launch vllm api servers?\". I think the answer is yes since I just tried on my VM. That said the alternative way is to clone the source repo, build from there (as well as install the dependencies), cd into the folder and run the scripts there. You shouldn't need to do both, especially we shouldn't rely on using package of dependencies installed from pip to build/run the source code because there could be a dependency mis-match.",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1380510897",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ah thanks for the clarification - yes indeed with pip install vllm, there's no need to clone the source to launch the api servers. I just pushed the simplified commands. Love the simplicity and thanks for pushing this! You should maybe also review the fine-tuning recipe here or create a PR when you have a chance to make the commands and steps there crystal clear and as simple as possible.",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1380646097",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "492350a",
                                                            "authoredDate": "2023-11-01T17:49:02Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Thanks Jeff, added few minor comment, overall I wonder if that make sense to add either vllm or tgi to one of your existing notebook to kind of showcase the e2e story?",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@jeffxtang It would be helpful if you add a comment why someone want to use open-ai interface, maybe if they want to serve their embedding model etc. and if thats the case maybe a relevant example could help.",
                                                        "author": {
                                                            "login": "HamidShojanazeri"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1382627728",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "@jeffxtang I am not sure if we need --tensor-parallel-size 1  here as thats the default.",
                                                        "author": {
                                                            "login": "HamidShojanazeri"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1382628895",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "It would be helpful to add that in case of serving multiple replica of the model using a serving solutions that has integrated vLLM into them make the load balancer available and add necessary metric and logs.",
                                                        "author": {
                                                            "login": "HamidShojanazeri"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1382629039",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@HamidShojanazeri the \"why\" was briefly started as \"to easily replace code using OpenAI API\" so people who are using  OpenAI (most of the LangChain and LlamaIndex examples and most blogs on building LLM apps use OpenAI) and considering switching to Llama2 can minimize their code change, hence called \"OpenAI-Compatible\".",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1382710602",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@HamidShojanazeri actually @WuhanMonkey Hector added this paragraph and looks like you're right - with CUDA_VISIBLE_DEVICES set to be a single value, --tensor-parallel-size shouldn't be needed. Hector can you please confirm?",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1382711302",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@WuhanMonkey Chester please comment/add?",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1382712152",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "And the example code is in the Colab linked in the PR.",
                                                        "author": {
                                                            "login": "jeffxtang"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1383771379",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "True. Let me change it",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1383803667",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            `CUDA_VISIBLE_DEVICES=0 python api_server.py --host 0.0.0.0 --port 5000  --model meta-llama/Llama-2-7b-chat-hf --tensor-parallel-size 1 `\n          \n          \n            \n            `CUDA_VISIBLE_DEVICES=0 python api_server.py --host 0.0.0.0 --port 5000  --model meta-llama/Llama-2-7b-chat-hf`",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1383805012",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            `CUDA_VISIBLE_DEVICES=1 python api_server.py --host 0.0.0.0 --port 5001  --model meta-llama/Llama-2-7b-chat-hf --tensor-parallel-size 1 `\n          \n          \n            \n            `CUDA_VISIBLE_DEVICES=1 python api_server.py --host 0.0.0.0 --port 5001  --model meta-llama/Llama-2-7b-chat-hf`",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1383805315",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@HamidShojanazeri For you suggestion, do you actually mean we should provide a serving solution as an example that integrated vLLM with load balancer? Or do you mean we should jus tell them to use a serving solution with load balancer and metrics/load?",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1383808834",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "well both, we have an example WIP on Torchserve for this, but overall pointing out help to draw a more clear picture. Most of serving solutions start to add VLLM like TGI itself.",
                                                        "author": {
                                                            "login": "HamidShojanazeri"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1383856022",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "OK, I do not have a solid example that built-in these serving solution already. I wrote the balancer with simple round-robin myself. My intention on this paragraph is to share that besides tensor parallelism, using model replicas could also improve serving performance. If a solid example is a required, maybe we can take the paragraph out for now. Really don't want to block on landing this PR.",
                                                        "author": {
                                                            "login": "WuhanMonkey"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1384023851",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "No, I didn't mean to have a solid example, I was just mentioning to add this text thats it, never mind though. Lets merrge it as it user would be able to infer I guess.",
                                                        "author": {
                                                            "login": "HamidShojanazeri"
                                                        },
                                                        "url": "https://github.com/facebookresearch/llama-recipes/pull/279#discussion_r1384089841",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0199c84",
                                                            "authoredDate": "2023-11-03T20:54:09Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 756,
                        "title": "Speech-To-Text and Text-To-Speech",
                        "repository": {
                            "nameWithOwner": "danny-avila/LibreChat",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-08-04T21:01:48Z",
                        "mergedAt": null,
                        "url": "https://github.com/danny-avila/LibreChat/pull/756",
                        "state": "CLOSED",
                        "author": {
                            "login": "bsu3338"
                        },
                        "editor": {
                            "login": "bsu3338"
                        },
                        "body": "This is a quick implementation of speech to text and text to speech for browsers with built-in support. It only works on Chrome based browsers and Safari for speech to text, but all browsers from what I can tell work with text to speech.\r\n\r\nShift-Alt-L  - Enable Listening\r\n\r\nBrowser list:\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API#browser_compatibility\r\n\r\n\r\nAfter digging into this, I would not mind adding both tts and stt with standard js without the react component. Just use https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n- [x] Documentation update  \r\n  \r\n\r\n## How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration:\r\n##\r\n\r\ngo to LibreChat with a supported browser.  If you see a mic next to the submit arrow then it should work.  Most notable exception is Firefox\r\n\r\n### **Test Configuration**:\r\n##\r\n\r\n\r\n## Checklist:\r\n\r\n- [x] My code follows the style guidelines of this project\r\n- [x] I have performed a self-review of my code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] Any dependent changes have been merged and published in downstream modules\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This component already has too much complexity I'm trying to refactor out. Use a react hook instead: https://chat.openai.com/share/112d8ec7-bb62-460b-adac-2a45fa60c712",
                                                        "author": {
                                                            "login": "danny-avila"
                                                        },
                                                        "url": "https://github.com/danny-avila/LibreChat/pull/756#discussion_r1285029357",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "74fa8d1",
                                                            "authoredDate": "2023-08-05T06:29:07Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "we can probably get rid of this and use the mic icon here https://lucide.dev/icons/mic\nand then make it red for recording",
                                                        "author": {
                                                            "login": "danny-avila"
                                                        },
                                                        "url": "https://github.com/danny-avila/LibreChat/pull/756#discussion_r1285029569",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "74fa8d1",
                                                            "authoredDate": "2023-08-05T06:29:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Looks much better!",
                                                        "author": {
                                                            "login": "bsu3338"
                                                        },
                                                        "url": "https://github.com/danny-avila/LibreChat/pull/756#discussion_r1285064181",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "74fa8d1",
                                                            "authoredDate": "2023-08-05T06:29:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I moved the speech recognition to another file.",
                                                        "author": {
                                                            "login": "bsu3338"
                                                        },
                                                        "url": "https://github.com/danny-avila/LibreChat/pull/756#discussion_r1285138145",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "74fa8d1",
                                                            "authoredDate": "2023-08-05T06:29:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "you should put the hooks in their respective directory for uniformity and organization, name them after the function 'use...'",
                                                        "author": {
                                                            "login": "danny-avila"
                                                        },
                                                        "url": "https://github.com/danny-avila/LibreChat/pull/756#discussion_r1294204373",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7e8bae2",
                                                            "authoredDate": "2023-08-11T12:15:32Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "same as above for project structure",
                                                        "author": {
                                                            "login": "danny-avila"
                                                        },
                                                        "url": "https://github.com/danny-avila/LibreChat/pull/756#discussion_r1294206744",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7e8bae2",
                                                            "authoredDate": "2023-08-11T12:15:32Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Probably nothing you changed, but need to add: I can click the microphone icon while it's listening and doing so will refresh the page",
                                                        "author": {
                                                            "login": "danny-avila"
                                                        },
                                                        "url": "https://github.com/danny-avila/LibreChat/pull/756#discussion_r1294224851",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7e8bae2",
                                                            "authoredDate": "2023-08-11T12:15:32Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjgw",
                "hasNextPage": true,
                "hasPreviousPage": true,
                "startCursor": "Y3Vyc29yOjcx"
            },
            "issueCount": 185
        }
    }
}