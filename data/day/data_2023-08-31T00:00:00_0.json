{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 493,
                        "title": "Empty string is a valid Base64 string",
                        "repository": {
                            "nameWithOwner": "asaskevich/govalidator",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-08-31T23:27:41Z",
                        "mergedAt": null,
                        "url": "https://github.com/asaskevich/govalidator/pull/493",
                        "state": "OPEN",
                        "author": {
                            "login": "apelisse"
                        },
                        "editor": null,
                        "body": "|    Q          |   A\r\n|-------------- | ------\r\n| Documentation | no\r\n| Bugfix         | yes\r\n| BC Break      | \ud83e\udd37 \r\n| New Feature   | no\r\n| RFC           | no\r\n| QA            | no\r\n\r\n### Description\r\n\r\nEmpty strings are valid base64 strings. If you base64 encode an empty string, you get an empty string.\r\nA few example:\r\n- https://stackoverflow.com/questions/15212127/is-an-empty-string-valid-base64-encoded-data-of-zero-bytes-length\r\n- Warning, the most authoritative of all, https://chat.openai.com/share/33c6f549-4e9f-489f-8ea7-aa38fc697c2b\r\n\r\nA python example: \r\n```python\r\n>>> import base64\r\n>>> base64.b64decode(\"\")\r\nb''\r\n```\r\n\r\nIf you don't want empty strings, you can change the minLength.\r\n",
                        "comments": {
                            "nodes": []
                        },
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 4,
                        "title": "Technobranch",
                        "repository": {
                            "nameWithOwner": "TechnoTOG/GetEntry",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-08-31T12:09:29Z",
                        "mergedAt": null,
                        "url": "https://github.com/TechnoTOG/GetEntry/pull/4",
                        "state": "CLOSED",
                        "author": {
                            "login": "TechnoTOG"
                        },
                        "editor": null,
                        "body": "Made few changes in the Auto_mailer requesting @Devaah07  to see to the changes also requiring @CHANDRANIBHA @devkiraa @niranjana-2004 @GowriParvathyy to see to the changes",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-09-09T09:07:31Z",
                                    "bodyText": "possible issue with calling flask app\n\nok noted\nplease refer the below link\nhttps://chat.openai.com/share/b7072bfa-f783-46cc-a157-63f2662341b8",
                                    "url": "https://github.com/TechnoTOG/GetEntry/pull/4#issuecomment-1712463286",
                                    "author": {
                                        "login": "TechnoTOG"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "possible issue with calling flask app",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 79,
                        "title": "typing - binlogstream.py",
                        "repository": {
                            "nameWithOwner": "python-mysql-replication-kr/python-mysql-replication",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-08-31T11:58:18Z",
                        "mergedAt": "2023-09-02T04:29:31Z",
                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79",
                        "state": "MERGED",
                        "author": {
                            "login": "starcat37"
                        },
                        "editor": {
                            "login": "starcat37"
                        },
                        "body": "TODO\r\n- [x] \ud14c\uc2a4\ud2b8: \uc815\uc0c1 \uc791\ub3d9 \ud655\uc778\r\n- [x] \ud638\ud658\uc131: pytest\r\n- [x] \ub204\ub77d\ub41c typing \ud655\uc778\r\n- [x] \uc798\ubabb\ub41c typing \ud655\uc778\r\n- [x] docstring \uc218\uc815",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-09-02T04:29:10Z",
                                    "bodyText": "\uc138 \ubd84 approve\ud574\uc8fc\uc154\uc11c \uba38\uc9c0\ud560\uac8c\uc694...!! \ub2e4\ub4e4 \uc815\ub9d0 \uac10\uc0ac\ud569\ub2c8\ub2e4\ud83e\udd70\ud83e\udd70",
                                    "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#issuecomment-1703686134",
                                    "author": {
                                        "login": "starcat37"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "typing \uaf3c\uaf3c\ud558\uac8c \uc815\ub9d0 \uc798 \uc801\uc6a9\ud574\uc8fc\uc168\uc2b5\ub2c8\ub2e4! \uace0\uc0dd \ub9ce\uc73c\uc168\uc2b5\ub2c8\ub2e4!! \ud83d\udc4d\ud83c\udffb\ud83d\udc4d\ud83c\udffb\ud83d\udc4d\ud83c\udffb",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Dict\uc77c \uacbd\uc6b0\ub3c4 \uace0\ub824\ud574\uc11c typing \ud574\uc8fc\uc168\uc73c\uba74 \ub354 \uc88b\uc558\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4!",
                                                        "author": {
                                                            "login": "dongwook-chan"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1312709850",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9bcf867",
                                                            "authoredDate": "2023-09-01T07:13:16Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "ByteString\uc774 bytes \ub610\ub294 bytearray\uc5d0 \uc0ac\uc6a9\ub418\ub294 \uac78\ub85c \uc54c\uace0 \uc788\ub294\ub370... \ub458 \uc911 \ud558\ub098\uc758 \ud0c0\uc785\ub9cc \uc62c \uc218 \uc788\ub294 \uacbd\uc6b0\ub77c\uba74 \ud558\ub098\ub9cc \uba85\uc2dc\ud574\uc11c \ucd5c\ub300\ud55c \ud0c0\uc774\ud2b8\ud558\uac8c typing\ud558\ub294\uac8c \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4. \uc774 \uacbd\uc6b0\uc5d0\ub294 bytes\ub9cc \uc62c \uc218 \uc788\ub294 \uac83\ucc98\ub7fc \ubcf4\uc774\ub124\uc694!",
                                                        "author": {
                                                            "login": "dongwook-chan"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1312722589",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9bcf867",
                                                            "authoredDate": "2023-09-01T07:13:16Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "__set_mariadb_settings()\uc5d0\uc11c \ubc18\ud658\uac12 \ud0c0\uc785\uc744 \uc9c0\uc815\ud574\uc8fc\uace0 \uc788\uc5b4\uc11c \ubcc4\ub3c4 type annotation\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4!",
                                                        "author": {
                                                            "login": "dongwook-chan"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1312724860",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9bcf867",
                                                            "authoredDate": "2023-09-01T07:13:16Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\uc774 \ubd80\ubd84\ub3c4 type\uc774 bytes\uc778 \uac83 \uac19\uc2b5\ub2c8\ub2e4!",
                                                        "author": {
                                                            "login": "dongwook-chan"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1312725244",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9bcf867",
                                                            "authoredDate": "2023-09-01T07:13:16Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\uc5ec\uae30\ub3c4 type\uc774 bytes\uc778 \uac83 \uac19\uc544\uc694!",
                                                        "author": {
                                                            "login": "dongwook-chan"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1312726524",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9bcf867",
                                                            "authoredDate": "2023-09-01T07:13:16Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "bytes!",
                                                        "author": {
                                                            "login": "dongwook-chan"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1312726689",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9bcf867",
                                                            "authoredDate": "2023-09-01T07:13:16Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\uc778\ucf54\ub529\ub418\ub2c8\uae4c ByteString\uc774 \uc81c\uc77c \uc801\ud569\ud558\ub2e4\uace0 \uc0dd\uac01\ud588\ub294\ub370 \uadf8\ub7ac\uc5c8\uad70\uc694...! \ub2e4\ub978 \ubd80\ubd84\ub3c4 \uc804\ubd80 \uc218\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4 \uac10\uc0ac\ud574\uc694!\u314e\u314e",
                                                        "author": {
                                                            "login": "starcat37"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1312766991",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9bcf867",
                                                            "authoredDate": "2023-09-01T07:13:16Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\ud5c9 \uadf8\ub807\ub124\uc694...! \uac10\uc0ac\ud569\ub2c8\ub2e4 \uc218\uc815\ud560\uac8c\uc694!",
                                                        "author": {
                                                            "login": "starcat37"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1312771597",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9bcf867",
                                                            "authoredDate": "2023-09-01T07:13:16Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "docstring\ub9cc \ubcf4\uace0 \ud588\ub2e4\uac00 \ubabb \ubcf4\uace0 \uc9c0\ub098\uccd0\ubc84\ub838\ub124\uc694...\u3160\u3160 docstring\uae4c\uc9c0 \ubc18\uc601\ud574\uc11c \uc218\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4! (7cc0e71)\n\ud639\uc2dc \ucd94\uac00\ub85c \ubc18\uc601\ud574\uc57c \ud558\ub294 \ubd80\ubd84\uc774 \uc788\uc73c\uba74 \uc54c\ub824\uc8fc\uc138\uc694...!",
                                                        "author": {
                                                            "login": "starcat37"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1312787228",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "9bcf867",
                                                            "authoredDate": "2023-09-01T07:13:16Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "import\ub41c typing \uc885\ub958\uac00 \ub9ce\uc740 \uac83\ubd80\ud130 \ub178\ub825\ud558\uc2e0 \ud754\uc801\uc774 \ub290\uaef4\uc9c0\ub124\uc694..!!\ud83e\udd7a\n\ub9e4\ubc88 \uaf3c\uaf3c\ud788 \uc791\uc5c5\ud558\uc2dc\ub294 \ubaa8\uc2b5 \ud1b5\ud574 \ub9ce\uc774 \ubc30\uc6b0\uace0 \uc788\uc2b5\ub2c8\ub2e4\u314e\u314e \uace0\uc0dd \ub9ce\uc73c\uc168\uc2b5\ub2c8\ub2e4!\ud83d\ude03",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\ud639\uc2dc \uc5ec\uae30 FrosenSet[str] \ub300\uc2e0 FrosenSet[event.BinLogEvent] \uc73c\ub85c\ub294 \uc548\ub418\ub294\uac78\uae4c\uc694..?!\n\uc81c\ucabd packet \uc791\uc5c5\ud558\ub2e4\uac00 \uacb9\uce58\ub294 \ubd80\ubd84\uc774 \uc788\uc5b4\uc11c \uc9c8\ubb38\ub4dc\ub9bd\ub2c8\ub2e4 \ud83d\udc40",
                                                        "author": {
                                                            "login": "heehehe"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1313720436",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f7f0ba5",
                                                            "authoredDate": "2023-09-01T09:21:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\uc791\uc5c5\ud560 \ub2f9\uc2dc\uc5d0\ub294 TableMapEvent, RotateEvent \ub4f1\uc758 \ubb38\uc790\uc5f4\uc744 \ubc1b\uc73c\ub2c8\uae4c str\uc73c\ub85c \uc791\uc131\ud588\uace0, \uc9c0\uae08 packet.py\uc640 \ub3d9\uc77c\ud558\uac8c event import\ud574\uc11c \uc791\uc131\ud574\ubcf4\ub2c8 \uc704 \uc0ac\uc9c4\uacfc \uac19\uc740 \uc5d0\ub7ec\uac00 \ub728\ub124\uc694...! \uc5ec\ub7ec event\uac00 \ub4e4\uc5b4\uac00\uc11c \uadf8\ub7f0 \uac74\uac00 \uc2f6\uc740\ub370 \uc6d0\uc778\uc740 \ud655\uc2e4\ud558\uc9c0\ub294 \uc54a\ub124\uc694\u3160\u3160 \uc774\ubca4\ud2b8 \ubaa9\ub85d\uc774\ub77c\ub294 \uc810\uc5d0\uc11c \ud76c\uc120\ub2d8\uc774 \ub9d0\uc500\ud574\uc8fc\uc2e0 typing\uc774 \ub354 \ub9de\uc744 \uac83 \uac19\uc740\ub370 \ud55c \ubc88 \uc774\uc720\ub97c \ucc3e\uc544\ubcfc\uac8c\uc694...!",
                                                        "author": {
                                                            "login": "starcat37"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1313825373",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f7f0ba5",
                                                            "authoredDate": "2023-09-01T09:21:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "https://chat.openai.com/share/8857034c-873f-477f-915a-1846683bcbae\nchatGPT\uc5d0\uac8c \uc9c8\ubb38\ud574\ubcf4\ub2c8 \uc774\ub807\uac8c \ub2f5\ubcc0\ud574\uc8fc\ub124\uc694...! \ud574\ub2f9 \ub2f5\ubcc0 \ubc18\uc601\ud574\uc11c\nfrom .event import (\n    BinLogEvent,\n    QueryEvent, RotateEvent, FormatDescriptionEvent,\n    XidEvent, GtidEvent, StopEvent, XAPrepareEvent,\n    BeginLoadQueryEvent, ExecuteLoadQueryEvent,\n    HeartbeatLogEvent, NotImplementedEvent, MariadbGtidEvent,\n    MariadbAnnotateRowsEvent, RandEvent, MariadbStartEncryptionEvent, RowsQueryLogEvent,\n    MariadbGtidListEvent, MariadbBinLogCheckPointEvent)\n    \n    # \uc911\ub7b5 \n    \n            self.__allowed_events_in_packet: FrozenSet[Type[BinLogEvent]] = frozenset(\n            [TableMapEvent, RotateEvent]).union(self.__allowed_events)\n\n\uc774\ub807\uac8c \uc218\uc815\ud558\ub2c8 \uc624\ub958\ub294 \uc0ac\ub77c\uc84c\uc2b5\ub2c8\ub2e4...! \uadf8\ub7f0\ub370 \uc774\ub7ec\uba74 \ud76c\uc120\ub2d8 packet.py\uc758 allowed_events (#73 (comment)) \ub3c4 \ubc14\ub00c\uc5b4\uc57c \ud560 \uac83 \uac19\uc740\ub370 \ud639\uc2dc \ud55c \ubc88 \ud655\uc778\ud574\uc8fc\uc2e4 \uc218 \uc788\uc744\uae4c\uc694?",
                                                        "author": {
                                                            "login": "starcat37"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1313831487",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f7f0ba5",
                                                            "authoredDate": "2023-09-01T09:21:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\uc544 typing\uc5d0\uc11c Type\uc774\ub77c\ub294 \uac83\ub3c4 \uc788\uad70\uc694!!\n\uac10\uc0ac\ud569\ub2c8\ub2e4 \uc81c\ucabd\uc5d0\uc11c\ub3c4 \uc218\uc815\ud574\ub458\uac8c\uc694 :D - daa12bd \uc5d0 \ubc18\uc601\ud574 \ub480\uc2b5\ub2c8\ub2e4!\n(\ucc3e\uc544\ubcf4\ub2c8 Type\uc744 \uc368\uc918\uc57c \ud074\ub798\uc2a4 \uc790\uccb4\ub97c \ub9d0\ud558\ub294\uac70\uace0,\nType \uc5c6\uc774 \uc785\ub825\ud574\uc8fc\uba74 \ud574\ub2f9 \ud074\ub798\uc2a4\uc758 \uc778\uc2a4\ud134\uc2a4\ub97c \ub9d0\ud558\ub294\uac70\uc600\uad70\uc694..!!)",
                                                        "author": {
                                                            "login": "heehehe"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1313868336",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f7f0ba5",
                                                            "authoredDate": "2023-09-01T09:21:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\ud655\uc778 \uac10\uc0ac\ud569\ub2c8\ub2e4:D \uadf8\ub7f0\ub370 feature/typing-binlogstream\ub294 \uc774\ubbf8 feature/typing-packet-gtid-binlogstream \ube0c\ub79c\uce58\uc5d0 merge\ub3fc\uc11c binlogstream.py\uc5d0\uc11c\uc758 \uc218\uc815 \uc0ac\ud56d\uc740 feature/typing-packet-gtid-binlogstream\uc5d0 \ubc14\ub85c push\ud574\ub3c4 \uad1c\ucc2e\uc744\uae4c\uc694...?!",
                                                        "author": {
                                                            "login": "starcat37"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1313873830",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f7f0ba5",
                                                            "authoredDate": "2023-09-01T09:21:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\ubc14\ub85c push\ud588\ub354\ub2c8... conflict\uac00 \ub0ac\ub124\uc694\u3160\u3160 (b9b241b) \uc8c4\uc1a1\ud569\ub2c8\ub2e4 \ubc14\ub85c \uace0\uce58\ub3c4\ub85d \ud560\uac8c\uc694...!",
                                                        "author": {
                                                            "login": "starcat37"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1313884717",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f7f0ba5",
                                                            "authoredDate": "2023-09-01T09:21:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "conflict\ub97c \uc218\uc815\ud558\ub2c8 \ubd80\ucc28\uc801\uc778 \ubb38\uc81c\uac00 \uc0dd\uaca8\uc11c \uc544\ub798 pr\uc758 comment\ub85c \ud604\uc7ac \uc0c1\ud669 \uc801\uc5b4\ub450\uc5c8\uc2b5\ub2c8\ub2e4...! \ud83d\ude22\n#81 (comment)",
                                                        "author": {
                                                            "login": "starcat37"
                                                        },
                                                        "url": "https://github.com/python-mysql-replication-kr/python-mysql-replication/pull/79#discussion_r1313893244",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f7f0ba5",
                                                            "authoredDate": "2023-09-01T09:21:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 6609,
                        "title": "updated imports",
                        "repository": {
                            "nameWithOwner": "monarch-initiative/mondo",
                            "primaryLanguage": {
                                "name": "Jupyter Notebook"
                            }
                        },
                        "createdAt": "2023-08-31T15:43:28Z",
                        "mergedAt": null,
                        "url": "https://github.com/monarch-initiative/mondo/pull/6609",
                        "state": "CLOSED",
                        "author": {
                            "login": "sabrinatoro"
                        },
                        "editor": {
                            "login": "sabrinatoro"
                        },
                        "body": "addresses #6609\r\n\r\n@matentzn please see that there are new files called `~ -roots`",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-08-31T16:09:52Z",
                                    "bodyText": "To debug this, you can run:\nsh run.sh make explain_unsat\n\nThis will give you this nice output. It tells you a bunch of things, like which ontologies are involved in the unsatisfiability. Lets start here before looking at individual explanations:\nHave all the ontologies listed in the end of this comment been updated?\nsynovial cell SubClassOf Nothing\n\nsynovial cell SubClassOf part of some synovial joint\n\nsynovial joint SubClassOf surrounded by some articular capsule\n\narticular capsule SubClassOf has part some layer of synovial tissue\n\nlayer of synovial tissue EquivalentTo serous membrane and (produces some synovial fluid)\n\nsynovial fluid EquivalentTo transudate and (produced by some synovial cell)\n\ntransudate EquivalentTo organism substance and (has quality some quality of a liquid) and (transformation of some blood plasma) and (filtered_through some capillary)\n\ntransformation of SubPropertyOf: develops from\n\ndevelops from SubPropertyOf: has developmental contribution from\n\nhas developmental contribution from Domain anatomical entity\n\nanatomical entity SubClassOf material entity\n\n\n\n\n\n\ncapillary SubClassOf connects some arteriole\n\narteriole SubClassOf connects some artery\n\nartery SubClassOf arterial blood vessel\n\narterial blood vessel EquivalentTo blood vessel and (part of some arterial system)\n\narterial system SubClassOf vascular system\n\nvascular system SubClassOf part of some cardiovascular system\n\ncardiovascular system SubClassOf has part some heart\n\nheart SubClassOf part of some heart plus pericardium\n\nheart plus pericardium SubClassOf thoracic cavity element\n\nthoracic cavity element EquivalentTo organ and (located in some thoracic cavity)\n\nthoracic cavity EquivalentTo anatomical space and (part of some coelemic cavity lumen) and (luminal space of some thoracic segment of trunk)\n\nluminal space of Domain immaterial entity\ncoelemic cavity lumen SubClassOf transformation of some future coelemic cavity lumen\ncoelemic cavity lumen SubClassOf luminal space of some coelom\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmaterial entity DisjointWith immaterial entity\n\nepithelial cell of lung SubClassOf Nothing\n\nepithelial cell of lung SubClassOf part of some lung\n\nlung SubClassOf thoracic cavity element\n\nthoracic cavity element SubClassOf located in some thoracic cavity\n\nthoracic cavity EquivalentTo anatomical space and (part of some coelemic cavity lumen) and (luminal space of some thoracic segment of trunk)\n\ncoelemic cavity lumen SubClassOf transformation of some future coelemic cavity lumen\n\ntransformation of SubPropertyOf: develops from\n\ndevelops from SubPropertyOf: has developmental contribution from\n\nhas developmental contribution from Domain anatomical entity\n\nanatomical entity SubClassOf material entity\n\n\n\n\n\n\n\n\nluminal space of Domain immaterial entity\ncoelemic cavity lumen SubClassOf luminal space of some coelom\n\n\n\n\n\n\n\n\nmaterial entity DisjointWith immaterial entity\n\nclub cell SubClassOf Nothing\n\nclub cell SubClassOf epithelial cell of tracheobronchial tree\n\nepithelial cell of tracheobronchial tree SubClassOf epithelial cell of lower respiratory tract\n\nepithelial cell of lower respiratory tract SubClassOf part of some lower respiratory tract\n\nlower respiratory tract SubClassOf has part some pair of lungs\n\npair of lungs SubClassOf located in some thoracic cavity\n\nthoracic cavity EquivalentTo anatomical space and (part of some coelemic cavity lumen) and (luminal space of some thoracic segment of trunk)\n\ncoelemic cavity lumen SubClassOf transformation of some future coelemic cavity lumen\n\ntransformation of SubPropertyOf: develops from\n\ndevelops from SubPropertyOf: has developmental contribution from\n\nhas developmental contribution from Domain anatomical entity\n\nanatomical entity SubClassOf material entity\n\n\n\n\n\n\n\n\nluminal space of Domain immaterial entity\ncoelemic cavity lumen SubClassOf luminal space of some coelom\n\n\n\n\n\n\n\n\n\n\n\n\nmaterial entity DisjointWith immaterial entity\n\nluteal cell SubClassOf Nothing\n\nluteal cell SubClassOf part of some corpus luteum\n\ncorpus luteum SubClassOf develops from some ovarian follicle\n\ndevelops from SubPropertyOf: has developmental contribution from\n\nhas developmental contribution from Domain anatomical entity\n\nanatomical entity SubClassOf material entity\n\n\n\n\novarian follicle SubClassOf develops from some ovary sex cord\n\novary sex cord SubClassOf develops from some primitive sex cord of indifferent gonad\n\nprimitive sex cord of indifferent gonad SubClassOf develops from some coelomic epithelium\n\ncoelomic epithelium SubClassOf located in some coelemic cavity lumen\n\ncoelemic cavity lumen SubClassOf transformation of some future coelemic cavity lumen\n\ntransformation of SubPropertyOf: develops from\n\n\ncoelemic cavity lumen SubClassOf luminal space of some coelom\n\nluminal space of Domain immaterial entity\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmaterial entity DisjointWith immaterial entity\n\nepithelial cell of pancreas SubClassOf Nothing\n\nepithelial cell of pancreas SubClassOf part of some pancreas\n\npancreas SubClassOf viscus\n\nviscus EquivalentTo organ and (located in some coelemic cavity lumen)\n\ncoelemic cavity lumen SubClassOf transformation of some future coelemic cavity lumen\n\ntransformation of SubPropertyOf: develops from\n\ndevelops from SubPropertyOf: has developmental contribution from\n\nhas developmental contribution from Domain anatomical entity\n\nanatomical entity SubClassOf material entity\n\n\n\n\n\n\n\n\ncoelemic cavity lumen SubClassOf luminal space of some coelom\n\nluminal space of Domain immaterial entity\n\n\n\n\n\n\n\n\nmaterial entity DisjointWith immaterial entity\n\ntype B pancreatic cell SubClassOf Nothing\n\ntype B pancreatic cell EquivalentTo enteroendocrine cell and (part of some islet of Langerhans) and (capable of some insulin secretion)\n\nislet of Langerhans SubClassOf contributes to morphology of some endocrine pancreas\n\nendocrine pancreas SubClassOf contributes to morphology of some pancreas\n\npancreas SubClassOf has developmental contribution from some ventral pancreatic bud\n\nhas developmental contribution from Domain anatomical entity\n\nanatomical entity SubClassOf material entity\n\n\nventral pancreatic bud SubClassOf develops from some hepatic diverticulum\n\nhepatic diverticulum SubClassOf part of some septum transversum\n\nseptum transversum SubClassOf located in some coelemic cavity lumen\n\ncoelemic cavity lumen SubClassOf transformation of some future coelemic cavity lumen\n\ntransformation of SubPropertyOf: develops from\n\n\ncoelemic cavity lumen SubClassOf luminal space of some coelom\n\nluminal space of Domain immaterial entity\n\n\n\n\n\n\ndevelops from SubPropertyOf: has developmental contribution from\n\n\n\n\n\n\n\n\n\n\nmaterial entity DisjointWith immaterial entity\n\npancreatic A cell SubClassOf Nothing\n\npancreatic A cell EquivalentTo type A enteroendocrine cell and (part of some pancreas)\n\npancreas SubClassOf viscus\n\nviscus EquivalentTo organ and (located in some coelemic cavity lumen)\n\ncoelemic cavity lumen SubClassOf transformation of some future coelemic cavity lumen\n\ntransformation of SubPropertyOf: develops from\n\ndevelops from SubPropertyOf: has developmental contribution from\n\nhas developmental contribution from Domain anatomical entity\n\nanatomical entity SubClassOf material entity\n\n\n\n\n\n\n\n\ncoelemic cavity lumen SubClassOf luminal space of some coelom\n\nluminal space of Domain immaterial entity\n\n\n\n\n\n\n\n\nmaterial entity DisjointWith immaterial entity\n\nhepatocyte SubClassOf Nothing\n\nhepatocyte SubClassOf part of some liver\n\nliver SubClassOf develops from some septum transversum\n\ndevelops from SubPropertyOf: has developmental contribution from\n\nhas developmental contribution from Domain anatomical entity\n\nanatomical entity SubClassOf material entity\n\n\n\n\nseptum transversum SubClassOf located in some coelemic cavity lumen\n\ncoelemic cavity lumen SubClassOf transformation of some future coelemic cavity lumen\n\ntransformation of SubPropertyOf: develops from\n\n\ncoelemic cavity lumen SubClassOf luminal space of some coelom\n\nluminal space of Domain immaterial entity\n\n\n\n\n\n\n\n\nmaterial entity DisjointWith immaterial entity\n\nblood vessel endothelial cell SubClassOf Nothing\n\nblood vessel endothelial cell SubClassOf part of some blood vessel endothelium\n\nblood vessel endothelium EquivalentTo endothelium and (part of some blood vessel)\n\nblood vessel SubClassOf channel_for some blood\n\nblood SubClassOf located in some vasculature\n\nvasculature SubClassOf part of some vascular system\n\nvascular system SubClassOf part of some cardiovascular system\n\ncardiovascular system SubClassOf has part some heart\n\nheart SubClassOf part of some heart plus pericardium\n\nheart plus pericardium SubClassOf thoracic cavity element\n\nthoracic cavity element EquivalentTo organ and (located in some thoracic cavity)\n\nthoracic cavity SubClassOf part of some coelemic cavity lumen\n\ncoelemic cavity lumen SubClassOf transformation of some future coelemic cavity lumen\n\ntransformation of SubPropertyOf: develops from\n\ndevelops from SubPropertyOf: has developmental contribution from\n\nhas developmental contribution from Domain anatomical entity\n\nanatomical entity SubClassOf material entity\n\n\n\n\n\n\n\n\ncoelemic cavity lumen SubClassOf luminal space of some coelom\n\nluminal space of Domain immaterial entity\n\n\n\n\n\n\n\n\n\n\nReflexive: has part\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimmaterial entity DisjointWith has part some material entity\n\npancreatic D cell SubClassOf Nothing\n\npancreatic D cell SubClassOf pancreatic endocrine cell\n\npancreatic endocrine cell EquivalentTo endocrine cell and (part of some pancreas)\n\npancreas SubClassOf viscus\n\nviscus EquivalentTo organ and (located in some coelemic cavity lumen)\n\ncoelemic cavity lumen SubClassOf transformation of some future coelemic cavity lumen\n\ntransformation of SubPropertyOf: develops from\n\ndevelops from SubPropertyOf: has developmental contribution from\n\nhas developmental contribution from Domain anatomical entity\n\nanatomical entity SubClassOf material entity\n\n\n\n\n\n\n\n\ncoelemic cavity lumen SubClassOf luminal space of some coelom\n\nluminal space of Domain immaterial entity\n\n\n\n\n\n\n\n\n\n\nmaterial entity DisjointWith immaterial entity\n\nAxiom Impact\nAxioms used 10 times\n\nanatomical entity SubClassOf material entity [foodon_import.owl]\ncoelemic cavity lumen SubClassOf transformation of some future coelemic cavity lumen [uberon_import.owl]\ncoelemic cavity lumen SubClassOf luminal space of some coelom [uberon_import.owl]\ndevelops from SubPropertyOf: has developmental contribution from [maxo_import.owl]\ntransformation of SubPropertyOf: develops from [ro_import.owl,envo_import.owl]\nhas developmental contribution from Domain anatomical entity [ecto_import.owl,envo_import.owl]\nluminal space of Domain immaterial entity [ro_import.owl]\n\nAxioms used 9 times\n\nmaterial entity DisjointWith immaterial entity [ro_import.owl,envo_import.owl]\n\nAxioms used 3 times\n\nviscus EquivalentTo organ and (located in some coelemic cavity lumen) [uberon_import.owl]\nthoracic cavity EquivalentTo anatomical space and (part of some coelemic cavity lumen) and (luminal space of some thoracic segment of trunk) [uberon_import.owl]\npancreas SubClassOf viscus [uberon_import.owl]\n\nAxioms used 2 times\n\nthoracic cavity element EquivalentTo organ and (located in some thoracic cavity) [uberon_import.owl]\nheart SubClassOf part of some heart plus pericardium [uberon_import.owl]\nseptum transversum SubClassOf located in some coelemic cavity lumen [uberon_import.owl]\ncardiovascular system SubClassOf has part some heart [uberon_import.owl]\nvascular system SubClassOf part of some cardiovascular system [uberon_import.owl]\nheart plus pericardium SubClassOf thoracic cavity element [uberon_import.owl]\n\nAxioms used 1 times\n\ntype B pancreatic cell EquivalentTo enteroendocrine cell and (part of some islet of Langerhans) and (capable of some insulin secretion) [cl_import.owl]\npancreatic A cell EquivalentTo type A enteroendocrine cell and (part of some pancreas) [cl_import.owl]\npancreatic endocrine cell EquivalentTo endocrine cell and (part of some pancreas) [cl_import.owl]\nsynovial fluid EquivalentTo transudate and (produced by some synovial cell) [uberon_import.owl]\narterial blood vessel EquivalentTo blood vessel and (part of some arterial system) [uberon_import.owl]\nblood vessel endothelium EquivalentTo endothelium and (part of some blood vessel) [uberon_import.owl]\nlayer of synovial tissue EquivalentTo serous membrane and (produces some synovial fluid) [uberon_import.owl]\ntransudate EquivalentTo organism substance and (has quality some quality of a liquid) and (transformation of some blood plasma) and (filtered_through some capillary) [uberon_import.owl]\nblood vessel endothelial cell SubClassOf part of some blood vessel endothelium [cl_import.owl]\nepithelial cell of lung SubClassOf part of some lung [cl_import.owl]\nepithelial cell of pancreas SubClassOf part of some pancreas [cl_import.owl]\nclub cell SubClassOf epithelial cell of tracheobronchial tree [cl_import.owl]\npancreatic D cell SubClassOf pancreatic endocrine cell [cl_import.owl]\nluteal cell SubClassOf part of some corpus luteum [cl_import.owl]\nhepatocyte SubClassOf part of some liver [cl_import.owl]\nsynovial cell SubClassOf part of some synovial joint [cl_import.owl]\nepithelial cell of tracheobronchial tree SubClassOf epithelial cell of lower respiratory tract [cl_import.owl]\nepithelial cell of lower respiratory tract SubClassOf part of some lower respiratory tract [cl_import.owl]\nislet of Langerhans SubClassOf contributes to morphology of some endocrine pancreas [uberon_import.owl]\nendocrine pancreas SubClassOf contributes to morphology of some pancreas [uberon_import.owl]\npair of lungs SubClassOf located in some thoracic cavity [uberon_import.owl]\nblood SubClassOf located in some vasculature [uberon_import.owl]\npancreas SubClassOf has developmental contribution from some ventral pancreatic bud [uberon_import.owl]\novarian follicle SubClassOf develops from some ovary sex cord [uberon_import.owl]\narticular capsule SubClassOf has part some layer of synovial tissue [uberon_import.owl]\nlower respiratory tract SubClassOf has part some pair of lungs [uberon_import.owl]\nartery SubClassOf arterial blood vessel [uberon_import.owl]\narteriole SubClassOf connects some artery [uberon_import.owl]\nblood vessel SubClassOf channel_for some blood [uberon_import.owl]\ncapillary SubClassOf connects some arteriole [uberon_import.owl]\nlung SubClassOf thoracic cavity element [uberon_import.owl]\nvasculature SubClassOf part of some vascular system [uberon_import.owl]\nliver SubClassOf develops from some septum transversum [uberon_import.owl]\nsynovial joint SubClassOf surrounded by some articular capsule [uberon_import.owl]\nthoracic cavity SubClassOf part of some coelemic cavity lumen [uberon_import.owl]\ncorpus luteum SubClassOf develops from some ovarian follicle [uberon_import.owl]\nventral pancreatic bud SubClassOf develops from some hepatic diverticulum [uberon_import.owl]\narterial system SubClassOf vascular system [uberon_import.owl]\nthoracic cavity element SubClassOf located in some thoracic cavity [uberon_import.owl]\novary sex cord SubClassOf develops from some primitive sex cord of indifferent gonad [uberon_import.owl]\ncoelomic epithelium SubClassOf located in some coelemic cavity lumen [uberon_import.owl]\nhepatic diverticulum SubClassOf part of some septum transversum [uberon_import.owl]\nprimitive sex cord of indifferent gonad SubClassOf develops from some coelomic epithelium [uberon_import.owl]\nimmaterial entity DisjointWith has part some material entity [ro_import.owl,envo_import.owl]\nReflexive: has part [ecto_import.owl,foodon_import.owl]\n\nOntologies used:\n\nfoodon_import.owl (http://purl.obolibrary.org/obo/mondo/imports/foodon_import.owl)\necto_import.owl (http://purl.obolibrary.org/obo/mondo/imports/ecto_import.owl)\ncl_import.owl (http://purl.obolibrary.org/obo/mondo/imports/cl_import.owl)\nenvo_import.owl (http://purl.obolibrary.org/obo/mondo/imports/envo_import.owl)\nmaxo_import.owl (http://purl.obolibrary.org/obo/mondo/imports/maxo_import.owl)\nro_import.owl (http://purl.obolibrary.org/obo/mondo/imports/ro_import.owl)\nuberon_import.owl (http://purl.obolibrary.org/obo/mondo/imports/uberon_import.owl)",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1701329558",
                                    "author": {
                                        "login": "matentzn"
                                    }
                                },
                                {
                                    "createdAt": "2023-08-31T19:20:45Z",
                                    "bodyText": "@matentzn I have confirmed that the imports ran. Actually I re-ran the imports again, and got the same result.",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1701646595",
                                    "author": {
                                        "login": "sabrinatoro"
                                    }
                                },
                                {
                                    "createdAt": "2023-08-31T21:13:37Z",
                                    "bodyText": "Note you can use chatgpt to get a summary of these:\nhttps://chat.openai.com/share/a74c7acd-2bbe-4f24-8419-bfbfc232fd66\nIt appears that you've provided a set of axioms and relationships pertaining to biological entities, especially anatomical structures and cells. This looks like a part of an ontology, which is a formal way to describe types, properties, and interrelationships of entities in a specific domain\u2014in this case, likely biology or anatomy.\nHowever, there seems to be a recurring logical issue in your ontology, particularly related to the term \"coelemic cavity lumen\". You have \"coelemic cavity lumen\" as a subclass of \"luminal space of some coelom,\" and \"luminal space of\" is in the domain of \"immaterial entity.\" However, \"anatomical entity\" is a subclass of \"material entity,\" and \"material entity\" is disjoint with \"immaterial entity.\"\n//\nA search on the uberon tracker reveals:\nobophenotype/uberon#2495\nmostly likely is a stale uberon import",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1701793151",
                                    "author": {
                                        "login": "cmungall"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-01T02:26:04Z",
                                    "bodyText": "Not sure it\u2019s merely a stale Uberon import\u2026\nTwo axioms seem responsible for almost all the unsats:\n\nCARO:0000000 SubClassOf: BFO:0000040\n\nThis makes CARO\u2019s \u201canatomical entity\u201d a material entity. This comes from Foodon, and was done as part of a \u201cCOB compatibility\u201d commit shortly before their last release. This was removed in a later commit, but only after the release.\n\nLogical definition of ENVO\u2019s \u201cenvironment associated with an animal part or small animal\u201d (ENVO:01001055)\n\nENVO:01001055 EquivalentTo: (ENVO:01001110 and (RO:0002507 some NCBITaxon:33208)) or (UBERON:0001062 and (BFO:0000050 some NCBITaxon:33208))\n\nIf I understand correctly, the problem is that this axiom makes any anatomical entity (UBERON:0001062) that is part of some Metazoa (so, all of them?) equivalent to ENVO\u2019s \u201cenvironment associated with...\u201d, which is also classified elsewhere ultimately as a material entity \u2013 thereby causing a disjointness violation for all the anatomical entities that happen to be immaterial.\nThis seems to come from this ENVO commit in August 2022.",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1702024534",
                                    "author": {
                                        "login": "gouttegd"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-01T02:33:31Z",
                                    "bodyText": "The last four unsats are caused by the logical definition of MONDO:0015627:\nMONDO:0015627 EquivalentTo: MONDO:0016648 and (RO:0004021 some GO:0005594)\n\nbecause the RO:0004021 property (\u201cdisease has basis in disruption of\u201d) is incorrectly used: it is range-restricted to processes, so it cannot be used on a cellular component.",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1702029121",
                                    "author": {
                                        "login": "gouttegd"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-01T16:17:36Z",
                                    "bodyText": "Thank you @cmungall .\n@gouttegd, our deepest heartfelt thanks for your comments! We know that was a TON of work, and we appreciate you taking the time and making the effort. Thank you!!!",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1703000839",
                                    "author": {
                                        "login": "sabrinatoro"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-01T16:26:23Z",
                                    "bodyText": "Alright, I will give you @sabrinatoro now an impossible choice.\n\nThere are three wrong axioms in the imports (the ones @gouttegd points out, plus one more). Removing them fixes all the issues: 8fe1aa1. This is the worst of all possible ways to handle this issue. But it does at least fix the unsats.\nThe correct solution would be to migrate Mondo to base imports, which means migrating it to ODK first, which means we need 20 hours of a developer that is familiar with ODK -> which there isn't any right now. (the envo definition problem needs to be turned into an ENVO issue).\nThe last option is to not update imports until we hire someone who wants to learn ODK.\n\nI think we should go with the worst solution, but honestly, I am tired of making these decisions. You are the boss now!\n(The remaining QC errors on this PR you can fix them as usual).",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1703011174",
                                    "author": {
                                        "login": "matentzn"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-01T16:35:53Z",
                                    "bodyText": "Thank you!!!\n\nYou\u2019re welcome. :) Though to be honest I mostly did it because I was disappointed by ChatGPT\u2019s answer and wanted to prove that a human curator could do better. \ud83d\ude05\nFYI I\u2019ve opened a ticket on ENVO for the problem with the definition of ENVO:01001055, hopefully that\u2019s one terrible hotfix that may no longer be necessary by the time the imports are next refreshed.",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1703021949",
                                    "author": {
                                        "login": "gouttegd"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-01T16:45:19Z",
                                    "bodyText": "In addition to @gouttegd ENVO issue, I made the corresponding FOODON issue:\nFoodOntology/foodon#281\nAnd the MAXO issue will disappear by itself. Maybe the wrong solution is more justifiable since all problems are set to be fixed.",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1703032489",
                                    "author": {
                                        "login": "matentzn"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-01T16:53:12Z",
                                    "bodyText": "The FOODON issue is actually already fixed in their master branch (since this commit last month, as I mentioned), so all that is needed on that front is a new release.",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1703046312",
                                    "author": {
                                        "login": "gouttegd"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-01T17:03:44Z",
                                    "bodyText": "Thank you @gouttegd amended my comment there :)\n@sabrinatoro in this case, the hotfix becomes tolerable.",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1703069019",
                                    "author": {
                                        "login": "matentzn"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-01T22:34:54Z",
                                    "bodyText": "@matentzn @sabrinatoro - I agree that the hotfix seems more tolerable. Is the ODK work something I can be slotted for... assuming that's what we should eventually be moving to?",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1703393277",
                                    "author": {
                                        "login": "twhetzel"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-02T05:51:32Z",
                                    "bodyText": "I was hoping in the depth of my soul you would suggest that Trish - but it is quite the undertaking. For now we need all eyes on the mass obsoletion, and the branch review process.. but yes, if you are interested in that that would be fantastic, and maybe we can even make some small progress towards that end!",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1703719107",
                                    "author": {
                                        "login": "matentzn"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-12T11:13:57Z",
                                    "bodyText": "I have gone through the trouble to migrate Mondos import system to the latest ODK (ca. 5 hours work, not too bad), so this PR is now superfluous: #6639",
                                    "url": "https://github.com/monarch-initiative/mondo/pull/6609#issuecomment-1715526891",
                                    "author": {
                                        "login": "matentzn"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjQ=",
                "hasNextPage": false,
                "hasPreviousPage": false,
                "startCursor": "Y3Vyc29yOjE="
            },
            "issueCount": 4
        }
    }
}