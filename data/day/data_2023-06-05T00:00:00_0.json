{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 74,
                        "title": "[DRAFT] Make an interpreter for this abomination",
                        "repository": {
                            "nameWithOwner": "TodePond/DreamBerd",
                            "primaryLanguage": null
                        },
                        "createdAt": "2023-06-05T01:41:31Z",
                        "mergedAt": null,
                        "url": "https://github.com/TodePond/DreamBerd/pull/74",
                        "state": "OPEN",
                        "author": {
                            "login": "Bytestorm5"
                        },
                        "editor": {
                            "login": "Bytestorm5"
                        },
                        "body": "putting this here so there's a thread for it, it's not nearly done but if anyone wants to mess with it there's something\r\n\r\nthe current plan is to write the compiler in python and from there rewrite it in C or Rust, whichever is funnier at the moment\r\nor maybe I'll leave it as python that might be cursed enough, idk\r\n\r\nFor the time travel the way I'm thinking things should work is that execution follows a \"cursor\", regardless of what timeline that cursor is in. This allows for somewhat deterministic time travel which is pretty cool\r\n\r\nCool git stuff:\r\nResolves #14 ",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-06-05T01:45:31Z",
                                    "bodyText": "The idea with the whole Compinterpreter is to do things in the most convoluted way possible- I want to have it interpret some parts of the code and transpile other parts to another language (maybe multiple based on situation?). I'm kinda indecisive as to what language it should transpile to, I think Javascript is cursed enough to fit the bill but I'm not sure yet",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1575918624",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T06:09:09Z",
                                    "bodyText": "Best of luck to you! Please be careful out there",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1576103723",
                                    "author": {
                                        "login": "TodePond"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T06:24:57Z",
                                    "bodyText": "thanks, so far it hasn't been too crazy, though now that I'm getting to parsing it's gonna be interesting. Is it okay if I make a video on the whole process?\nI figure it'd be pretty funny and may have some value in showing how to make tokenizers/parsers/etc. I know you have your own channel so I wanna make sure I'm not encroaching on anything you might have in the works",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1576119662",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T07:46:13Z",
                                    "bodyText": "I'm curious to see how you're going to deal with that: AI",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1576249495",
                                    "author": {
                                        "login": "MaxenceDC"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T08:00:06Z",
                                    "bodyText": "@Bytestorm5 Of course! You should go for it, I'd love to see it :)",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1576279729",
                                    "author": {
                                        "login": "TodePond"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T15:49:33Z",
                                    "bodyText": "I'm glad my time travel implementation is actually going to (sorta) become real\n\nFor the time travel the way I'm thinking things should work is that execution follows a \"cursor\", regardless of what timeline that cursor is in. This allows for somewhat deterministic time travel which is pretty cool",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1577051844",
                                    "author": {
                                        "login": "labbo-lab"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T16:52:50Z",
                                    "bodyText": "Just had a horrible idea inspired by #76 - we store const const const variables in a cloud database, making DreamBerd the first Always-Online Singleplayer language",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1577142713",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T17:00:56Z",
                                    "bodyText": "we do a small quantity of trolling\nconst const const delete Date()!",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1577154625",
                                    "author": {
                                        "login": "labbo-lab"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T17:09:45Z",
                                    "bodyText": "\ud83d\udc80\nCome to think of it tho someone could probably turn that into an attack vector, maybe injecting code from the cloud into people's computer isn't a good idea lol",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1577168718",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T17:10:10Z",
                                    "bodyText": "const const const declarations should be reviewed by a team of mods (similarly to the AI feature) I think.",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1577169341",
                                    "author": {
                                        "login": "MaxenceDC"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T17:10:49Z",
                                    "bodyText": "Come to think of it tho someone could probably turn that into an attack vector, maybe injecting code from the cloud into people's computer isn't a good idea lol\n\nYes in all seriousness, I'd like to implement it in a sandbox'd web version. For a local version, people could connect to their own const const const stores.",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1577170275",
                                    "author": {
                                        "login": "TodePond"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T17:12:31Z",
                                    "bodyText": "Yeah moderation should work- maybe limit it to primitive types as well to prevent any chicanery in terms of infiltrating whatever platform is used to moderate them",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1577172584",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T19:49:42Z",
                                    "bodyText": "Alright so I did some thinking on what needs to happen at a high level because I've kinda hit the limit of \"don't think just code,\" so here's how I think things should work:\n(This is mostly here for myself bc things are easier for me when I write out my thoughts like this)\nFile comes in, gets split into however many files are actually in it. Each of those are processed completely independently.\nAfter Tokenizing, the task is to take DreamBerd and turn it into JSX. However JSX is unenlightened and allows for a lot of barbaric practices such as loops- so we have to first make sure the user's code is free of such barbarism with our own syntax check before JavaScript's. This should check things like mutating a const, referencing a variable after its life has ended (if its lifespan is deterministic), etc.\nCertain things like ==== can also be handled by the compiler to prevent JavaScript from being JavaScript.\nAfter the syntax is confirmed to be correct with no compilation errors, it is converted to JSX. However there are cases where DreamBerd runtime errors can occur. As such the logical solution is to have many hard-coded templates of error catchers that raise exceptions in case any such issues arise.\nSimilarly we need to inject some structs to every built file to correctly represent DB Strings, Ints, etc.",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1577379630",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T20:53:22Z",
                                    "bodyText": "Sounds good! Great job so far :D",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1577458703",
                                    "author": {
                                        "login": "TodePond"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T21:17:51Z",
                                    "bodyText": "https://stackoverflow.com/questions/1759987/listening-for-variable-changes-in-javascript\nhttps://lage.us/Javascript-Watch-Variables-for-Change.html\nSaving this here for later when figuring out the when control flow",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1577490638",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T03:29:47Z",
                                    "bodyText": "https://chat.openai.com/share/53a01ea6-d655-4b6a-918e-6e13c4e78769\nI have decided we are going to have localization for compiler errors, but only for the different dialects of english to achieve true i18n",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1577844245",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T11:25:13Z",
                                    "bodyText": "Hi, I was thinking about doing a similar thing.\nHave you already thought about a way to handle the past feature, var const(and similar) and this type of stuff?\nBecause in my opinion it would probably be possible to handle them using dictionaries in this way:\nconst var gets transpiled into a function that adds both the entry and the allowed modifications to the dictionary.\nWhen it gets updated (in the same way of the when instruction) there is a check against this dictionary to check if the operation is valid.\nWhile doing this it saves the old value too.\nIn the same way it would be possible to handle lifetimes too.\nIf you think this is a good idea I would love to implement it and help you in general with this project",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1578532962",
                                    "author": {
                                        "login": "Odinmylord"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T12:53:35Z",
                                    "bodyText": "Yeah I had a similar idea in mind- I don't think we're quite at the point of setting up JS since the parser still needs work, but I can add you to the repo so you can contribute.",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1578713412",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T14:58:14Z",
                                    "bodyText": "Do you have a specific version you're following or are you going to add features when they're released?",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1578927871",
                                    "author": {
                                        "login": "labbo-lab"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T15:20:12Z",
                                    "bodyText": "For now I'm adding features as they come, once the compiler fully encompasses one version of DreamBerd then we can set it up with proper versioning",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1578967860",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T17:02:44Z",
                                    "bodyText": "Ok so hear me out\nWhat if instead of having the parser build the js file, we instead have it only check the syntax, and if the syntax is correct it calls some other program entirely to actually convert it into javascript using regex",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1579141852",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T18:30:34Z",
                                    "bodyText": "What if instead of having the parser build the js file, we instead have it only check the syntax, and if the syntax is correct it calls some other program entirely to actually convert it into javascript using regex\n\nUpdate: This is so cursed I love it",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1579260635",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T20:33:48Z",
                                    "bodyText": "What if instead of having the parser build the js file, we instead have it only check the syntax, and if the syntax is correct it calls some other program entirely to actually convert it into javascript using regex\n\nUpdate: This is so cursed I love it \n\nlol I can't believe what I just read...",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1579408235",
                                    "author": {
                                        "login": "PThorpe92"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-07T10:25:42Z",
                                    "bodyText": "Hey @Odinmylord and/or @Bytestorm5 I really want to demo this at this week's Future of Coding meetup here in London. Either of you up for a video call/chat today? Would love to speak with you about this :)",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1580441927",
                                    "author": {
                                        "login": "TodePond"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-07T11:00:19Z",
                                    "bodyText": "Cool, I'll be free in the evening",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1580530631",
                                    "author": {
                                        "login": "Odinmylord"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-07T11:03:23Z",
                                    "bodyText": "Awesome, pop me a DM anywhere to arrange!\nDiscord: TodePond#9999\ntwitter: TodePond\nmastodon: TodePond@universeodon.com",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1580539203",
                                    "author": {
                                        "login": "TodePond"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-07T12:15:03Z",
                                    "bodyText": "@TodePond It would have to be rather late  today (my time) but I'm down, I'll send you a DM on Discord\nAny time tmrw / in the next week, just lmk and I should be able to make time",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1580687847",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-07T13:09:41Z",
                                    "bodyText": "Since I can't directly DM you on discord I sent you the friend request. I'm Odin#8743",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1580784057",
                                    "author": {
                                        "login": "Odinmylord"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-07T19:24:02Z",
                                    "bodyText": "@Bytestorm5 since we are both working on the project but we haven't discussed some details together yet it would be amazing if you could add me on discord at Odin#8743 or contact me on telegram, username: @Odinmylord. So that we can discuss details when needed",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1581382722",
                                    "author": {
                                        "login": "Odinmylord"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-07T19:56:36Z",
                                    "bodyText": "@Bytestorm5 since we are both working on the project but we haven't discussed some details together yet it would be amazing if you could add me on discord at Odin#8743 or contact me on telegram, username: @Odinmylord. So that we can discuss details when needed\n\nYe I'll add you, sent a req",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1581423118",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-13T01:42:28Z",
                                    "bodyText": "No I didn't forget that operator priority was contingent on the amount of spaces surrounding it I would never do that",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1588385045",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-20T07:10:58Z",
                                    "bodyText": "Alright it's been a minute so I figure I should explain the next steps rn since it's gotten a bit complex\nCurrently the main issue is code blocks- meaning if, else, function, when, etc. The big thing here is that we need to be able to \"restart\" a block to handle time travel correctly, which isn't exactly trivial in JavaScript but shockingly it is doable.\nHowever to do that the whole pipeline for converting DreamBerd needs to change a bit- the compinterpreter now has to split code blocks for parsing, meaning that the Parser has to get completed. Then, each code block needs a unique ID to call back to in order to restart. Finally, for proper time travel, we need to be able to dynamically switch where we call back to based on where the variable was last declared/assigned.\nSo.... it's a lot. We'll get there\n(Of course we could make the past read-only but that's boring, I want to bend reality)",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1598233847",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-21T06:41:04Z",
                                    "bodyText": "Oh also\nIf anyone wants to write some code to \"break\" the current plan of time travel, here's how I intend on handling it:\nWhenever a Past Reassignment (e.g. previous x = 2 is hit, we restart the deepest code block that contains a declaration of that variable.\nWe go to the scope for that block, discarding any variables declared in nested blocks since we're going to get back to them. However, in the process of resetting, we also now add the effect of the Past Reassignment, with whatever priority it has. (Note that if the Reassignment has lower priority than the variable at the previous point, we just discard the line before any of this). Then, all the code for the relevant block get executed normally.\nNote that time travel doesn't consume the traveling line; time travel without blocks will result in infinite recursion\nPlease send any cases that you think wouldn't be handled correctly with this approach, it seems watertight to me but lmk if you find something",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1600268766",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T01:02:49Z",
                                    "bodyText": "For the homies over at #169 sit tight",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1601874616",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T03:52:38Z",
                                    "bodyText": "I like the idea of a crazy interpreter... but honestly I'm just gonna try and get something working. Maybe I'll try and make it compile to binary not sure yet",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1601974947",
                                    "author": {
                                        "login": "8ightfold"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T08:29:44Z",
                                    "bodyText": "I like the idea of a crazy interpreter... but honestly I'm just gonna try and get something working. Maybe I'll try and make it compile to binary not sure yet\n\nIf you manage to get something working before things over here get done, send it over because that'll be useful for me to cross-check results",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1602230618",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T15:16:30Z",
                                    "bodyText": "When this is done, the compiler should be rewritten in DreamBerd.",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1602823431",
                                    "author": {
                                        "login": "DrBu7cher"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T16:07:08Z",
                                    "bodyText": "When this is done, the compiler should be rewritten in DreamBerd.\n\nEasy, let AI do the work",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1602937599",
                                    "author": {
                                        "login": "AlexMi-Ha"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T16:21:46Z",
                                    "bodyText": "How are you planning on/have already implemented zero-quote strings? Legitimately curious because it sounds impossible to parse properly.",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1602965846",
                                    "author": {
                                        "login": "thinker227"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T16:40:22Z",
                                    "bodyText": "I have it so when the parser sees a sequence like: [attributes...] <name> = <unknown-identifier>! the unknown identifier is converted to a string",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1602990607",
                                    "author": {
                                        "login": "8ightfold"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T16:49:03Z",
                                    "bodyText": "I have it so when the parser sees a sequence like: [attributes...] <name> = <unknown-identifier>! the unknown identifier is converted to a string\n\n^, any unknown identifier is assumed to be a string",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1603002096",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T16:49:55Z",
                                    "bodyText": "Btw @8ightfold do you want to be added to the GC for this or do you wanna do your own fully separate thing?",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1603003089",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T17:29:22Z",
                                    "bodyText": "fyi all, i've created the following discussion thread to track all efforts to implement DreamBerd:\nTracking: current efforts to implement DreamBerd #183\nhopefully that'll make it easier for newcomers to find them :)\n(especially as there could be more implementations created in the coming weeks)",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1603053572",
                                    "author": {
                                        "login": "gabrielchl"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T17:32:46Z",
                                    "bodyText": "@Bytestorm5 I'm down to join the GC, assuming it's disc my tag is 8ightfold",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1603057997",
                                    "author": {
                                        "login": "8ightfold"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-22T17:38:14Z",
                                    "bodyText": "@Bytestorm5 I'm down to join the GC, assuming it's disc my tag is 8ightfold\n\nSent a friend req",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1603065396",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-23T00:47:43Z",
                                    "bodyText": "@Bytestorm5 Checking before make another PR to do it, would it be useful to add docstrings to everything?",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1603485264",
                                    "author": {
                                        "login": "CoolCat467"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-23T01:12:26Z",
                                    "bodyText": "@Bytestorm5 Checking before make another PR to do it, would it be useful to add docstrings to everything?\n\nI mean it never hurts but rn the code is rather nebulous and a lot of things are subject to change, so I'd hate for you to make detailed docs only for them to be obsolete the next day (obv exaggerating the timeframe)",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1603499868",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-23T04:30:30Z",
                                    "bodyText": "I only recently learned refactoring doesn't mean renaming a variable and having that change propagate through the whole project, I think it means splitting off parts of the project into different modules but I honestly have no clue rn\nwhy do we need so many words anyway",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1603666349",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-23T05:22:10Z",
                                    "bodyText": "That is correct, refactoring is meant for attempting to fragment your code into different modules",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1603696065",
                                    "author": {
                                        "login": "CoolCat467"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-23T13:54:13Z",
                                    "bodyText": "It just came to my mind, that if you would waste enough time on this, until it actually works, you can scream reverse! and get all the time back, that you put in this thing...\nDisclaimer\n\nI don't actually think this is a waste of time. I would love to see this thing work.",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1604319364",
                                    "author": {
                                        "login": "DrBu7cher"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-23T14:00:44Z",
                                    "bodyText": "While true I wouldn't be able to go back to non-reversed time so I'd be sealing my fate to be turned back into an embryo in due time. It's always important to exercise time-safety when using reverse\nSpeaking of, I can at least safely recoup any time past this point:\nvar var recoup_flag<Infinity> = 0!\nif (recoup_flag !== 0) {\n    reverse!!\n}\nio recoup_time() => {\n    recoup_flag = 1!!\n    reverse!\n}",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1604327954",
                                    "author": {
                                        "login": "Bytestorm5"
                                    }
                                },
                                {
                                    "createdAt": "2023-08-19T16:10:59Z",
                                    "bodyText": "Kinda thinking of trying this as well in Rust",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1685036583",
                                    "author": {
                                        "login": "3top1a"
                                    }
                                },
                                {
                                    "createdAt": "2023-08-23T14:44:33Z",
                                    "bodyText": "Nevermind, gave up",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1690097101",
                                    "author": {
                                        "login": "3top1a"
                                    }
                                },
                                {
                                    "createdAt": "2023-08-23T15:09:19Z",
                                    "bodyText": "I see a meme here somewhere....",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1690140716",
                                    "author": {
                                        "login": "PThorpe92"
                                    }
                                },
                                {
                                    "createdAt": "2023-08-23T15:57:46Z",
                                    "bodyText": "I didn't even finish writing the parser and realized it's fucked.\nMaybe given enough ChatGPT and tears, but I doubt it.",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1690221213",
                                    "author": {
                                        "login": "3top1a"
                                    }
                                },
                                {
                                    "createdAt": "2023-08-23T16:27:59Z",
                                    "bodyText": "Lol I would imagine that the parser would be the critical point of failure here...",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1690270894",
                                    "author": {
                                        "login": "PThorpe92"
                                    }
                                },
                                {
                                    "createdAt": "2023-10-23T20:56:26Z",
                                    "bodyText": "i'm gonna make my own dreamberd interpreter as an university project\nill see what will happen",
                                    "url": "https://github.com/TodePond/DreamBerd/pull/74#issuecomment-1776007195",
                                    "author": {
                                        "login": "Eddio0141"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think using the character \u00a4 might be better because it's literally its purpose (the default currency symbol)",
                                                        "author": {
                                                            "login": "MaxenceDC"
                                                        },
                                                        "url": "https://github.com/TodePond/DreamBerd/pull/74#discussion_r1218282508",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d3c5655",
                                                            "authoredDate": "2023-06-05T15:55:38Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Oh neat, I didn't know that was a thing- will change in a sec",
                                                        "author": {
                                                            "login": "Bytestorm5"
                                                        },
                                                        "url": "https://github.com/TodePond/DreamBerd/pull/74#discussion_r1218285804",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d3c5655",
                                                            "authoredDate": "2023-06-05T15:55:38Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Remember that the purpose of the parser is to make sure things are right; After const and var there should be an identifier, but if there isn't, we have to stop the compiler and let the user know they done goofed",
                                                        "author": {
                                                            "login": "Bytestorm5"
                                                        },
                                                        "url": "https://github.com/TodePond/DreamBerd/pull/74#discussion_r1219859451",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "872ba48",
                                                            "authoredDate": "2023-06-06T15:02:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Not quite right, we need to handle cases of multiple previouses, and we also need to handle previous reassignments:\nconst const y = previous previous x\nprevious previous x = 7",
                                                        "author": {
                                                            "login": "Bytestorm5"
                                                        },
                                                        "url": "https://github.com/TodePond/DreamBerd/pull/74#discussion_r1222416334",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "df530c0",
                                                            "authoredDate": "2023-06-08T03:34:40Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 22429,
                        "title": "feat : Upgrade keycloak 21.x ",
                        "repository": {
                            "nameWithOwner": "jhipster/generator-jhipster",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-06-05T20:55:35Z",
                        "mergedAt": "2023-06-08T21:53:56Z",
                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429",
                        "state": "MERGED",
                        "author": {
                            "login": "BrayanMnz"
                        },
                        "editor": {
                            "login": "mraible"
                        },
                        "body": "<!--\r\nPR description.\r\n-->\r\nClose https://github.com/jhipster/generator-jhipster/issues/21819\r\nRelated with https://github.com/jhipster/generator-jhipster/pull/21938\r\n---\r\n\r\nPlease make sure the below checklist is followed for Pull Requests.\r\n\r\n- [x] [All continuous integration tests](https://github.com/jhipster/generator-jhipster/actions) are green\r\n- [x] Tests are added where necessary\r\n- [x] The JDL part is updated if necessary\r\n- [x] [jhipster-online](https://github.com/jhipster/jhipster-online) is updated if necessary\r\n- [x] Documentation is added/updated where necessary\r\n- [x] Coding Rules & Commit Guidelines as per our [CONTRIBUTING.md document](https://github.com/jhipster/generator-jhipster/blob/main/CONTRIBUTING.md) are followed\r\n\r\nWhen you are still working on the PR, consider converting it to Draft (below reviewers) and adding `skip-ci` label, you can still see CI build result at your branch.\r\n\r\n<!--\r\nPlease also reference the issue number in a commit message to [automatically close the related GitHub issue](https://help.github.com/articles/closing-issues-via-commit-messages/)\r\n\r\nNote: It is also possible to add `[skip ci]` or `[ci skip]` to your commit message to skip continuous integration tests\r\n-->\r\n",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-06-05T20:57:18Z",
                                    "bodyText": "May you trigger the checks? @DanielFran",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577462889",
                                    "author": {
                                        "login": "BrayanMnz"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T20:58:03Z",
                                    "bodyText": "As I said on the previous PR related to this\nThe checks are failing due to exceptions like this\nCaused by: org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:9080/realms/jhipster/.well-known/openid-configuration\": Unexpected end of file from server\nI have seen that some people reported this before to JHipster but this is not something that I can say is caused by the Keycloak upgrade.\nYou can see here #13733 where @mraible dealt with the same issue,\n@mraible do you have any input here that you remember was helpful when you faced that issue?",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577464231",
                                    "author": {
                                        "login": "BrayanMnz"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T21:28:36Z",
                                    "bodyText": "@BrayanMnz It looks like you need to update snapshots with npm run update-snapshots.",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577502219",
                                    "author": {
                                        "login": "mraible"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T21:56:39Z",
                                    "bodyText": "done @mraible but, the issue that I've mentioned above still exists.\nCaused by: org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:9080/realms/jhipster/.well-known/openid-configuration\": Unexpected end of file from server",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577525514",
                                    "author": {
                                        "login": "BrayanMnz"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T00:41:55Z",
                                    "bodyText": "Failures looks related to keycloak not been ready.\nKeycloak v20 is taking more than 50 to be healthy, v21 is taking little more than 20 including download and build.",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577732980",
                                    "author": {
                                        "login": "mshima"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T00:42:10Z",
                                    "bodyText": "Hi @mshima can you enable the checks to run for the PR?",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577733110",
                                    "author": {
                                        "login": "BrayanMnz"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T00:42:39Z",
                                    "bodyText": "Failures looks related to keycloak not been ready. Keycloak v20 is taking more than 50 to be healthy, v21 is taking little more than 20 including download and build.\n\nyou mean this failure?\n Caused by: org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:9080/realms/jhipster/.well-known/openid-configuration\": Unexpected end of file from server",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577733344",
                                    "author": {
                                        "login": "BrayanMnz"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T00:43:21Z",
                                    "bodyText": "Failures looks related to keycloak not been ready. Keycloak v20 is taking more than 50 to be healthy, v21 is taking little more than 20 including download and build.\n\nyou mean this failure?  Caused by: org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:9080/realms/jhipster/.well-known/openid-configuration\": Unexpected end of file from server\n\nI think so.",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577733701",
                                    "author": {
                                        "login": "mshima"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T00:45:17Z",
                                    "bodyText": "@BrayanMnz It seems the health check you've switched to isn't working. I found a couple of resources that might help:\n\nEnabling Keycloak Health checks\nKeycloak V21 Docker Container Health Check Failing\n\nI also asked ChatGPT. It suggested wget or nc: https://chat.openai.com/share/a41f5514-8ca7-48cf-b348-b0a995498971",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577734656",
                                    "author": {
                                        "login": "mraible"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T01:08:00Z",
                                    "bodyText": "It is again failing with Caused by: org.springframework.web.client.ResourceAccessException: I/O error on GET request for \"http://localhost:9080/realms/jhipster/.well-known/ope\nDo you suggest increasing the timeout for keycloak? @mshima",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577749157",
                                    "author": {
                                        "login": "BrayanMnz"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T01:48:34Z",
                                    "bodyText": "Still need to adjust the healthy check, it's not working yet.",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577771451",
                                    "author": {
                                        "login": "mshima"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T01:52:22Z",
                                    "bodyText": "I can see that it is working\n\u2026\n________________________________\nDe: Marcelo Shima ***@***.***>\nEnviado: Monday, June 5, 2023 9:48:45 PM\nPara: jhipster/generator-jhipster ***@***.***>\nCc: Brayan Munoz Vargas ***@***.***>; Mention ***@***.***>\nAsunto: Re: [jhipster/generator-jhipster] feat : Upgrade keycloak 21.x (PR #22429)\n\n\nStill need to adjust the healthy check, it's not working yet.\n\n\u2014\nReply to this email directly, view it on GitHub<#22429 (comment)>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AOXS4H6VAZZVCDLREJFZB43XJ2D73ANCNFSM6AAAAAAY3PTSXI>.\nYou are receiving this because you were mentioned.Message ID: ***@***.***>",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577773514",
                                    "author": {
                                        "login": "BrayanMnz"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T02:11:57Z",
                                    "bodyText": "It\u2019s not working:\nv20 log:\n\nv21 log ends without start the service:",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1577787798",
                                    "author": {
                                        "login": "mshima"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-08T15:21:25Z",
                                    "bodyText": "The health check still seems to be failing. If I try to run it locally, it complains the file is not executable. After I chmod +x, it complains that the timeout command is not found. I'm not sure if this provides any insight.",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1582806352",
                                    "author": {
                                        "login": "mraible"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-08T17:07:10Z",
                                    "bodyText": "@mraible great, it\u2019s working.\nJust need to replicate healthcheck to the compose file:\nhttps://github.com/BrayanMnz/generator-jhipster/blob/b6fba84e80ae2bdfc8e5b89863e1ad55518e8415/generators/docker-compose/templates/docker-compose.yml.ejs#L127",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1583042319",
                                    "author": {
                                        "login": "mshima"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-08T21:54:42Z",
                                    "bodyText": "Thanks for your contribution, @BrayanMnz!",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1583440074",
                                    "author": {
                                        "login": "mraible"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-08T21:57:23Z",
                                    "bodyText": "Thank you to the whole team! @mraible\nLooking forward for the next one, let me know if you have something special that need an extra hand.\n(It's a holiday in my country today, sorry for being inactive)",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1583442026",
                                    "author": {
                                        "login": "BrayanMnz"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-09T13:24:10Z",
                                    "bodyText": "bounty claimed https://opencollective.com/generator-jhipster/expenses/143406.",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1584570956",
                                    "author": {
                                        "login": "BrayanMnz"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-09T14:37:07Z",
                                    "bodyText": "@BrayanMnz approved",
                                    "url": "https://github.com/jhipster/generator-jhipster/pull/22429#issuecomment-1584691244",
                                    "author": {
                                        "login": "DanielFran"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Healthy check needs adjusts.\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                  test: ['CMD',  'echo', '-n', 'GET', '/', 'HTTP/1.0\\r\\n\\r\\n', '|', 'nc', 'localhost/realms/jhipster', '9080', '$? eq 0']\n          \n          \n            \n                  test: ['CMD',  'echo', '-n', 'GET /realms/jhipster HTTP/1.1\\r\\n\\r\\n', '|', 'nc', 'localhost', '9080']",
                                                        "author": {
                                                            "login": "mshima"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1218744028",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c222561",
                                                            "authoredDate": "2023-06-05T21:55:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'm not sure this is necessary. What happens without it?",
                                                        "author": {
                                                            "login": "mraible"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1220830587",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "78ab3bf",
                                                            "authoredDate": "2023-06-06T00:40:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The block looks like it needs formatting.",
                                                        "author": {
                                                            "login": "mraible"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1220830739",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "78ab3bf",
                                                            "authoredDate": "2023-06-06T00:40:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The block looks like it needs formatting.",
                                                        "author": {
                                                            "login": "mraible"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1220830786",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "78ab3bf",
                                                            "authoredDate": "2023-06-06T00:40:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The block looks like it needs formatting.",
                                                        "author": {
                                                            "login": "mraible"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1220830888",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "78ab3bf",
                                                            "authoredDate": "2023-06-06T00:40:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Formatting.",
                                                        "author": {
                                                            "login": "mraible"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1220830942",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "78ab3bf",
                                                            "authoredDate": "2023-06-06T00:40:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                  test: ['CMD',  'echo', '-n', 'GET /realms/jhipster HTTP/1.1\\r\\n\\r\\n', '|', 'nc', 'localhost', '9080']\n          \n          \n            \n                  test: ['CMD', 'nc', '-z', '-w2', 'localhost', '9080']",
                                                        "author": {
                                                            "login": "mraible"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1220833207",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "78ab3bf",
                                                            "authoredDate": "2023-06-06T00:40:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "In this case, we use the nc command with the -z option to scan for open ports, -w2 to specify a 2-second timeout, and localhost and 8080 as the host and port to check. If the connection fails or times out, nc will return a non-zero exit code, indicating an unhealthy state.",
                                                        "author": {
                                                            "login": "mraible"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1220833413",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "78ab3bf",
                                                            "authoredDate": "2023-06-06T00:40:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "displayNameHtml, is just the setting for how the name will be displayed.",
                                                        "author": {
                                                            "login": "BrayanMnz"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1220836035",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "78ab3bf",
                                                            "authoredDate": "2023-06-06T00:40:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Applied, please enable the checks to run again. @mraible",
                                                        "author": {
                                                            "login": "BrayanMnz"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1220837114",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "78ab3bf",
                                                            "authoredDate": "2023-06-06T00:40:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I believe we need to add KC_HEALTH_ENABLED=true to the environment and use the following for the test:\ntest: \"bash /opt/keycloak/health-check.sh\"\n\nFrom https://twitter.com/ubaid4j/status/1666489377537822721",
                                                        "author": {
                                                            "login": "mraible"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1221955422",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a06649",
                                                            "authoredDate": "2023-06-07T04:45:41Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The health-check.sh script also needs to be added.\nhttps://github.com/ubaid4j/api-gateway-with-multiple-oidc-clients/blob/main/src/main/docker/keycloak/health-check.sh",
                                                        "author": {
                                                            "login": "mraible"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1221957086",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a06649",
                                                            "authoredDate": "2023-06-07T04:45:41Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@BrayanMnz I tried to update this PR and push the changes to your branch, but I get a permission denied error. Maybe you can temporarily add me to your fork?",
                                                        "author": {
                                                            "login": "mraible"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1222194028",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a06649",
                                                            "authoredDate": "2023-06-07T04:45:41Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "done!",
                                                        "author": {
                                                            "login": "BrayanMnz"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1222220100",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a06649",
                                                            "authoredDate": "2023-06-07T04:45:41Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ejs file is the default.\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                      renameTo: () => 'realm-config/keycloak-health-check.sh'\n          \n          \n            \n                      renameTo: () => 'realm-config/keycloak-health-check.sh'\n          \n          \n            \n                      transform: false,",
                                                        "author": {
                                                            "login": "mshima"
                                                        },
                                                        "url": "https://github.com/jhipster/generator-jhipster/pull/22429#discussion_r1222292575",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a09e429",
                                                            "authoredDate": "2023-06-07T23:38:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 151,
                        "title": "fix(#147): improve handling of anyOf",
                        "repository": {
                            "nameWithOwner": "astahmer/openapi-zod-client",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-06-05T15:27:22Z",
                        "mergedAt": "2023-06-06T14:10:07Z",
                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151",
                        "state": "MERGED",
                        "author": {
                            "login": "WickyNilliams"
                        },
                        "editor": {
                            "login": "WickyNilliams"
                        },
                        "body": "fixes #147\r\n\r\nas far as i can tell, this is closer to the real behavior of json-schema, from which openapi inherits `anyOf`.\r\n\r\nin my testing, given two object types `A` and `B`, anyOf these is equivalent to:\r\n\r\n```ts\r\nz.union([A.passthrough(), B.passthrough()])\r\n```\r\n\r\nthat is, `anyOf` is satisfied if any of the types match, and it stops validating after that allowing any additional properties. hence, `passthrough`\r\n\r\nprimitive types are special cased since passthrough does not make sense for them. resulting in:\r\n\r\n```ts\r\nz.union([APrimitiveType, AnObjectType.passthrough()])\r\n```\r\n\r\ni've prepared a small playground for experimenting with json-schema behavior, in case it's useful for validating the logic here https://stackblitz.com/edit/json-schema-anyof-test?file=index.tsx",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-06-05T15:28:46Z",
                                    "bodyText": "The latest updates on your projects. Learn more about Vercel for Git \u2197\ufe0e\n\n\n\nName\nStatus\nPreview\nComments\nUpdated (UTC)\n\n\n\n\nopenapi-zod-client\n\u2705 Ready (Inspect)\nVisit Preview\n\ud83d\udcac Add feedback\nJun 6, 2023 0:00am",
                                    "url": "https://github.com/astahmer/openapi-zod-client/pull/151#issuecomment-1577020797",
                                    "author": {
                                        "login": "vercel"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-05T15:31:40Z",
                                    "bodyText": "tomorrow i will test this locally via npm link and see if it fixes the issues i originally encountered with the anyOf behavior",
                                    "url": "https://github.com/astahmer/openapi-zod-client/pull/151#issuecomment-1577025105",
                                    "author": {
                                        "login": "WickyNilliams"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T12:35:03Z",
                                    "bodyText": "@astahmer ok i've tested this against my codebase and this seems to fix the previous issues i had (though introduces some new ones as a result of #140), so from my side i think it's complete.\nlet me know if you'd like any changes, or squash some commits etc",
                                    "url": "https://github.com/astahmer/openapi-zod-client/pull/151#issuecomment-1578684741",
                                    "author": {
                                        "login": "WickyNilliams"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "i feel like i'm doing something wrong here since it's so awkward - is there a better way? thought i'd ask, just in case",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1218247087",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "i'm not convinced the tests i've added here really help with proving the behavior is correct. is there some way that i can get the generated types in a test and call zod's parse, asserting the result? that way i can take test cases from json-schema and ensure it matches",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1218249354",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "there's no way to do that atm, although it would be very useful, but I guess for now you could just copy/paste the result and re-use that in another test with a manual call to the zod parse fn",
                                                        "author": {
                                                            "login": "astahmer"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1218259893",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "that works! i'll do it tomorrow, just finishing up for the day :)",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1218268647",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "also, what does it mean for the schema's type to be an array? i couldn't tell if this is TS getting the types wrong or not, so i filtered that out. but does it need to be specifically handled somehow?",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1218270245",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "it can happen since OpenAPI 3.1\nit was introduced in this PR because of this issue",
                                                        "author": {
                                                            "login": "astahmer"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1218275369",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "from what we wrote in this issue:\n\nit basically acts as a or operator, like the SchemaObject[\"oneOf\"]",
                                                        "author": {
                                                            "login": "astahmer"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1218276969",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "interesting. ok, so do i need to flatten/process the array? or has it already been done at that point (e.g. by the priod call to getZodSchema)?",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219250430",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "yes and yes ! it was handled here by indeed just looping on the type and then calling getZodSchema using that isolated type if it's a complex type or just using an union otherwise\n519de14#diff-aff08f665d4e69fe50761cef05035287658147285c711089446e5cbbbadacb54R66-R77",
                                                        "author": {
                                                            "login": "astahmer"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219317178",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "not sure if this is too cursed to commit?\nfunction createValidator(zodSchema: CodeMeta) {\n    return new Function(\n        \"input\",\n        `\n        with(this) {\n            return ${zodSchema}.parse(input)\n        }\n    `\n    ).bind({ z });\n}\n\nconst zodSchema = getZodSchema({ schema: { type: \"number\" } })\nconst validator = createValidator(zodSchema)\n\nexpect(() => validator(\"string\")).toThrow()",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219444663",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "it's easier to beg for forgiveness than ask permission, so i just pushed this haha. it's a quick (and definitely dirty!) way to validate the behavior of schemas produced, but i think it's valuable here. simple to back out if you'd rather not. let me know!",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219491322",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'm not sure what the with keyword does tbh, it's been a while since I saw this \ud83d\ude05  but yeah overall this seems fine, it does the job ! keep it",
                                                        "author": {
                                                            "login": "astahmer"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219499325",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "haha it's a deep cut for sure :D i realised i could simplify this. now it's just\nfunction createValidator(zodSchema: CodeMeta) {\n    return new Function(\"z\", \"input\", `return ${zodSchema}.parse(input)`);\n}",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219509686",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "it looks great !",
                                                        "author": {
                                                            "login": "astahmer"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219515858",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0582f90",
                                                            "authoredDate": "2023-06-05T15:15:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "is this one still valid ?\nother than this change, LGTM we can probably merge it",
                                                        "author": {
                                                            "login": "astahmer"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219649488",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e1e6dc8",
                                                            "authoredDate": "2023-06-06T11:59:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "the changes looks correct to me?\n{\n   anyOf: [{ type: \"string\" }, { type: \"number\" }]\n}\nshould become z.union([z.string(), z.number()])\nor am i misreading your comment?",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219661121",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e1e6dc8",
                                                            "authoredDate": "2023-06-06T11:59:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "from what I remember and looking at this comment\n\n// anyOf = oneOf but with 1 or more = T extends oneOf ? T | T[] : never\n\nso when I see this:\n{\n   anyOf: [{ type: \"string\" }, { type: \"number\" }]\n}\nI think of it as:\ntype Thing = string | number | (Array<string | number>)\nwhich looked kinda ok before:\n- z.union([z.union([z.string(), z.number()]), z.array(z.union([z.string(), z.number()]))])\n+ z.union([z.string(), z.number()])\nand now it looks like :\ntype Thing = string | number\nwas it wrong before then or is it now ?",
                                                        "author": {
                                                            "login": "astahmer"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219669011",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e1e6dc8",
                                                            "authoredDate": "2023-06-06T11:59:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "i think it was wrong before. anyOf doesn't mean it can be an array. it is a union, that allows any additional properties through (it stops validating after the first type match).\nit was kind of hard to find an authoritative source on this, so i looked at the tests from the json-schema repo here. they don't show any use of arrays https://github.com/json-schema-org/JSON-Schema-Test-Suite/blob/b069ac352c3dc1fae71f6f177dafe97001c97920/tests/draft2020-12/anyOf.json\ni also tested this with ajv which is a popular json-schema implementation in js. see here, it fails (as expected) in the array case https://stackblitz.com/edit/json-schema-anyof-test-pnfj13?file=index.tsx%3AL55",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219695249",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e1e6dc8",
                                                            "authoredDate": "2023-06-06T11:59:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "it would probably be super valuable at some point to lift all those json-schema test cases and run them against the generated zod schemas!",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219706629",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e1e6dc8",
                                                            "authoredDate": "2023-06-06T11:59:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ok got it, I checked with this guy and it explains it pretty clearly\nhttps://chat.openai.com/share/954082b4-d72d-4b5f-a0d1-4a2107705ddb\noneOf = exactly 1 match, anyOf = must match 1 or more in the list\nI guess we can merge it then if that's fine with you",
                                                        "author": {
                                                            "login": "astahmer"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219706888",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e1e6dc8",
                                                            "authoredDate": "2023-06-06T11:59:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "in my testing i don't think the \"or more\" part is even a requirement - as soon as there's a single match it doesn't care about the rest\n{\n  anyOf: [\n    {\n      type: 'object',\n      properties: {\n        age: {\n          type: 'integer',\n        },\n      },\n      required: ['age'],\n    },\n    {\n      type: 'object',\n      properties: {\n        pet_type: {\n          type: 'string',\n          enum: ['Cat', 'Dog'],\n        },\n      },\n      required: ['pet_type'],\n    },\n  ],\n};\nthis schema would allow the following data:\n{ pet_type: \"Cat\", age: \"not a number\" } // matches PetByType, doesn't care age isn't a number\n{ age: 1, pet_type: \"Unicorn\" } // matches PetByAge, doesn't care about unicorn not being a type of pet\nwhich is why i added passthrough() to objects in the union :)\nso yes! go ahead and merge if you're happy",
                                                        "author": {
                                                            "login": "WickyNilliams"
                                                        },
                                                        "url": "https://github.com/astahmer/openapi-zod-client/pull/151#discussion_r1219727397",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e1e6dc8",
                                                            "authoredDate": "2023-06-06T11:59:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 1880,
                        "title": "docs: update shares specs",
                        "repository": {
                            "nameWithOwner": "celestiaorg/celestia-app",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-06-05T19:29:14Z",
                        "mergedAt": "2023-06-16T22:37:57Z",
                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880",
                        "state": "MERGED",
                        "author": {
                            "login": "rootulp"
                        },
                        "editor": {
                            "login": "rootulp"
                        },
                        "body": "Closes https://github.com/celestiaorg/celestia-app/issues/1855, https://github.com/celestiaorg/celestia-app/issues/1882\r\nOpens https://github.com/celestiaorg/go-square/issues/30, https://github.com/celestiaorg/go-square/issues/38",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-06-05T19:29:32Z",
                                    "bodyText": "PR Preview Action v1.4.4\n\n\n\n\n\ud83d\ude80 Deployed preview to https://celestiaorg.github.io/celestia-app/pr-preview/pr-1880/\n\n\non branch gh-pages at 2023-06-16 21:55 UTC",
                                    "url": "https://github.com/celestiaorg/celestia-app/pull/1880#issuecomment-1577358451",
                                    "author": {
                                        "login": "github-actions"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T15:22:09Z",
                                    "bodyText": "@rootulp  Could we potentially view the final rendered version of the content from this PR? It would significantly aid the review process.",
                                    "url": "https://github.com/celestiaorg/celestia-app/pull/1880#issuecomment-1578971252",
                                    "author": {
                                        "login": "staheri14"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T16:10:43Z",
                                    "bodyText": "@staheri14 yep you can click this link https://celestiaorg.github.io/celestia-app/pr-preview/pr-1880/specs/shares.html which you can get to via",
                                    "url": "https://github.com/celestiaorg/celestia-app/pull/1880#issuecomment-1579059719",
                                    "author": {
                                        "login": "rootulp"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T17:02:25Z",
                                    "bodyText": "Codecov Report\n\nMerging #1880 (202852f) into main (699113d) will decrease coverage by 0.02%.\nThe diff coverage is 100.00%.\n\n@@            Coverage Diff             @@\n##             main    celestiaorg/celestia-app#1880      +/-   ##\n==========================================\n- Coverage   21.22%   21.21%   -0.02%     \n==========================================\n  Files         120      121       +1     \n  Lines       13697    13704       +7     \n==========================================\n  Hits         2907     2907              \n- Misses      10500    10509       +9     \n+ Partials      290      288       -2     \n\n\n\nImpacted Files\nCoverage \u0394\n\n\n\n\n\npkg/shares/blob_share_commitment_rules.go\n100.00% <\u00f8> (\u00f8)\n\n\n\npkg/shares/padding.go\n52.08% <\u00f8> (\u00f8)\n\n\n\npkg/shares/share_splitting.go\n48.14% <100.00%> (+6.21%)\n\u2b06\ufe0f\n\n\nx/blob/types/payforblob.go\n71.42% <100.00%> (\u00f8)\n\n\n\n\n... and 2 files with indirect coverage changes",
                                    "url": "https://github.com/celestiaorg/celestia-app/pull/1880#issuecomment-1579141258",
                                    "author": {
                                        "login": "codecov-commenter"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-06T21:12:35Z",
                                    "bodyText": "I'm onboard with an Overview section but I think a few of these bullets belong on different spec pages.\n\narranging transactions according to their namespace,\n\nI think this refers to arranging blob shares according to their namespace. If so, I'll add a line to overview to state that shares in the original (and extended) data square are ordered by namespace.\n\ndistinguishing normal transactions from blob transactions,\n\nI think this belongs on blob specs or a stand-alone page.\n\nsplitting blobs from blob transactions\n\nI think this belongs on blob specs\n\nsubsequently creating shares from these organized sets\n\nAgreed.\n\npotentially mentioning the padding part as well as the logic behind different kinds of reserved namespaces.\n\nAgreed.\nStarted in 22e0ef1",
                                    "url": "https://github.com/celestiaorg/celestia-app/pull/1880#issuecomment-1579459234",
                                    "author": {
                                        "login": "rootulp"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-07T15:38:43Z",
                                    "bodyText": "I'm onboard with an Overview section but I think a few of these bullets belong on different spec pages.\n\narranging transactions according to their namespace,\n\nI think this refers to arranging blob shares according to their namespace. If so, I'll add a line to overview to state that shares in the original (and extended) data square are ordered by namespace.\n\ndistinguishing normal transactions from blob transactions,\n\nI think this belongs on blob specs or a stand-alone page.\n\nsplitting blobs from blob transactions\n\nI think this belongs on blob specs\n\nI agree that we don't need to go into excessive detail about these specific concepts, however, providing some context in the overview section and including links to relevant specifications can certainly enhance the readability of the document. By doing so, readers will have a broader understanding of the topic and can refer to the linked specifications for more detailed information if needed.\n\nStarted in 22e0ef1\n\nGreat, Thanks!",
                                    "url": "https://github.com/celestiaorg/celestia-app/pull/1880#issuecomment-1581081576",
                                    "author": {
                                        "login": "staheri14"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "DISMISSED",
                                        "bodyText": "overall really good!! I think we might be able to add a sentence or two in places that would help provide more context to readers less familar with the rest of celestia. besides that only had a few questions and mostly non-blocking discussions\nwill also take a second look after chewing on it, but am approving",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "[not blocking discussion]\n\nOne share sequence exists per reserved namespace and per blob.\n\nthis sentence is certainly correct, but I'm wondering if its out of place given that the reader might not know what a reserved namepsace or blob is yet",
                                                        "author": {
                                                            "login": "evan-forbes"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1219750420",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6ee377d",
                                                            "authoredDate": "2023-06-05T20:52:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "[not blocking discussion]\nit might be useful here to explain a bit more about the content that is going into these shares, for example briefly mentioning that this is where user blobs go etc. maybe point towards the namespace spec eventually or the blob module",
                                                        "author": {
                                                            "login": "evan-forbes"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1219831699",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6ee377d",
                                                            "authoredDate": "2023-06-05T20:52:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "[question]\nis the only thing differentiating these from normal padding shares just that the namespace is reserved? would it be possible to define all padding the same? or maybe just abstract out the similar portions and then we could list only the differences, which might make it easier to understand",
                                                        "author": {
                                                            "login": "evan-forbes"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1219860382",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6ee377d",
                                                            "authoredDate": "2023-06-05T20:52:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yea the implementation is abstracted b/c there is one function that accepts a namespace and generates a padding share here. It is called here and here. I can rewrite the padding specs to state that more clearly.",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1219975411",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6ee377d",
                                                            "authoredDate": "2023-06-05T20:52:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Good point. Will link to reserved namespace and blob module",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1219976128",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6ee377d",
                                                            "authoredDate": "2023-06-05T20:52:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved by a03d4ee",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1219979815",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6ee377d",
                                                            "authoredDate": "2023-06-05T20:52:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved by b8c3821",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220090460",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6ee377d",
                                                            "authoredDate": "2023-06-05T20:52:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Thanks a lot for your great work on this PR. I've added some comments and ideas about how we structure the spec and organize the content. Some of my suggestions aren't just for this PR\u2014they'll apply to all our future specs too, since this is our first spec PR, it's ended up with all these comments.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Can we please add a link to the most up-to-date NMT spec in the NMT repo i.e., https://github.com/celestiaorg/nmt/blob/master/docs/spec/nmt.md",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220056251",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "As per template, can we rename this section to Abstract?",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220057270",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I also agree with Evan's comment. It would be beneficial to explain the overarching algorithm in its own dedicated section (maybe titled \"Overview\"), which involves\n\narranging transactions according to their namespace,\ndistinguishing normal transactions from blob transactions,\nsplitting blobs from blob transactions, and\nsubsequently creating shares from these organized sets\npotentially mentioning the padding part as well as the logic behind different kinds of reserved namespaces.\n\nThe specifics concerning the encoding of shares may be reserved for their respective sections, with a link provided in this high-level description for easy reference.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220069674",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6ee377d",
                                                            "authoredDate": "2023-06-05T20:52:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This part touches on the specifics of the share encoding and yer not enough background has been presented for the reader to fully grasp this part. We could potentially define a separate subsection titled e.g., \"Terms and Definitions\" under the \"Share Structure\", in which we can elaborate on the recurring terms in this doc. WDYT?",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220073794",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "All available data in a Celestia block\n\nWe can also add a link to the \"block\" specification (if the spec is not ready, we can just put a placeholder for a link and fix the link later).",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220077051",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Blob data are opaque bytes of data that are included in the block but do not impact the state. In other words, the remaining bytes have no special meaning and are simply used to store data.\n\nI think if we add the \"Overview\" section as per my previous comment (in which we would explain the concept blob Tx  and that it carries some blobs), then we can remove these lines from here (they are not directly related to the share encoding imo, for example the term \"state\" is not mentioned in earlier parts and may cause confusion as to why we care about the state in the share encoding stage).",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220087424",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Could we consider incorporating a numerical example to illustrate sequence representation, covering the initial share as well as any continuation shares? This need not be included within this particular PR, but could certainly be a valuable addition to subsequent PRs.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220093446",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The \"Sparse share\" and \"compact share\" descriptions can also reside under the \"Terms and Definitions\"  section.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220095250",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I'd suggest using more precise wording (now that we are revising the specs), for example,\nClients MUST/SHOULD ignore the contents of these shares because they don't contain any significant data.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220101102",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "If an \"Overview\" section could be established (as suggested in previous comments), it would then be possible to elaborate on parity shares in that segment.  Subsequently, the parity share structure can be explained here with no additional context needed.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220106461",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "in the case of a data withholding attack.\n\nIn favour of keeping the specs more focused and concise,  it would be beneficial to circumvent discussions about other specifications, unless the information is absolutely necessary for the current ones. For example, the mention to the withholding attack can be removed (or if it is necessary, a link to the relevant spec can be added).",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220111794",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved via bd5deef",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220302253",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved via c4f4ced",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220309560",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved via 8b61821",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220311494",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Effort was taken to minimize the usage of \"sparse share\" and \"compact share\" (one occurence each) because I think it may be easier to frame all shares as sharing the same structure with the added detail that Celestia transaction shares encode their blob uniquely to enable parsing shares in the middle of a sequence.\nSee https://github.com/celestiaorg/celestia-app/issues/1881\nWhich other terms should we add to the \"Terms and Definitions\" section?",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220322259",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Started a Glossary section in a1910b5 but I'm on the fence b/c it seems duplicative with terms defined in this doc. Open to adding more terms if you have suggestions.",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220331802",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "In an effort to minimize the scope of this page, I think blob Tx should be explained on the blob page rather than the shares page. I can expand on the term \"state\" though",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220337488",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved via 4fd7ebe and 6e99898",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220356351",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Good idea. Going to use MAY here based on https://www.ietf.org/rfc/rfc2119.txt",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220360930",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved via 307c6c0",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220362068",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "b5b1f01",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1220363440",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Effort was taken to minimize the usage of \"sparse share\" and \"compact share\" (one occurence each) because I think it may be easier to frame all shares as sharing the same structure with the added detail that Celestia transaction shares encode their blob uniquely to enable parsing shares in the middle of a sequence.\nSee https://github.com/celestiaorg/celestia-app/issues/1881\n\nI see, thanks for the clarification.\n\nStarted a Glossary section in a1910b5 but I'm on the fence b/c it seems duplicative with terms defined in this doc. Open to adding more terms if you have suggestions.\n\nI initially suggested the \"Terms and Definitions\" section be added at the beginning of the doc in order to introduce and define the key terms that will be repeated throughout the document and allow readers to familiarize themselves with the terminology from the beginning. My suggestion for the \"Terms and Definitions\" section was motivated by the fact that the \"share sequence\" has been described early on in the overview part, so figured that if that term is necessary to be introduced early on then it would be better to have a separate section like \"Terms and Definitions\" to contain all such terms.\nOn the other hand, a \"Glossary\" section, which is placed at the end, can also be useful but serves a distinct purpose.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1221769202",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think blob Tx should be explained on the blob page rather than the shares page.\n\nFine with that, yet, to enhance the clarity of the document, it would be beneficial to briefly mention that \"blobs\" refer to data that BlobTxs initially carried but were subsequently separated from the original transaction. We can then give a link to the respective specs.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1221805737",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Thanks for the changes in 307c6c0. Since these words are defined in RFC2119, we shall use capitalized format e.g., may -> MAY to emphasize that they should be interpreted according to that RFC.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1222312151",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved by 851467c",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1223369827",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved via f249b65",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1229907267",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resurrected a terms section.",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1229907896",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sure! Do you mind elaborating on what you mean by numerical example? Something like this:\nFor example, a blob of 1600 bytes would be split into:\n| share 1 | share 2 | share 3 | share 4 |\n| start   | cont.   | cont.   | cont.   |",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1229913512",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "DISMISSED",
                                        "bodyText": "Thanks for your great updates! I have included my comments and suggestions, if you think some of them are better to be tackled in a separate PR, that is totally fine.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "[Suggestion-optional] All the other size variables are _BYTES suffixed, considering this, can we also use the same suffix for the NAMESPACE_SIZE i.e., NAMESPACE_BYTES (for consistency)?",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230255954",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "[Suggestion] The figure has some extra information about the namespace i.e., version and id, I'd suggest either editing the figure or revising the textual description e.g.,\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            - The first [`NAMESPACE_SIZE`](./consensus.md#constants) of a share's raw data is the namespace of that share.\n          \n          \n            \n            - The first [`NAMESPACE_SIZE`](./consensus.md#constants) of a share's raw data is the namespace of that share. Each namespace is comprised  of a namespace version and a namespace ID, which together occupy `NAMESPACE_SIZE` bytes.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230257150",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            - The next [`SHARE_INFO_BYTES`](./consensus.md#constants) bytes are for share information with the following structure:\n          \n          \n            \n            - The next [`SHARE_INFO_BYTES`](./consensus.md#constants) bytes are for share information (denoted by 'info bytes' in Fig.1) with the following structure:",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230258068",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "If we could have a figure number in here, it would make it easier to refer to it in the text. I'll refer to this figure as Fig.1. in my comments.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230258798",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "In the following revision, tried to make references to the figure, and make some clarifications, feel free to revise it as you see fit.\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            - If this is the first share of a sequence the next [`SEQUENCE_BYTES`](./consensus.md#constants) contain a big endian `uint32` that represents the length of the sequence that follows in bytes.\n          \n          \n            \n            - If a share is the first share in a sequence, it will include the length of the sequence in bytes, denoted as [SEQUENCE_BYTES](https://chat.openai.com/consensus.md#constants), represented as a big-endian uint32 value. This length is placed immediately after the `SHARE_INFO_BYTES` field. In Figure 1, this length is referred to as the `sequence length`. It's important to note that non-starter shares do not contain this field.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230260561",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I added the share size, as it appears later in this section, and it would be good to give a bit of context about it earlier.\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            The share format below is consistent for all blob shares. In other words, the share format below applies to shares with a namespace above [`MAX_RESERVED_NAMESPACE`](./consensus.md#reserved-namespaces) but below [`PARITY_SHARE_NAMESPACE`](./consensus.md#reserved-namespaces):\n          \n          \n            \n            The share's format below is consistent for all blob shares. In other words, the share format below applies to shares with a namespace above [`MAX_RESERVED_NAMESPACE`](./consensus.md#reserved-namespaces) but below [`PARITY_SHARE_NAMESPACE`](./consensus.md#reserved-namespaces). Note that each share has a fixed size `SHARE_SIZE`](./consensus.md#constants):",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230268057",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "developers MAY choose to encode additional metadata in their raw blob data prior to inclusion in a Celestia block.\n\n[Question] Can you please expand on this? how would such metadata be beneficial? also what kind of metadata? Thanks! (no need to update the PR, just asking for my own curiousity)",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230270174",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "[Question and suggestion] Shouldn't this title be \"Blob Share Format\" given that the format explained in here only applies to the blob shares?",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230271795",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "[Suggestion] The beginning of this part i.e.,User submitted [blob] somewhat implies that share encoding is a concept limited to the blob transactions.  I'd suggest using a more general term like transactions to avoid such confusion.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230279951",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "[Suggestion] When reading the spec, it appears that share encoding is namespace dependent, if yes, then it would be very helpful to mention this in the overview as well. With this addition, the rest of the spec organization becomes much more clear as each section maps to the encoding of different share namespaces.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230281457",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "What I meant is basically adding some textual elaboration about what is already in the figures, something like below (the example is not completed, I just sketched the idea):\nSuppose there are only 3 transactions tx1 tx2 and tx3 with X, Y, Z sizes (X,Y,Z to be the exact byte sizes according to the figure) in the TRANSACTION_NAMESPACE.  These transactions will span two shares  (based on the figures)  with the following values:\nShare1:\nnamespace version: 0\nnamespace ID: TRANSACTION_NAMESPACE\nshare version: 0000000\nsequence indicator: 1\nsequence length: X+Y+Z (the exact sizes though)\nreserved byte: 38 (with an explanation of why 38, because tx1 starts at byte index 38)\n... plus tx1 and tx2 (up to the middle as it hits the share's boundary)\nShare1 would be serialized as:\n0<namespace verion>||TRANSACTION_NAMESPACE<namespace ID>|| 0000000<share version>||1<sequence indicator>||X+Y+X<sequence length>||38<reserved byte>||...\nShare2:\n...\nUpdate: My example above is for Transaction shares, however, the same idea would work for the blob shares. Please let me know if you have any questions.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230294875",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "[Suggestion] I'd suggest making a connection between the field names in the figures and their textual description (similar to my comments for the \"Share Format\" section)",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1230296183",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "DISMISSED",
                                        "bodyText": "so \ud83d\udd25",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Going to extract to a separate issue. This is an API breaking change b/c it involves renaming an exported constant.",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231463377",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved by b2c3981",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231470802",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved by ecd9465",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231472552",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "For example transaction shares encode the reserved bytes as additional metadata.",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231475768",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The share format is applicable to all types of shares. Transaction shares conform to this share format and additionally have reserved bytes.\nIn this iteration of the specs, I'm trying to convey that the reserved bytes are part of the raw data portion that comes after the common share format.",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231476794",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ideally the share format is universal and applicable to all types of shares. The previous version of these specs differentiated between compact and sparse shares because that's how the current implementation behaves but IMO it should be easier to describe that all shares conform to one format (the \"share format\") and that transaction shares have additional metadata to support the use case of parsing a share in the middle of a sequence. WDYT?",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231481423",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Will update to transactions even though that term is broad. Eventually non transaction data may be split into shares (i.e. intermediate state roots).",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231482531",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved by 3321e8a",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231484024",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "DISMISSED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved by e035e96",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231503622",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Expanded in e035e96",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231504084",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved by e035e96",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231504196",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Created #1941",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1231553623",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b8c3821",
                                                            "authoredDate": "2023-06-06T17:26:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "DISMISSED",
                                        "bodyText": "Just a question to help my understanding but otherwise looks good",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Can a \"share sequence\" be over multiple namespaces or do we define it as being all the shares within a single namespace\nI guess what I'm also asking are share sequences defined at the namespace level or the blob level or are they simply any array of shares",
                                                        "author": {
                                                            "login": "cmwaters"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1232020950",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4af2e6e",
                                                            "authoredDate": "2023-06-15T21:28:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Share sequences can not be over multiple namespaces.\nIn other words: one share sequence must have exactly one namespace https://github.com/rootulp/celestia-app/blob/e4fee2d0f8d0e4d07a78094f27161b4affdca197/pkg/shares/share_sequence.go#L14",
                                                        "author": {
                                                            "login": "rootulp"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1232590993",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4af2e6e",
                                                            "authoredDate": "2023-06-15T21:28:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "that transaction shares have additional metadata to support the use case of parsing a share in the middle of a sequence.\n\nThanks for the clarification. I see your point, that makes sense to me too.\nThere are a few aspects that puzzled me:\n\nIn the share format section, the supplied example is about the blob share, making this uncertainty that the explained share format only applies to the blob share (also given that there is no other section in the text dedicated to the blob share, it amplifies this confusion). One thing we could do (this PR or another PR) is to remove the blob share example from the \"Share format\" section and introduce a new section for \"Blob Transactions\", and there we explain how blob data is arranged in their own shares.\nAt the beginning of the \"Transaction shares\" section, the explanation somewhat implies the share format is specific to a namespace\n\n\nIn order for clients to parse shares in the middle of a sequence without downloading antecedent shares, Celestia encodes additional metadata in the shares associated with reserved namespaces. At the time of writing this only applies to the TRANSACTION_NAMESPACE and PAY_FOR_BLOB_NAMESPACE.\n\nHowever, that format applies to any transactions (but not blobs) where each individual transaction is a meaningful distinct unit of data to the Celestia blockchain, therefore, when a tx gets split across more than one share, additional metadata is needed to spot the start and end of that transaction. Maybe some rephrasing on that part can improve the clarity of that section.\nOtherwise, looks good to me.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1232717265",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Thanks for the clarification, I have added a comment which is also relevant to this part.",
                                                        "author": {
                                                            "login": "staheri14"
                                                        },
                                                        "url": "https://github.com/celestiaorg/celestia-app/pull/1880#discussion_r1232722971",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a598377",
                                                            "authoredDate": "2023-06-14T16:55:43Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "DISMISSED",
                                        "bodyText": "Thanks and LGTM!",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 2,
                        "title": "Timestamps testcases",
                        "repository": {
                            "nameWithOwner": "energietransitie/twomes-p1-reader-firmware",
                            "primaryLanguage": {
                                "name": "C"
                            }
                        },
                        "createdAt": "2023-06-05T12:17:25Z",
                        "mergedAt": null,
                        "url": "https://github.com/energietransitie/twomes-p1-reader-firmware/pull/2",
                        "state": "CLOSED",
                        "author": {
                            "login": "JoelvdWeg"
                        },
                        "editor": {
                            "login": "JoelvdWeg"
                        },
                        "body": "<!-- \r\nPlease fill out the entire template where applicable. \r\nYou don't need to remove the comments. They won't show up in the pull request.\r\n-->\r\n\r\n## What does this change\r\n<!-- Please describe the changes you made. -->\r\nThis change inlcudes test cases made for the timestamps to prove their functionalty.\r\nAt first some of these cases didnt pass, therefore I had to rewrite and rethink some parts of the program.\r\nThe test cases are called in p1.cpp, here you will find more information about them and how to use them.\r\n\r\n## Testing\r\n<!--\r\nPlease check only one of these boxes.\r\nRemove the space and place an 'x' inside the box to check it.\r\n-->\r\n- [ ] This change does not need testing.\r\n- [x] I tested this change.\r\n- [ ] I did not test this change.\r\n\r\n<!-- Describe how you tested this change (if applicable). -->\r\nI made 8 test cases the first 4 are DSMR 2/3 and the last 4 are DSMR/4/5.\r\nHere are the log results of the 8 test cases:\r\nI (5786) Unit Test:: Results below\r\n\r\nI (5786) Time: Smart meter timestamp: 231029012354\r\nI (5796) Time: Smart meter ISO8601 timestamp: 2023-10-29T01:23:54+0200\r\nI (5806) Time: ISO8601 timestamp: 2023-10-28T23:23:54Z\r\nI (5806) Time: Unix timestamp: 1698535434\r\n\r\nI (5816) Unit Test:: 1 PASSED\r\n\r\nI (5816) Time: Smart meter timestamp: 231029022354\r\nI (5826) Time: Smart meter ISO8601 timestamp: 2023-10-29T02:23:54+0200\r\nI (5826) Time: ISO8601 timestamp: 2023-10-29T00:23:54Z\r\nI (5836) Time: Unix timestamp: 1698539034\r\n\r\nI (5836) Unit Test:: 2 PASSED\r\n\r\nI (5846) Time: Smart meter timestamp: 231029022355\r\nI (5846) Time: Smart meter ISO8601 timestamp: 2023-10-29T02:23:55+0200\r\nI (5856) Time: ISO8601 timestamp: 2023-10-29T00:23:55Z\r\nI (5866) Time: Unix timestamp: 1698539035\r\n\r\nI (5866) Unit Test:: 3 PASSED\r\n\r\nI (5866) Time: Smart meter timestamp: 231029022354\r\nI (5876) Time: Smart meter ISO8601 timestamp: 2023-10-29T02:23:54+0100\r\nI (5886) Time: ISO8601 timestamp: 2023-10-29T01:23:54Z\r\nI (5886) Time: Unix timestamp: 1698542634\r\n\r\nI (5896) Unit Test:: 4 PASSED\r\n\r\nI (5896) Time: Smart meter timestamp: 231029012354S\r\nI (5906) Time: Smart meter ISO8601 timestamp: 2023-10-29T01:23:54+0200\r\nI (5906) Time: ISO8601 timestamp: 2023-10-28T23:23:54Z\r\nI (5916) Time: Unix timestamp: 1698535434\r\n\r\nI (5926) Unit Test:: 5 PASSED\r\n\r\nI (5926) Time: Smart meter timestamp: 231029022354S\r\nI (5926) Time: Smart meter ISO8601 timestamp: 2023-10-29T02:23:54+0200\r\nI (5936) Time: ISO8601 timestamp: 2023-10-29T00:23:54Z\r\nI (5946) Time: Unix timestamp: 1698539034\r\n\r\nI (5946) Unit Test:: 6 PASSED\r\n\r\nI (5956) Time: Smart meter timestamp: 231029022355S\r\nI (5956) Time: Smart meter ISO8601 timestamp: 2023-10-29T02:23:55+0200\r\nI (5966) Time: ISO8601 timestamp: 2023-10-29T00:23:55Z\r\nI (5966) Time: Unix timestamp: 1698539035\r\n\r\nI (5976) Unit Test:: 7 PASSED\r\n\r\nI (5976) Time: Smart meter timestamp: 231029022354W\r\nI (5986) Time: Smart meter ISO8601 timestamp: 2023-10-29T02:23:54+0100\r\nI (5996) Time: ISO8601 timestamp: 2023-10-29T01:23:54Z\r\nI (5996) Time: Unix timestamp: 1698542634\r\n\r\nI (6006) Unit Test:: 8 PASSED\r\n\r\nI (6006) Unit Test:: Total: 8 PASSED, 0 FAILED\r\n\r\nThese results are in line with the given requirements below.\r\n\r\n<html>\r\n<body>\r\n<!--StartFragment-->\r\n\r\nDSMR2/3 timestamp (format=YYMMDDhhmmss) | DSMR4/5 timestamp (format=YYMMDDhhmmssX) | Unix timestamp | ISO8601 fully qualified (tz='Europe/Amsterdam') | ISO8601 fully qualified (tz='UTC')\r\n-- | -- | -- | -- | --\r\n231029012354 | 231029012354S | 1698535434 | 2023-10-29T01:23:54+0200 | 2023-10-28T23:23:54Z\r\n231029022354 | 231029022354S | 1698539034 | 2023-10-29T02:23:54+0200 | 2023-10-29T00:23:54Z\r\n231029022355 | 231029022355S | 1698539035 | 2023-10-29T02:23:55+0200 | 2023-10-29T00:23:55Z\r\n231029022354 | 231029022354W | 1698542634 | 2023-10-29T02:23:54+0100 | 2023-10-29T01:23:54Z\r\n\r\nWhen there is a erreneous gas meter found the measurements will not be send to the database and the log gives this message:\r\nI (73376) P1: incorrect or no p1 message\r\n\r\nAgain the code contains instructions on how to use these tests.\r\n\r\n<!--EndFragment-->\r\n</body>\r\n</html>\r\n\r\n## Trello card(s)\r\n<!-- Please add applicable trello cards here like this:\r\n- Card title: https://trello.com/c/PhICfOYC\r\n-->\r\n- Use smart meter TST timestamps if available: https://trello.com/c/D0IwI46Y/399-use-smart-meter-tst-timestamps-if-available\r\n- Discard erroneous gas meter readings: https://trello.com/c/SXrNrrbc/400-discard-erroneous-gas-meter-readings\r\n- Autosensing baudrate p1 port: https://trello.com/c/flk8lbJ1/200-autosensing-baudrate-p1-port\r\n- Use \"twomes-p1-reader-firmware\" as new device_type.name https://trello.com/c/s9UtOntz/706-use-twomes-p1-reader-firmware-as-new-devicetypename\r\n",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-06-05T20:17:57Z",
                                    "bodyText": "Nce overview in PR comment, thanks!\nI made posted more detailed review coments.\nBottom line:\n\nI am not convinced by the unit test (you don't test the actual code)\nthe code does not use nvs and I don't see any indication or proof that the code works for measurements where the devcie is fully turned off between measurements. Add this (look at the code suggestions), or mark this clearly as something that is TO DO.\nCode will not work on DSMR2/3 (which does NOT post version info in P1 telegram)\nThe crirerion by wich you determine based on (minimum) interval times is obscure. Better use a (compile time) calculation in which the baud rate can be found than 'just' a number",
                                    "url": "https://github.com/energietransitie/twomes-p1-reader-firmware/pull/2#issuecomment-1577418512",
                                    "author": {
                                        "login": "henriterhofte"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-09T11:21:18Z",
                                    "bodyText": "Already included in PR#3",
                                    "url": "https://github.com/energietransitie/twomes-p1-reader-firmware/pull/2#issuecomment-1584417514",
                                    "author": {
                                        "login": "henriterhofte"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Why do you add an additional time_t testUTC parameter to this variant of parseDsmrTimestamp()? What is its function/meaing?\nThis testUTC parameter is not available in the 'real' code, so this renders your unit test invalid/meaningless.\nIn unit tests, you should use the actual function you're getting in real life.",
                                                        "author": {
                                                            "login": "henriterhofte"
                                                        },
                                                        "url": "https://github.com/energietransitie/twomes-p1-reader-firmware/pull/2#discussion_r1218059314",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ddd1518",
                                                            "authoredDate": "2023-06-05T11:50:26Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This is yet another indication that you're using additional data in your unit test that is not available in the 'real' code. Don't do this, you could be cheating yourself here.",
                                                        "author": {
                                                            "login": "henriterhofte"
                                                        },
                                                        "url": "https://github.com/energietransitie/twomes-p1-reader-firmware/pull/2#discussion_r1218064172",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ddd1518",
                                                            "authoredDate": "2023-06-05T11:50:26Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Naming is a bit confusing here, I suggest:\n\"Smart meter ISO8601 timestamp:\" -> \"ISO8601 timestamp (tz=UTC): \"\n(also change in the 'real' parseDsmrTimestamp function; I will change naming in test case tables as well)",
                                                        "author": {
                                                            "login": "henriterhofte"
                                                        },
                                                        "url": "https://github.com/energietransitie/twomes-p1-reader-firmware/pull/2#discussion_r1218067118",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ddd1518",
                                                            "authoredDate": "2023-06-05T11:50:26Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Naming is a bit confusing here, I suggest:\n\"Smart meter ISO8601 timestamp:\" -> \"ISO8601 timestamp (tz='Europe/Amsterdam'): \"\n(also change in the 'real' parseDsmrTimestamp function; I will change naming in test case tables as well)",
                                                        "author": {
                                                            "login": "henriterhofte"
                                                        },
                                                        "url": "https://github.com/energietransitie/twomes-p1-reader-firmware/pull/2#discussion_r1218072746",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ddd1518",
                                                            "authoredDate": "2023-06-05T11:50:26Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I don't see you using persistent storage such as nvs anywhere in this function. This is suspect: how will you remember the last timestamp, which you most likely will need to disambiguate challenging timestamps when attached to a DSMR2/3 smart meter>\nRemember: this firmware should also work on env:M5COREINK_COREINK; for this, you have to assume that between successive calls for the parseDsmrTimestamps (which are typically 5, 10, 15 or 30 minutes apart), the ESP32 will have been be completely shutdown and rebooted.\nIn order to disambiguate ambigious timestamps like 231029022354 you have to remember previous timestamps like 231029022355 in order to be able to conclude that you encounter a timestamp that seems 'out of order' before you can conclude with confidence that apparantly this must a local timestamp from the first hour of winter time. At least, I can think of no other way that you can reconstruct this just from a series of consecutive of DSMR2/3 timestamps.\nJust wondering, did you even look at the code suggestions from ChatGPT? (shareable link: https://chat.openai.com/share/5a28b049-8772-474b-89db-6dd888c8144b)\nI copied the solution below (probably the solution has its own errors, but you could (should?) take inspiration from it nonetheless):\n\n#include <iostream>\n#include <sstream>\n#include <ctime>\n#include <esp_system.h>\n#include <nvs_flash.h>\n#include <nvs.h>\n\nint main() {\n  // Initialize NVS\n  esp_err_t err = nvs_flash_init();\n  if (err == ESP_ERR_NVS_NO_FREE_PAGES || err == ESP_ERR_NVS_NEW_VERSION_FOUND) {\n    // NVS partition was truncated and needs to be erased\n    ESP_ERROR_CHECK(nvs_flash_erase());\n    err = nvs_flash_init();\n  }\n  ESP_ERROR_CHECK(err);\n\n  // Open NVS namespace for storing previous timestamp and DST flag\n  nvs_handle nvs;\n  err = nvs_open(\"timestamp\", NVS_READWRITE, &nvs);\n  if (err != ESP_OK) {\n    std::cout << \"Error opening NVS: \" << esp_err_to_name(err) << std::endl;\n    return 1;\n  }\n\n  // Input timestamp string\n  std::string timestamp_str = \"231031020000\"; // YYMMDDhhmmss format\n\n  // Parse input timestamp string\n  std::tm timestamp_tm = {};\n  std::stringstream ss(timestamp_str);\n  ss >> std::get_time(&timestamp_tm, \"%y%m%d%H%M%S\");\n\n  // Check if current timestamp occurs between 2:00 AM and 3:00 AM\n  bool ambiguous_time = timestamp_tm.tm_hour == 2 && timestamp_tm.tm_min == 0 && timestamp_tm.tm_sec == 0;\n\n  // Load previous timestamp and DST flag from NVS\n  std::time_t prev_timestamp_unix = 0;\n  nvs_get_i64(nvs, \"timestamp_unix\", &prev_timestamp_unix);\n  int prev_dst_flag = -1;\n  nvs_get_i32(nvs, \"dst_flag\", &prev_dst_flag);\n\n  if (prev_dst_flag == -1) {\n    // No previous DST flag, let mktime determine DST flag for current timestamp\n    timestamp_tm.tm_isdst = -1;\n  } else if (!ambiguous_time) {\n    // Current timestamp does not occur between 2:00 AM and 3:00 AM, use previous DST flag\n    timestamp_tm.tm_isdst = prev_dst_flag;\n  } else if (prev_timestamp_unix == 0) {\n    // No previous timestamp, assume current timestamp is in standard time\n    timestamp_tm.tm_isdst = 0;\n  } else {\n    // Determine DST flag based on previous timestamp and current timestamp\n    std::tm prev_timestamp_tm = *std::localtime(&prev_timestamp_unix);\n    if (prev_timestamp_tm.tm_hour < 2 || (prev_timestamp_tm.tm_hour == 2 && prev_timestamp_tm.tm_min < 0)) {\n      // Previous timestamp occurred before DST transition time (2:00 AM)\n      timestamp_tm.tm_isdst = 0; // assume current timestamp is in standard time\n    } else if (prev_timestamp_tm.tm_hour > 3 || (prev_timestamp_tm.tm_hour == 3 && prev_timestamp_tm.tm_min >= 0)) {\n      // Previous timestamp occurred after DST transition time (3:00 AM)\n      timestamp_tm.tm_isdst = 1; // assume current timestamp is in DST\n    } else {\n      // Previous timestamp occurred during the hour that occurs twice due to the DST transition\n      timestamp_tm.tm_isdst = prev_dst_flag; // use previous DST flag\n    }\n  }\n\n  // Convert local time to Unix timestamp\n  std::time_t timestamp_unix = std::mktime(&timestamp_tm);\n\n  // Store current timestamp and DST flag in NVS for next measurement\n  nvs_set_i64(nvs, \"timestamp_unix\", timestamp_unix);\n  nvs_set_i32(nvs, \"dst_flag\", timestamp_tm.tm_isdst);\n  nvs_commit(nvs);\n\n  // Print results\n  std::cout << \"Input timestamp: \" << timestamp_str << std::endl;\n  std::cout << \"Unix timestamp: \" << timestamp_unix << std::endl;\n  std::cout << \"DST flag: \" << timestamp_tm.tm_isdst << std::endl;\n\n  return 0;\n}",
                                                        "author": {
                                                            "login": "henriterhofte"
                                                        },
                                                        "url": "https://github.com/energietransitie/twomes-p1-reader-firmware/pull/2#discussion_r1218120781",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ddd1518",
                                                            "authoredDate": "2023-06-05T11:50:26Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "A suggestion to make this code a bit more robust and to return the p1Struct->dsmrVersion as a string if available, or empty string if not available; the DSMR version will be represented as a formatted string, such as \"4.2\", \"5.0\", etc., based on the parsed version data using the %hhu format specifier.\n// Structure to store the parsed data\nstruct P1Struct {\n    std::string dsmrVersion;\n};\n\nstd::string formatVersion(unsigned char version) {\n    unsigned int major = version / 10;\n    unsigned int minor = version % 10;\n\n    std::ostringstream oss;\n    oss << major << '.' << minor;\n\n    return oss.str();\n}\n\nvoid parseP1Telegram(const char* p1String, P1Struct* p1Struct) {\n    // DSMR version: OBIS reference 1-3:0.2.8\n    const char* dsmrPos = strstr(p1String, \"1-3:0.2.8\");\n    if (dsmrPos != nullptr) {\n        unsigned char version;\n        if (sscanf(dsmrPos, \"1-3:0.2.8(%hhu)\", &version) == 1) {\n            p1Struct->dsmrVersion = formatVersion(version);\n            return;\n        }\n    }\n\n    // Data not available or parsing error\n    p1Struct->dsmrVersion = \"\";\n}",
                                                        "author": {
                                                            "login": "henriterhofte"
                                                        },
                                                        "url": "https://github.com/energietransitie/twomes-p1-reader-firmware/pull/2#discussion_r1218393805",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ddd1518",
                                                            "authoredDate": "2023-06-05T11:50:26Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This assumes all smart meters produce result.dsmrVersion. That is NOT correct.\nI checked all DSMR P1 specs I have and searched for IBIS reference 1-3:0.2.8 (which identifies the code for the DSMR version). Below my results:\n\nDSMR v2.2: not mentioned\nDSMR v3.0: not mentioned\nDSMR v4.0: mentions \"Version information for P1 output: OBIS reference 1-3:0.2.8.255, Value format: S2, tag 9\nDSMR v4.2.2: mentions \"Version information for P1 output: OBIS reference 1-3:0.2.8.255, Value format: S2, tag 9\nDSMR v5.0: mentions \"Version information for P1 output: OBIS reference 1-3:0.2.8.255, Value format: S2, tag 9\nDSMR v5.0.2: mentions \"Version information for P1 output: OBIS reference 1-3:0.2.8.255, Value format: S2, tag 9\n\nIf DSMR meters adhere to spec, this would mean that no data would have been uploaded for all smart meters < DSMR 4.0, wwhich corresponds to at least 14 and at most 23 of the 53 different smart meter types that I am currently aware of...\nSo, you need to fix this and use another field if you want to be sure that you're not uploading total garbage.\nAs far as I can reconstruct quicky, values for OBIS reference 1-0:1.8.1, Meter Reading electricity delivered to client normal tariff, have been present in allP1 port data",
                                                        "author": {
                                                            "login": "henriterhofte"
                                                        },
                                                        "url": "https://github.com/energietransitie/twomes-p1-reader-firmware/pull/2#discussion_r1218413977",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ddd1518",
                                                            "authoredDate": "2023-06-05T11:50:26Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The crirerion by wich you determine based on (minimum) interval times is obscure. Better use a (compile time) calculation in which the baud rate can be found than 'just' a number. More something along the lines of:\nconstexpr int threshold__us = static_cast<int>((1e6 / 9600 + 1e6 / 115200) / 2);\n\nAnd actually, I meant something more general, like the findNearestBaudrate function below:\n#include <iostream>\n#include <vector>\n#include <cmath>\n\nint calculateBitInterval(int baudrate)\n{\n    return 1e6 / baudrate;\n}\n\nint calculateBaudrate(int bitInterval)\n{\n    return 1e6 / bitInterval;\n}\n\nint findNearestBaudRate(const std::vector<int>& candidateBaudRates, int measuredBaudRate)\n{\n    int nearestBaudRate = candidateBaudRates[0];\n    int smallestDifference = std::abs(measuredBaudRate - calculateBitInterval(candidateBaudRates[0]));\n\n    for (int baudRate : candidateBaudRates)\n    {\n        int difference = std::abs(measuredBaudRate - calculateBitInterval(baudRate));\n        if (difference < smallestDifference)\n        {\n            nearestBaudRate = baudRate;\n            smallestDifference = difference;\n        }\n    }\n\n    return nearestBaudRate;\n}\n\nint main()\n{\n    std::vector<int> candidateBaudRates = {9600, 115200};\n    int measuredMinimalBitInterval = 80; // Example measured minimuim bit interval\n\n    // Find the nearest baud rate\n    int nearestBaudRate = findNearestBaudRate(candidateBaudRates, measuredMinimalBitInterval ));\n\n    std::cout << \"Measured Baud Rate: \" << measuredBaudRate << std::endl;\n    std::cout << \"Nearest Baud Rate: \" << nearestBaudRate << std::endl;\n\n    // Rest of your program\n\n    return 0;\n}",
                                                        "author": {
                                                            "login": "henriterhofte"
                                                        },
                                                        "url": "https://github.com/energietransitie/twomes-p1-reader-firmware/pull/2#discussion_r1218574358",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ddd1518",
                                                            "authoredDate": "2023-06-05T11:50:26Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjU=",
                "hasNextPage": false,
                "hasPreviousPage": false,
                "startCursor": "Y3Vyc29yOjE="
            },
            "issueCount": 5
        }
    }
}