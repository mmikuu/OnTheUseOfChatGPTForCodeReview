{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 364,
                        "title": "feat: improve footer",
                        "repository": {
                            "nameWithOwner": "okp4/docs",
                            "primaryLanguage": {
                                "name": "SCSS"
                            }
                        },
                        "createdAt": "2023-12-19T17:49:41Z",
                        "mergedAt": "2024-01-03T14:55:19Z",
                        "url": "https://github.com/okp4/docs/pull/364",
                        "state": "MERGED",
                        "author": {
                            "login": "MdechampG"
                        },
                        "editor": {
                            "login": "coderabbitai"
                        },
                        "body": "This PR aims at improving the footer of the website (navigation, logo, background of light theme). \r\nIt is related to the issue #353 \r\n\r\nStill to be done : center the column -> help needed. \r\n\r\n<img width=\"1437\" alt=\"Capture d\u2019e\u0301cran 2023-12-19 a\u0300 18 47 08\" src=\"https://github.com/okp4/docs/assets/92780073/bcf18438-2056-46dc-b965-ab6dac0fe055\">\r\n\r\n\r\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n## Summary by CodeRabbit\n\n- **Documentation**\n\t- Updated the footer section with new links and sections for improved navigation and resource accessibility.\n\n- **Style**\n\t- Enhanced the footer's visual appeal with a new gradient background.\n\t- Improved the layout of the footer for better alignment and readability using flexbox properties.\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 1\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between d37d1a2 and dc753f8.\n\n\nFiles selected for processing (3)\n\ndocusaurus.config.js (3 hunks)\nsrc/scss/custom.scss (1 hunks)\nsrc/scss/main.scss (1 hunks)\n\n\n\nFiles skipped from review due to trivial changes (2)\n\ndocusaurus.config.js\nsrc/scss/custom.scss\n\n\nAdditional comments: 2\nsrc/scss/main.scss (2)\n\n\n147-147: The use of CSS variables for styling is consistent with the rest of the file, which is good for maintainability and theming.\n\n\n145-153: The changes to the .footer class appear to be isolated and should not conflict with other styles in the file. Ensure that these changes are tested across different browsers and screen sizes to confirm that the centering works as expected.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The CSS properties added to the .footer class are intended to center the content horizontally and vertically. However, the comments in French (/* Cette propri\u00e9t\u00e9 aligne horizontalement */ and /* Cette propri\u00e9t\u00e9 aligne verticalement */) should be translated to English to maintain consistency in code comments, assuming the rest of the codebase uses English for comments.\n-    justify-content: center; /* Cette propri\u00e9t\u00e9 aligne horizontalement */\n-    align-items: center; /* Cette propri\u00e9t\u00e9 aligne verticalement */\n+    justify-content: center; /* This property aligns horizontally */\n+    align-items: center; /* This property aligns vertically */\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                display: flex;\n          \n          \n            \n                justify-content: center; /* Cette propri\u00e9t\u00e9 aligne horizontalement */\n          \n          \n            \n                align-items: center; /* Cette propri\u00e9t\u00e9 aligne verticalement */\n          \n          \n            \n                display: flex;\n          \n          \n            \n                justify-content: center; /* This property aligns horizontally */\n          \n          \n            \n                align-items: center; /* This property aligns vertically */",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/okp4/docs/pull/364#discussion_r1431756866",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "dc753f8",
                                                            "authoredDate": "2023-12-19T17:48:06Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Device\nURL\n\n\n\n\ndesktop\nhttp://localhost:3000/\n\n\n\n    \n\n\n\nDevice\nURL\n\n\n\n\nmobile\nhttp://localhost:3000/\n\n\n\nNot what you expected? Are your scores flaky? GitHub runners could be the cause.\nTry running on Foo instead",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Good point. But I'd go further and delete the comments. They're useless in this context.",
                                                        "author": {
                                                            "login": "ccamel"
                                                        },
                                                        "url": "https://github.com/okp4/docs/pull/364#discussion_r1431853404",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "dc753f8",
                                                            "authoredDate": "2023-12-19T17:48:06Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@ccamel: I agree, the comments explaining the CSS properties justify-content and align-items can be considered common knowledge and thus redundant. Here's the updated code snippet without the comments:\n.footer {\n  background: var(--ifm-footer-background-color-main);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\nThis should make the code cleaner and more in line with standard practices.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/okp4/docs/pull/364#discussion_r1431854143",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "dc753f8",
                                                            "authoredDate": "2023-12-19T17:48:06Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 0\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between d37d1a2 and 9665596.\n\n\nFiles selected for processing (3)\n\ndocusaurus.config.js (3 hunks)\nsrc/scss/custom.scss (1 hunks)\nsrc/scss/main.scss (1 hunks)\n\n\n\nFiles skipped from review due to trivial changes (3)\n\ndocusaurus.config.js\nsrc/scss/custom.scss\nsrc/scss/main.scss",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 0\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between d37d1a2 and da7d430.\n\n\nFiles selected for processing (2)\n\ndocusaurus.config.js (3 hunks)\nsrc/scss/custom.scss (1 hunks)\n\n\n\nFiles skipped from review due to trivial changes (2)\n\ndocusaurus.config.js\nsrc/scss/custom.scss",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 1\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between da7d430 and 1c91c79.\n\n\nFiles selected for processing (2)\n\ndocusaurus.config.js (3 hunks)\nsrc/scss/main.scss (1 hunks)\n\n\n\nFiles skipped from review due to trivial changes (1)\n\nsrc/scss/main.scss\n\n\nAdditional comments: 4\ndocusaurus.config.js (4)\n\n\n156-160: The new logo properties added to the footer object are consistent with the existing code style and correctly formatted.\n\n\n169-184: The additional link items under 'Docs' are correctly formatted and consistent with the existing structure.\n\n\n202-210: The new items added under 'Community' are correctly formatted and consistent with the existing structure.\n\n\n231-241: The new 'Tools' section is correctly formatted and follows the established pattern of the other sections in the footer object.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\ud83d\udca1 NOTE\nCodebase verification is a beta feature.\n\nThe verification of the URLs added to the docusaurus.config.js file has been completed. The results are as follows:\n\nhttps://okp4.network: Passed\nhttps://chat.openai.com/g/g-zUzcYmVbX-okp4-druid-oracle-beta: Failed\nhttps://t.me/okp4network: Passed\nhttps://zealy.io/c/okp4/questboard: Passed\nhttps://explore.okp4.network/OKP4%20testnet: Passed\nhttps://faucet.okp4.network: Failed\n\nBased on the output, two URLs did not pass the check. It is recommended to verify these URLs manually to ensure they are correct and accessible.\n\nThe URL https://chat.openai.com/g/g-zUzcYmVbX-okp4-druid-oracle-beta failed the check and may not be accessible.\nThe URL https://faucet.okp4.network failed the check and may not be accessible.\n\n\nAnalysis chain\n\nNote: This review was outside the patches, so it was mapped to the patch with the greatest overlap. Original lines [156-240]\n\nPlease verify that all new URLs are valid and lead to the intended destinations. This is to ensure that the footer links are functional and do not lead to broken pages.\n\n\nScripts Executed\nThe following scripts were executed for the analysis:\n\nScript:\n#!/bin/bash\n# Verify the URLs added to the footer. Expecting HTTP status 200 for all.\nurls=(\n  'https://okp4.network'\n  'https://chat.openai.com/g/g-zUzcYmVbX-okp4-druid-oracle-beta'\n  'https://t.me/okp4network'\n  'https://zealy.io/c/okp4/questboard'\n  'https://explore.okp4.network/OKP4%20testnet'\n  'https://faucet.okp4.network'\n)\n\nfor url in \"${urls[@]}\"; do\n  if ! curl --output /dev/null --silent --head --fail \"$url\"; then\n    echo \"URL check failed for $url\"\n  else\n    echo \"URL check passed for $url\"\n  fi\ndone\n\nLength of output: 1632",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/okp4/docs/pull/364#discussion_r1432368378",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c91c79",
                                                            "authoredDate": "2023-12-20T07:45:38Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Thanks for reporting. It's under control:\n\nhttps://chat.openai.com/g/g-zUzcYmVbX-okp4-druid-oracle-beta is accessible\nhttps://faucet.okp4.network is indeed down, but we're dealing with it.",
                                                        "author": {
                                                            "login": "ccamel"
                                                        },
                                                        "url": "https://github.com/okp4/docs/pull/364#discussion_r1432425533",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c91c79",
                                                            "authoredDate": "2023-12-20T07:45:38Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@ccamel: Understood, I'm glad to hear that the URL situation is being managed. If there's anything else you need assistance with, feel free to let me know!\n\n\nIf you found this review helpful, would you consider giving us a shout-out on X?\nThank you for using CodeRabbit!",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/okp4/docs/pull/364#discussion_r1432425829",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c91c79",
                                                            "authoredDate": "2023-12-20T07:45:38Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 0\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between da7d430 and ee21879.\n\n\nFiles selected for processing (2)\n\ndocusaurus.config.js (3 hunks)\nsrc/scss/main.scss (1 hunks)\n\n\n\nFiles skipped from review due to trivial changes (1)\n\nsrc/scss/main.scss\n\n\n\nFiles skipped from review as they are similar to previous changes (1)\n\ndocusaurus.config.js",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 0\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between da7d430 and 28c9acb.\n\n\nFiles selected for processing (1)\n\ndocusaurus.config.js (3 hunks)\n\n\n\nFiles skipped from review as they are similar to previous changes (1)\n\ndocusaurus.config.js",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 0\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between 28c9acb and c4b4d29.\n\n\nFiles selected for processing (1)\n\nsrc/scss/main.scss (1 hunks)\n\n\n\nFiles skipped from review as they are similar to previous changes (1)\n\nsrc/scss/main.scss",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 0\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between a53f18a and 84b1f51.\n\n\nFiles selected for processing (2)\n\ndocusaurus.config.js (3 hunks)\nsrc/scss/custom.scss (1 hunks)\n\n\n\nFiles skipped from review due to trivial changes (1)\n\ndocusaurus.config.js\n\n\nAdditional comments: 1\nsrc/scss/custom.scss (1)\n\n39-40: Ensure the new gradient color values for --ifm-footer-background-color-main are consistent with the design specifications and check for potential accessibility issues, such as contrast and readability, especially for users with visual impairments.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 0\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between a53f18a and f1cb4dd.\n\n\nFiles selected for processing (3)\n\ndocusaurus.config.js (3 hunks)\nsrc/scss/custom.scss (1 hunks)\nsrc/scss/main.scss (1 hunks)\n\n\n\nFiles skipped from review due to trivial changes (1)\n\nsrc/scss/main.scss\n\n\n\nFiles skipped from review as they are similar to previous changes (2)\n\ndocusaurus.config.js\nsrc/scss/custom.scss",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "\ud83d\udc4d \ud83d\ude80",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 405,
                        "title": "fix: Add cleanups in device,vlan and ports e2e tests to stabilise the CI pipeline",
                        "repository": {
                            "nameWithOwner": "equinix/metal-cli",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-12-11T20:48:11Z",
                        "mergedAt": "2023-12-18T19:04:38Z",
                        "url": "https://github.com/equinix/metal-cli/pull/405",
                        "state": "MERGED",
                        "author": {
                            "login": "aayushrangwala"
                        },
                        "editor": {
                            "login": "displague"
                        },
                        "body": "fixes https://github.com/equinix/metal-cli/issues/343\r\nfixes https://github.com/equinix/metal-cli/issues/387",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I believe that all of the occurrences of:\nt.Error(err)\nreturn\n\ncan be replaced by the following which provides additional logging context:\nt.Fatal(err)\n\nhttps://pkg.go.dev/testing#T.Fatal",
                                                        "author": {
                                                            "login": "displague"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1425608248",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "578a0a5",
                                                            "authoredDate": "2023-12-13T13:19:15Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "A few more points are discussed here, https://chat.openai.com/share/4d97fa93-08b7-4e4d-8a7c-2343394a6ffe\n\nwe could handle the Close() and remapping of Stdout in a defer call so that it happens in error conditions\nthere are potential error conditions that are not being checked by the tests",
                                                        "author": {
                                                            "login": "displague"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1425616429",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "578a0a5",
                                                            "authoredDate": "2023-12-13T13:19:15Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Let's use the existing GenerateRandomString function (defined above) rather than adding a second function to serve the same purpose.",
                                                        "author": {
                                                            "login": "ctreatma"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1425690277",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "578a0a5",
                                                            "authoredDate": "2023-12-13T13:19:15Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The random string should be generated once at the start of a test, and the same value should be used in all resource names for the test (so the test project and the test devices in that project should have the same random string in their names).",
                                                        "author": {
                                                            "login": "ctreatma"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1425692400",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "578a0a5",
                                                            "authoredDate": "2023-12-13T13:19:15Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The project name prefix here should be passed in, not hard-coded to metal-cli-test-project; I see a couple orphaned projects from these tests, but I can't tell which tests they came from because of the generic prefix.",
                                                        "author": {
                                                            "login": "ctreatma"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1425696908",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "578a0a5",
                                                            "authoredDate": "2023-12-13T13:19:15Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@aayushrangwala good call using t.Cleanup instead of defer. \ud83d\udc4d",
                                                        "author": {
                                                            "login": "displague"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1426728877",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "578a0a5",
                                                            "authoredDate": "2023-12-13T13:19:15Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ah right didnt notice as it recently got merged I guess",
                                                        "author": {
                                                            "login": "aayushrangwala"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1427393975",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "578a0a5",
                                                            "authoredDate": "2023-12-13T13:19:15Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done",
                                                        "author": {
                                                            "login": "aayushrangwala"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1427877700",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "578a0a5",
                                                            "authoredDate": "2023-12-13T13:19:15Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Right. Fixed",
                                                        "author": {
                                                            "login": "aayushrangwala"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1427879480",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "578a0a5",
                                                            "authoredDate": "2023-12-13T13:19:15Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes right. Fixed",
                                                        "author": {
                                                            "login": "aayushrangwala"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1427886518",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "578a0a5",
                                                            "authoredDate": "2023-12-13T13:19:15Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The signature and implementation of this function shouldn't change; it should be used as-is.",
                                                        "author": {
                                                            "login": "ctreatma"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1430368927",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8919638",
                                                            "authoredDate": "2023-12-15T11:48:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "panic: runtime error: slice bounds out of range [:5] with length 4\nThe base64 encoding produces less characters as is unnecessary for this task. Here's a simplified approach that doesn't panic:\nfunc GenerateRandomString(length int) string {\n\tcharSet := \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n\trand.Seed(time.Now().UnixNano()) // seeding could happen outside of this function, in the test runner construction / init\n\tresult := make([]byte, length)\n\tfor i := range result {\n\t\tresult[i] = charSet[rand.Intn(len(charSet))]\n\t}\n\treturn string(result)\n}",
                                                        "author": {
                                                            "login": "displague"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1430375492",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8919638",
                                                            "authoredDate": "2023-12-15T11:48:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The problem with the original function was that it would error out on smaller sized lengths - 5 for example. Somewhere in the history of this PR the random string length was modified from 32 to 5 and the E2E tests started failing.  We have seen more restrictive resource lengths introduced in the EM API, specifically around tags. I don't know if that was a motivation for the initial change.\nOnce the E2E tests started failing, I took a look at what would be needed to fix the base64-based GenerateRandomString function. The complexity hid the problem. As rewritten, the function can not fall into an error condition so the signature was modified to remove the unused error.  If we are ok with accepting that change in this PR, we'll see the echo of that change in this PR.\nhttps://go.dev/play/p/Z2zkdK5lSEU",
                                                        "author": {
                                                            "login": "displague"
                                                        },
                                                        "url": "https://github.com/equinix/metal-cli/pull/405#discussion_r1430516772",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8919638",
                                                            "authoredDate": "2023-12-15T11:48:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "approving contingent on tests (which seem to be stuck)",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 145,
                        "title": "New banner with cards are added to all pages",
                        "repository": {
                            "nameWithOwner": "rohan9024/ecommerce",
                            "primaryLanguage": {
                                "name": "JavaScript"
                            }
                        },
                        "createdAt": "2023-12-14T11:26:27Z",
                        "mergedAt": "2023-12-19T19:32:49Z",
                        "url": "https://github.com/rohan9024/ecommerce/pull/145",
                        "state": "MERGED",
                        "author": {
                            "login": "Sami3160"
                        },
                        "editor": {
                            "login": "Sami3160"
                        },
                        "body": "issue #133 resolved\r\n\r\n-Cards like banners are added on every page, like men, women kids, shoes, sales.\r\n-Banner from all pages are responsive.\r\n-For more 'pluggable look' library is used.\r\n-All Images are good high quality\r\n-5-6 different cards are added as banner with effects and slide animation \r\n-Title and description is meant to be meaningful with images and nav link.\r\n-Every page, every card have unique image, title, description with well relatable meaning...\r\n-On every page changes cards are added, yet code is also kept optimized, with no redundancy.\r\n-Cards can be changed by mouse, or by clicking on a card then using keyboard buttons (to use keyboard focus on card i required)\r\nhere is screenshot of banner cards:\r\n![Screenshot (114)](https://github.com/rohan9024/ecommerce/assets/110652247/597d52d2-ad7d-4654-84e0-89157ef5758b)\r\n-page of shoes section\r\n![Screenshot (115)](https://github.com/rohan9024/ecommerce/assets/110652247/c61fd1b3-99d3-482c-ac77-e65d10e0d3ff)\r\n-responsive testing\r\n![Screenshot (116)](https://github.com/rohan9024/ecommerce/assets/110652247/3dd29278-93a9-44d0-87d5-41454acfc616)\r\n![Screenshot (117)](https://github.com/rohan9024/ecommerce/assets/110652247/d53b18bc-d67b-4eba-a25f-35667e7f462a)\r\n-Can change the the cards as slides by both mouse and keyboard \r\n![Screenshot (118)](https://github.com/rohan9024/ecommerce/assets/110652247/80032e13-e856-43f1-8436-9f217ab20a4d)\r\n\r\n\r\nplease do check my pr, it was soo hard as react newbie \ud83d\ude05but it was so fun also\ud83d\ude01",
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 1061,
                        "title": "CC-859 add stripe invoice details",
                        "repository": {
                            "nameWithOwner": "codecrafters-io/frontend",
                            "primaryLanguage": {
                                "name": "JavaScript"
                            }
                        },
                        "createdAt": "2023-12-08T03:22:16Z",
                        "mergedAt": "2023-12-13T16:35:11Z",
                        "url": "https://github.com/codecrafters-io/frontend/pull/1061",
                        "state": "MERGED",
                        "author": {
                            "login": "libmartinito"
                        },
                        "editor": {
                            "login": "libmartinito"
                        },
                        "body": "**Checklist**:\r\n\r\n- [x] I've thoroughly self-reviewed my changes\r\n- [x] I've added tests for my changes, unless they affect admin-only areas (or are otherwise not worth testing)\r\n- [x] I've verified any visual changes using Percy (add a commit with `[percy]` in the message to trigger)\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              @tracked isExtraInvoiceDetailsRequested = false;\n          \n          \n            \n              @tracked extraInvoiceDetailsRequested = false;",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420466104",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Our naming pattern is to use handleClick for handlers within the class, and @onClick for args - to be consistent I'd name this arg @onStartMembershipButtonClick",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420469067",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Let's add a space between the service declarations and the rest (not sure how we ended up without it here)",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420470335",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Bad naming, this should be something like selectedPricingFrequency.\nReasoning: https://chat.openai.com/share/d668d64c-182e-4e9d-8e17-6517d91fc65e\n@libmartinito we don't seem to be getting better with naming - I'd strongly suggest spending more time on this. Read books, talk to chatgpt about it, try to identify cases where our naming is wrong and ask me clarifying questions, do whatever it takes - usually these problems go away in a couple of months, doesn't seem to be happening so we need to pay extra attention to it",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420472117",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                    @handleStartMembershipButtonClick={{this.handleStartMembershipButtonClick}}\n          \n          \n            \n                    @onStartMembershipButtonClick={{this.handleStartMembershipButtonClick}}",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420477957",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Feel like this whole function could be far simpler:\nreturn {\n  pricingFrequency: this.selectedPricingFrequency,\n  regionalDiscount: this.shouldApplyRegionalDiscount ? this.model.regionalDiscount : null,\n  earlyBirdDiscountEnabled: this.selectedPricingFrequency == \"yearly\" && this.user.isEligibleForEarlyBirdDiscount,\n  referralDiscountEnabled: this.selectedPricingFrequency == \"yearly\" && this.user.isEligibleForReferralDiscount\n}",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420511531",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 22,
                        "title": "ODY-276 About\u30da\u30fc\u30b8\u306e\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u5bfe\u5fdc",
                        "repository": {
                            "nameWithOwner": "daydule/odyssey-frontend",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-12-16T02:35:41Z",
                        "mergedAt": "2023-12-27T12:46:54Z",
                        "url": "https://github.com/daydule/odyssey-frontend/pull/22",
                        "state": "MERGED",
                        "author": {
                            "login": "atoook"
                        },
                        "editor": {
                            "login": "atoook"
                        },
                        "body": "# \u4e8b\u524d\u78ba\u8a8d\r\n\r\n- [x] PR\u524d\u306b\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u305f\u304b\r\n- [x] \u6a5f\u5bc6\u60c5\u5831\u3092\u542b\u3093\u3067\u3044\u306a\u3044\u304b\r\n- [x] [\u958b\u767a\u30eb\u30fc\u30eb](https://daydule.atlassian.net/wiki/spaces/DAYDULE/pages/9765029)\u3092\u5b88\u3063\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u304b\r\n- [x] \u5358\u4f53\u30c6\u30b9\u30c8\u304c\u5168\u3066OK\u306b\u306a\u3063\u3066\u3044\u308b\u304b\uff08\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5834\u5408SKIP\uff09\r\n- [x] \u6700\u65b0\u306e`develop`\u30d6\u30e9\u30f3\u30c1\u3092\u53cd\u6620\u3057\u3066\u3044\u308b\u304b\r\n- [x] \u30d3\u30eb\u30c9\u30a8\u30e9\u30fc/ESLint\u30a8\u30e9\u30fc\u306f\u8d77\u304d\u3066\u3044\u306a\u3044\u304b\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u512a\u5148\u5ea6\uff08\u3069\u308c\u304b\u4e00\u3064\uff09\r\n\r\n- [ ] \u3059\u3050\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] 3\u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] 7\u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u306e\u5ea6\u5408\u3044\r\n\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3057\u3063\u304b\u308a\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30ef\u30fc\u306b\u3088\u308b\u52d5\u4f5c\u78ba\u8a8d\r\n\r\n- [ ] @tom-takeru \r\n- [ ] @Mellbrother \r\n- [ ] @kzk27 \r\n\r\n# \u3084\u3063\u305f\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n- \u4ee5\u4e0b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u5bfe\u5fdc\r\n AboutCardWithImage\r\n AboutCardWithText\r\n- AboutCardWithImage\u306eisImageLeft Props\u3092\u524a\u9664\u3057\u3066\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u81ea\u4f53\u3092Left/Right\u306b\u5206\u5272\uff08\u4f1a\u8b70\u3067\u5171\u6709\u6e08\uff09\r\n \u203b\u7406\u7531\uff11\uff1a\u753b\u9762\u30b5\u30a4\u30ba\u53d6\u5f97\u5f8c\u306bisImageLeft\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u51fa\u3057\u308f\u3051\u3057\u3088\u3046\u3068\u3059\u308b\u3068ssr\u51fa\u6765\u306a\u304f\u306a\u308b\u305f\u3081\r\n \u203b\u7406\u7531\uff12\uff1aAboutCardWithImage\u3092csr\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3068\u3053\u308d\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9NG\u304c\u89e3\u6d88\u3067\u304d\u306a\u304b\u3063\u305f\u305f\u3081 \r\n\r\n# \u3084\u3089\u306a\u3044\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u3066\u3082\u304a\u304b\u3057\u304f\u306a\u3044\u3051\u3069\u3084\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u304a\u3051\u308b\u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u305d\u306e\u4ed6<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u4e0a\u8a18\u306e\u9805\u76ee\u4ee5\u5916\u306b\u4f1d\u3048\u308b\u3079\u304d\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "\u4ee5\u4e0b\u3092\u5225\u30c1\u30b1\u30c3\u30c8\u3067\u5bfe\u5fdc\u3059\u308b\u5206\u3068\u3057\u3066\u8d77\u7968\u3057\u307e\u3057\u305f\uff01\n\u3053\u306ePR\u304c\u30de\u30fc\u30b8\u3055\u308c\u3066\u304b\u3089\u3001\u3069\u3053\u304b\u3067\u512a\u5148\u5ea6\u3092\u898b\u3066\u3084\u308a\u307e\u3057\u3087\u3046\uff01\n\u672cPR\u3067\u5bfe\u5fdc\u53ef\u80fd\u3067\u3057\u305f\u3089\u3001\u5bfe\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u30c1\u30b1\u30c3\u30c8\u3092\u524a\u9664\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\uff01\n\nAboutCardWithText.tsx\u3000\u304c\u30e2\u30d0\u30a4\u30eb\u306e\u6642\u306b\u753b\u9762\u3044\u3063\u3071\u3044\u306b\u5e83\u304c\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u4fee\u6b63\nAboutCardWith(Right/Left).stories.tsx\u306b\u30b9\u30de\u30db\u5e45\u3067\u306e\u30b9\u30c8\u30fc\u30ea\u3092\u8ffd\u52a0\n\n1\u306b\u3064\u3044\u3066",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u3053\u308c\u3063\u3066\u306a\u3093\u306e\u305f\u3081\u306b\u5165\u308c\u305f\u3093\u3067\u3059\u304b\uff1f",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436242042",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ChatGPT\u306b\u8cea\u554f\u3060\u3051\u3057\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u3001\u77e5\u3089\u3093\u3068\u8a00\u308f\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3001\u3001\u3001\u3002\nhttps://chat.openai.com/share/adc90fb5-54c2-4f1c-8b17-e2928e556b02",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436248823",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@tom-takeru\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b.tsx\u306e\u62e1\u5f35\u5b50\u3092\u3064\u3051\u3066import\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u3059\u304c\uff08\u4fee\u6b63\u524d\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u8ffd\u52a0\u3057\u305f\u8a18\u61b6\u304c\u3042\u308a\u307e\u3059\uff09\u304c\u3001\u4e0d\u8981\u306a\u306e\u3067\u524a\u9664\u3057\u307e\u3059\u3002\nimport { XXX } from 'XXXX.tsx';",
                                                        "author": {
                                                            "login": "atoook"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436360202",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM\uff01 \ud83d\udc24",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 114,
                        "title": "Show info header only on first command",
                        "repository": {
                            "nameWithOwner": "shakacode/heroku-to-control-plane",
                            "primaryLanguage": {
                                "name": "Ruby"
                            }
                        },
                        "createdAt": "2023-11-20T17:21:04Z",
                        "mergedAt": "2023-12-01T20:44:33Z",
                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114",
                        "state": "MERGED",
                        "author": {
                            "login": "ahangarha"
                        },
                        "editor": null,
                        "body": "\r\n---\r\nCloses #111 ",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Is this the best way to do this? In other places, we use instance/class variables:",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1403334504",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4cfaf11",
                                                            "authoredDate": "2023-11-20T17:18:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I am not happy about it either but this was the only way I could implement it.\nI tried this at first. But when we run a command (run CLI start method) in another command, we get into a new instance, and we don't have access to the earlier instance variables.",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1404562743",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4cfaf11",
                                                            "authoredDate": "2023-11-20T17:18:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This raises a WTF...\nWhere in the world did you get the ObjectSpace idea?\nCounting object instances is a total hack.\nYou could probably set a static counter on or boolean on the CPL class. In other words, instance variable on the class, not the instance.\nUse a class instance variable (aka static) on the cpl class.\nhttps://chat.openai.com/share/e62c8db1-0622-4617-b8a6-5c3a4d82f387",
                                                        "author": {
                                                            "login": "justin808"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1404708568",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4cfaf11",
                                                            "authoredDate": "2023-11-20T17:18:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\"already\" feels redundant. showed_info_header already gets the point across.",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1405147053",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Can we not just call show_info_header directly without Cpl::Cli, since we're inside of the class?",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1405147230",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "No.\nIt seems we are defining instance methods for each command. If we want to call static methods from instance methods, we must prefix it with the class. This confusion was one of the reasons I tried to find another way to implement this feature.\nI can replace Cpl::Cli with self.class, but I think this is clearer.",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1405348325",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Looks good to me, just one thing I missed about initializing the variable, but no need for re-review.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We don't need to initialize it.",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406016725",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "77ddae2",
                                                            "authoredDate": "2023-11-26T08:10:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "You're right.\nMaybe it would be even better to move show_info_header to a helper then, because it would be easier to call it. But the current way works too, so up to you. I'll approve the PR.",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406017865",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Since we use it once, let's keep it here. Let's move it there when we need to. Agree?",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406463687",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done! I removed it.\nI thought an explicit default value assignment would be better.",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406469550",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "77ddae2",
                                                            "authoredDate": "2023-11-26T08:10:21Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 52,
                        "title": "Voice functionality added with Whisper",
                        "repository": {
                            "nameWithOwner": "OthersideAI/self-operating-computer",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-12-01T21:33:58Z",
                        "mergedAt": "2023-12-05T14:15:44Z",
                        "url": "https://github.com/OthersideAI/self-operating-computer/pull/52",
                        "state": "MERGED",
                        "author": {
                            "login": "younesbram"
                        },
                        "editor": null,
                        "body": "Added voice functionality with whisper. Implemented a `--voice` command-line flag using `argparse`.\r\n",
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 904,
                        "title": "\u6574\u7406: \u7591\u554f\u5f62 upspeak \u306e\u5358\u7d14\u5316",
                        "repository": {
                            "nameWithOwner": "VOICEVOX/voicevox_engine",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-12-19T08:22:22Z",
                        "mergedAt": "2023-12-21T05:24:41Z",
                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904",
                        "state": "MERGED",
                        "author": {
                            "login": "tarepan"
                        },
                        "editor": {
                            "login": "tarepan"
                        },
                        "body": "## \u5185\u5bb9\r\n\u6982\u8981: \u7591\u554f\u5f62 upspeak \u51e6\u7406\u306e\u5358\u7d14\u5316\u306b\u3088\u308b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0  \r\n\r\n\u30cd\u30b9\u30c8\u306e\u89e3\u6d88\u30fb\u51e6\u7406\u306e\u7c21\u7d20\u5316\u306b\u3088\u3063\u3066\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3092\u304a\u3053\u306a\u3063\u305f\u3002  \r\n\r\n## \u95a2\u9023 Issue\r\npart of #897\r\n\r\n## Reviewer \u5411\u3051\u60c5\u5831\r\n3\u3064\u306e\u95a2\u6570\u30cd\u30b9\u30c8\u3092\u524a\u9664\u3057\u305f\u305f\u3081\u3001diff \u304c\u6a5f\u80fd\u3057\u3066\u3044\u307e\u305b\u3093\u3002  \r\ncommit \u3054\u3068\u306b 1 \u3064\u306e\u95a2\u6570\u3092\u524a\u9664\u3057\u305f\u305f\u3081\u3001\u30ec\u30d3\u30e5\u30fc\u6642\u306b\u306f commit log \u3092\u53c2\u7167\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002  ",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u3053\u306e\u5909\u66f4\u3067\u3059\u304c\u3001\u4e00\u822c\u7684\u306b\u306f\u95a2\u6570\u5074\u306b\u30d5\u30e9\u30b0\u3092\u4e0e\u3048\u3066\u3069\u3046\u3059\u308b\u304b\u3092\u59d4\u306d\u308b\u3088\u308a\u3082\u3001\u5358\u4e00\u51e6\u7406\u3092\u884c\u3046\u95a2\u6570\u306b\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u3055\u308c\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nChatGPT\u306b\u4e21\u8005\u306e\u30e1\u30ea\u30c3\u30c8\u3092\u805e\u3044\u3066\u307f\u305f\u611f\u3058\u3001\u3053\u306e\u8fd4\u7b54\u304c\u81ea\u5206\u306e\u8003\u3048\u3068\u8fd1\u304b\u3063\u305f\u3067\u3059\u3002\nhttps://chat.openai.com/share/cb0a7a43-fbff-4876-801a-921c90ed5618\n\u4f55\u304b\u3053\u3046\u3057\u3066\u3044\u308b\u610f\u56f3\u304c\u3042\u308c\u3070\u77e5\u308a\u305f\u3044\u3067\u3059\uff01",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433359944",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u4e00\u822c\u7684\u306b\u306f ... \u5358\u4e00\u51e6\u7406\u3092\u884c\u3046\u95a2\u6570\u306b\u3059\u308b\u306e\u304c\u826f\u3044\n\n\ud83d\udc4d\n\u4e00\u822c\u8ad6\u3068\u3057\u3066\u540c\u610f\u3067\u3059\u3002\n\n\u3053\u3046\u3057\u3066\u3044\u308b\u610f\u56f3\u304c\u3042\u308c\u3070\n\n\u300cupspeak \u9069\u7528\u6709\u7121\u542b\u3081\u3066 1 \u6a5f\u80fd\u3068\u307f\u306a\u3057\u3001\u53b3\u5bc6\u306b\u30c6\u30b9\u30c8\u3067\u304d\u308b\u304b\u3089\u300d\u304c\u610f\u56f3/\u7406\u7531\u3067\u3059\u3002\n\u73fe\u5728\u306e test_synthesis_engine_base.py \u3067\u306f spy \u306b\u7528\u3044\u3066 .synthesis() \u306e\u4e00\u90e8\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n  \n    \n      voicevox_engine/test/test_synthesis_engine_base.py\n    \n    \n        Lines 214 to 218\n      in\n      831d28a\n    \n  \n  \n    \n\n        \n          \n           self.synthesis_engine.synthesis( \n        \n\n        \n          \n               query, 0, enable_interrogative_upspeak=enable_interrogative_upspeak \n        \n\n        \n          \n           ) \n        \n\n        \n          \n           # _synthesis_impl\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u4e0e\u3048\u3089\u308c\u305fquery\u3092\u691c\u8a3c \n        \n\n        \n          \n           actual = self.synthesis_engine._synthesis_impl.call_args[0][0].accent_phrases \n        \n    \n  \n\n\n\n  \n    \n      voicevox_engine/test/test_synthesis_engine_base.py\n    \n    \n        Lines 255 to 259\n      in\n      831d28a\n    \n  \n  \n    \n\n        \n          \n           self.create_synthesis_test_base( \n        \n\n        \n          \n               text=\"\u3053\u308c\u306f\u3042\u308a\u307e\u3059\u304b\uff1f\", \n        \n\n        \n          \n               expected=expected, \n        \n\n        \n          \n               enable_interrogative_upspeak=False, \n        \n\n        \n          \n           ) \n        \n    \n  \n\n\n\u3053\u306e\u30c6\u30b9\u30c8\u5bfe\u8c61\u9818\u57df\u304c\u300cupspeak \u9069\u7528\u6709\u7121 + upspeak\u9069\u7528\u300d\u3064\u307e\u308a\u4eca\u56de\u5207\u308a\u51fa\u3055\u308c\u305f apply_interrogative_upspeak() \u306b\u76f8\u5f53\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u73fe\u5728\u306e\u30c6\u30b9\u30c8\u3067\u306f\u3053\u306e\u30b3\u30fc\u30c9\u3092 enable_interrogative_upspeak \u30d5\u30e9\u30b0\u5024\u3092\u5909\u3048\u306a\u304c\u3089\u5e45\u5e83\u3044\u30d1\u30bf\u30fc\u30f3\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5e45\u5e83\u3055\u306fupspeak\u6709\u7121\u306e\u30d0\u30b0\u304c\u54c1\u8cea\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u305f\u3081\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n#899 \u3067\u8b70\u8ad6\u3055\u308c\u305f\u3088\u3046\u306b .synthesis() \u306e\u5165\u529b\u8a2d\u5b9a\u5168\u30d1\u30bf\u30fc\u30f3\u30c6\u30b9\u30c8\u306f\u4e0d\u53ef\u80fd\u3067\u3059\u3002\n\u3053\u308c\u304c\u7406\u7531\u3067\u3001\u30d5\u30e9\u30b0\u3092\u5916\u306b\u51fa\u3059\u3068\u73fe\u884c\u306e\u300cenable_interrogative_upspeak \u30d5\u30e9\u30b0\u5024\u3092\u5909\u3048\u306a\u304c\u3089\u5e45\u5e83\u3044\u30d1\u30bf\u30fc\u30f3\u300d\u3092\u6368\u3066\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\nenable_interrogative_upspeak \u30d5\u30e9\u30b0\u3092 upspeak \u91cf\u3092\u8abf\u6574\u3059\u308b\u4f55\u304b\u3068\u898b\u505a\u3057\u3066\u3057\u307e\u3048\u3070\u3001apply_interrogative_upspeak() \u306e\u5f15\u6570\u306b\u8abf\u6574\u8a2d\u5b9a\u5024\u304c\u5165\u308b\u306e\u306f\u305d\u3053\u307e\u3067\u9055\u548c\u611f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3088\u3063\u3066 upspeak\u9069\u7528\u6709\u7121\u542b\u3081\u3066 1 \u6a5f\u80fd\u3068\u307f\u306a\u3059\u306e\u306f\uff08\u5c11\u306a\u304f\u3068\u3082\uff09\u304a\u304b\u3057\u306a\u3053\u3068\u3067\u306f\u306a\u304f\u3001\u4ed6\u306e\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8\u3067\u30d5\u30e9\u30b0\u3092\u5f15\u6570\u306b\u3059\u308b\u304b\u5426\u304b\u6c7a\u3081\u3066\u826f\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u89b3\u70b9\u3092\u7dcf\u5408\u3057\u305f\u7d50\u679c\u3001\u9069\u7528\u6709\u7121\u542b\u30811\u6a5f\u80fd\u3068\u898b\u505a\u3057\u3066\u73fe\u884c\u306e\u5e45\u5e83\u3044\u30c6\u30b9\u30c8\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u6700\u5584\u3068\u8003\u3048\u3001\u4e00\u822c\u8ad6\u3068\u306f\u7570\u306a\u308b\u5207\u308a\u51fa\u3057\u65b9\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u8ffd\u8a18:\n\u5c06\u6765\u306e\u65b9\u5411\u6027\u3068\u3057\u3066\u3001\n\n#897 \u304c\u9032\u884c\u3057\u3066 .synthesis() \u3068 ._synthesis_impl() \u304c\u7d71\u5408\nquery_to_decoder_feature() \u5185\u3078\u672c PR \u306e apply_interrogative_upspeak() \u3092\u79fb\u690d\n\u4ed6\u306e apply \u95a2\u6570\u9054\u3068\u4e26\u3076\n\n\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\uff08\u4e0b\u30b3\u30fc\u30c9\u306f\u6700\u7d42\u72b6\u614b\u306e\u30a4\u30e1\u30fc\u30b8\uff09\ndef query_to_decoder_feature(query) -> tuple[ndarray, ndarray]:\n    accent_phrases = query.accent_phrases\n    # \u8a2d\u5b9a\u3092\u9069\u7528\u3059\u308b\n    accent_phrases = apply_interrogative_upspeak(accent_phrases, query) # query\u5185upspeak\u30d5\u30e9\u30b0\n    moras = apply_prepost_silence(to_flatten_moras(accent_phrases), query)\n    moras = apply_speed_scale(moras, query)\n    moras = apply_pitch_scale(moras, query)\n    ...",
                                                        "author": {
                                                            "login": "tarepan"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433424756",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u306a\u308b\u307b\u3069\u3067\u3059\uff01\uff01\n\u5c11\u306a\u304f\u3068\u3082\u4eca\u306ePR\u306eapply_interrogative_upspeak\u95a2\u6570\u306f\u3001query\u30af\u30e9\u30b9\uff08\u3064\u307e\u308a\u95a2\u6570\u306e\u8cac\u52d9\u7bc4\u56f2\u5916\uff09\u306benable_interrogative_upspeak\u304c\u3042\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u306a\u3044\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u3060\u3051\u898b\u305f\u5834\u5408\u306b\u3001\u306a\u305c\u3053\u306e\u30d5\u30e9\u30b0\u304c\u3042\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u306a\u3068\u3002\nquery\u305d\u306e\u3082\u306e\u3092\u6e21\u3059\u8a2d\u8a08\u3092\u4e88\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u8a71\u306f\u5225\u3067\u3057\u305f\u3002\u3044\u3063\u305f\u3093NOTE\u30b3\u30e1\u30f3\u30c8\u304c\u6709\u308b\u3068\u826f\u3044\u306e\u304b\u306a\u3068\uff01\n\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u30de\u30fc\u30b8\u3055\u305b\u3066\u3044\u305f\u3060\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff01",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433522317",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                \"\"\"\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5404\u30a2\u30af\u30bb\u30f3\u30c8\u53e5\u306e\u672b\u5c3e\u3078\u7591\u554f\u5f62\u30e2\u30fc\u30e9\uff08\u540c\u4e00\u6bcd\u97f3\u30fb\u7d99\u7d9a\u9577 0.15\u79d2\u30fb\u97f3\u9ad8\u2191\uff09\u3092\u4ed8\u4e0e\u3059\u308b\"\"\"\n          \n          \n            \n                \"\"\"\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5404\u30a2\u30af\u30bb\u30f3\u30c8\u53e5\u306e\u672b\u5c3e\u3078\u7591\u554f\u5f62\u30e2\u30fc\u30e9\uff08\u540c\u4e00\u6bcd\u97f3\u30fb\u7d99\u7d9a\u9577 0.15\u79d2\u30fb\u97f3\u9ad8\u2191\uff09\u3092\u4ed8\u4e0e\u3059\u308b\"\"\"\n          \n          \n            \n                # NOTE: \u5c06\u6765\u7684\u306bAudioQuery\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f15\u6570\u306b\u3059\u308b\u4e88\u5b9a",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433523753",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM\uff01\uff01\uff01",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 122355,
                        "title": "Kube-proxy/nftables: allow \"numgen inc\"",
                        "repository": {
                            "nameWithOwner": "kubernetes/kubernetes",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-12-17T10:03:18Z",
                        "mergedAt": null,
                        "url": "https://github.com/kubernetes/kubernetes/pull/122355",
                        "state": "CLOSED",
                        "author": {
                            "login": "uablrek"
                        },
                        "editor": {
                            "login": "uablrek"
                        },
                        "body": "This makes the nftables proxier distribute traffic in the same way as proxy-mode=ipvs with the \"rr\" scheduler\r\n\r\n\r\n#### What type of PR is this?\r\n\r\n/kind feature\r\n/sig network\r\n/area kube-proxy\r\n\r\n#### What this PR does / why we need it:\r\n\r\nExisting users of proxy-mode=ipvs may feel more comfortable if they can keep the round-robin distribution when upgrading to proxy-mode=nftables.\r\n\r\nIt should be noted that the same limitation applied for nftables with \"random inc\" as for ipvs/rr: the individual kube-proxy instances on the nodes are not coordinated, but distribute individually. And different schedulers are not possible, as in \"ipvs\".\r\n\r\n#### Which issue(s) this PR fixes:\r\n\r\nN/A\r\n\r\n#### Special notes for your reviewer:\r\n\r\nFor start this is a PoC.\r\n\r\nA more suitable name than `numgen` should probably be used in the proxier structure. Trying to look into the future, one might expect some new features in nftables, like maglev-hashing\", and make it possible to configure those future things without altering the config API, just use a new value for some distribution parameter.\r\n\r\n#### Does this PR introduce a user-facing change?\r\n\r\n```release-note\r\nAllow users to configure the distribution in proxy-mode=nftables to mimic proxy-mode=ipvs with round-robin\r\n```\r\n\r\n#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:\r\n\r\n\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "is the plan to make this a configuration option like in ipvs?\n\t// scheduler is the IPVS scheduler to use\n\tScheduler string `json:\"scheduler\"`",
                                                        "author": {
                                                            "login": "aojea"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430695581",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "this is going to be a bit of bikeshedding, but random seems to be a better default since is the one used by cilium and kube-proxy iptables, that I are used more than ivps https://gist.github.com/aojea/5f82db3ba5f1efd59bb73f4b28614a6a",
                                                        "author": {
                                                            "login": "aojea"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430698073",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I kind of agree. Random is random, but people expect too much of other schedulers, even \"rr\". Like the endless discussion of \"initial distribution\", mentioned for instance in #121591 (comment). Even maglev-hashing doesn't work out-of-the-box in the way people expect.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430938479",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "No plan at the moment. I just read the nft doc's and saw that it can be done. Easily.\nBut I can't say I have any strong opinions about it, except that is may make some current users of ipvs more comfortable with the upgrade as mentioned in the description. But people may select ipvs for other reasons than \"rr\", e.g. get rid of the \"probability chain\" in iptables, that can look horrible for many endpoints, or simply that they know ipvs and it's easier to understand (my case). Or they want another scheduler, which can't be supported by nftables anyway.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430943279",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I made some experiments of my own with K8s load-balancing, but without any http considerations, only plain tcp connects, at: https://github.com/uablrek/xcluster-ovls/tree/main/k8s-load-balancing\nThe hardest part was to create the table with Unix/Linux commands, please see:\nhttps://github.com/uablrek/xcluster-ovls/blob/510cca913b632ae0a8506c45bf69d92bc1e6373e/k8s-load-balancing/k8s-load-balancing.sh#L72",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430954376",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "But yes, my thought was a config option.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431253807",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ChatGPT thinks IPTables proxy uses round-robbin algorithm, directing new requests to next destination in the list of pods.  Maybe that is what people think/expect in general - round-robin rather than random \ud83e\udd14\nhttps://chat.openai.com/share/20271990-883b-476b-b5b0-3c2d2b7efbaf",
                                                        "author": {
                                                            "login": "aroradaman"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431275620",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It should be configurable. For now random, round-robin and hash could be supported, https://wiki.nftables.org/wiki-nftables/index.php/Load_balancing. I think someone out there is already implementing maglev-hashing. But it may be a good idea to keep it simple, and just do random. After all, it has worked fine for the vast majority of K8s users.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431346263",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I advocate for trying to keep the same behavior as in iptables, but @danwinship is leading this feature, let's see what he thinks",
                                                        "author": {
                                                            "login": "aojea"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431510065",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 11308,
                        "title": "AGDR/ Configure Overview section",
                        "repository": {
                            "nameWithOwner": "empirical-org/Empirical-Core",
                            "primaryLanguage": {
                                "name": "Ruby"
                            }
                        },
                        "createdAt": "2023-12-05T22:07:43Z",
                        "mergedAt": "2023-12-07T22:05:37Z",
                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308",
                        "state": "MERGED",
                        "author": {
                            "login": "eadams17"
                        },
                        "editor": null,
                        "body": "## WHAT\r\nconfigure Overview section of the Admin Growth Diagnostic Reports to aggregate and display data from the backend\r\n\r\n## WHY\r\nnow that the necessary APIs are available, we want to configure them to feed into the frontend UI\r\n\r\n## HOW\r\n- add a bunch of logic for making the various API calls and then aggregating the data once they are all receive\r\n- update styling of the table\r\n\r\n**just a note that there are quite a few snapshots that were updated-- this is because I moved the `DataTable` header name inside of a <span> element for more styling flexibility**\r\n\r\n### Screenshots\r\n(If applicable. Also, please censor any sensitive data)\r\n<img width=\"1422\" alt=\"Screen Shot 2023-12-05 at 2 49 46 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/04015b1e-0b4d-4f12-b929-5dbbfc929931\">\r\n<img width=\"1087\" alt=\"Screen Shot 2023-12-05 at 2 49 58 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/ccfd416e-a64a-4afc-888b-2f869cbc984b\">\r\n<img width=\"1074\" alt=\"Screen Shot 2023-12-05 at 2 51 55 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/4cfc973f-8191-47f0-8a9d-7610cf29aa77\">\r\n<img width=\"1091\" alt=\"Screen Shot 2023-12-05 at 2 52 25 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/26929dfe-fc77-4635-8ef1-ffca074d19a5\">\r\n<img width=\"1412\" alt=\"Screen Shot 2023-12-05 at 2 52 57 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/fc9a645b-0256-4768-90e6-5b45bdb4bbcf\">\r\n\r\n### Notion Card Links\r\n(Please provide links to any relevant Notion card(s) relevant to this PR.)\r\nhttps://www.notion.so/quill/Admin-Diagnostic-Growth-Report-Overview-Frontend-8e22794d03f345af85b1d95a62e77098?pvs=4\r\n\r\nPR Checklist | Your Answer\r\n------------ | -------------\r\nHave you added and/or updated tests? |  yes\r\nHave you deployed to Staging? | yes\r\nSelf-Review: Have you done an initial self-review of the code below on Github? | yes\r\nSpec Review: Have you reviewed the spec and ensured this meets requirements and/or matches design mockups? | yes",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@anathomical I noticed this misspelling-- is there anywhere else I need to worry about updating this value? (I already updated the PUSHER_EVENT_KEY in the OverviewSection frontend file and didn't find anywhere else when searching the codebase, but I wanted to check with you just to be sure)",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1416344668",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I was trying to use the passedData convention we use in some other test files to stub the incoming data(i.e. https://github.com/empirical-org/Empirical-Core/blob/07fc91f79f408045129e496356cb61dddfb2842c/services/QuillLMS/client/app/bundles/PremiumHub/components/canvas/container.tsx#L13), but I kept hitting some issues. Since this is time sensitive and I want to give Peter S the chance to start testing ASAP, I opted to punt on adding more thorough testing in a later PR.",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1416348676",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@eadams17 Good catch.  I think those should be the only two places where that value is defined: once on the front-end and once on the back-end.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417732205",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "There's a lot of really good work in here -- just a couple of places I think we need to clean things up before they're ready to go to production.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think I would just write this as .timeframe-filter.disabled .dropdown .dropdown__control .dropdown__value-container .dropdown__single-value { color: #7f7f7f } to avoid all the nesting. Also, should that color be a variable?",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417651242",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I'm okay with it not being in this PR, but I think it should probably be the next one (can you work on the tests while Peter Sharkey does his review?)",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417657186",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This function is really hard for me to parse. I think we need to split out some interior functions and work on formatting for readability. I think this is a good use case for getting help from ChatGPT -- here's an initial stab at it that might be useful: https://chat.openai.com/c/97307d69-7fcd-4b56-9c38-f8e884c5be4d. I think we also probably want some tests specific to this method (the same way we would about this object if it were being sent up from a controller).",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417665504",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\"our guide\" is duplicated in the last sentence on this line.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417667771",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "All the ternary logic in here is effectively duplicated and feels a little messy. I think we should do something like:\nconst performanceButtons = [\n  {\n    tab: OVERVIEW,\n    displayName: 'Performance Overview',\n    inactiveIconSrc: barChartGreySrc,\n    activeIconSrc: barChartWhiteIconSrc\n  },\n  ...\n]\n\nThen iterate through each of them to generate the button elements in their own function.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417673394",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Should these querystrings be constants?",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417678006",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Love the clean up here.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417745706",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "It would be good to have these numbers as constants so it's clear what they mean.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417746192",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "A couple of minor notes, but overall this looks good to me.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "If we're going to leave this commented out after a merge, we should probably add a // TODO:  note to make it easier to find this later.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417736447",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think you can use toString().padLeft(2, '0') instead of adding these if length === 1 conditions.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417743304",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think this conditional is fine as-is, but as far as I know it should be impossible for a row to have a postDiagnosticScore but not a preDiagnosticScore, so I think practically speaking you can just make this if (!postDiagnosticScore) if you wanted, but like I said, it's fine as-is.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417762704",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Totally dig these as constants.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417808774",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Given that all of these widths seem to be the same value, I wonder if this shouldn't also be a constant even if it's not from a shared file??",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417809595",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "So this isn't currently in the back-end, but reviewing this suggests to me that we should also have groupByValue in here.  Let's just do that in a separate PR, though, to avoid adding complexity to this one.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417816161",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "good call! I'll update. I already flagged the hex code to Jack so that he can map it to a variable so just waiting for that (it's used quite a bit around the codebase)",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418165632",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "love that suggestion-- I'll make this update",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418173696",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "yeah, I can make these constants",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418175049",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "that makes sense-- I'll update to be more succinct",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418181270",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "sounds good to me!",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418183358",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@emilia-friedberg I can't seem to access the link-- can you maybe send the prompt you inputted so I can have better context?",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418188924",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "The refactor you did with that function is so much easier to parse (and will be easier to debug if we ever need to now) -- beautiful work! Love the tests, too. I flagged one small thing I think may have been an error in the refactor but I don't need to review again. Thank you so much for doing all that. Excited to see this ship!",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "love these tests!",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1419674860",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ec943c8",
                                                            "authoredDate": "2023-12-07T19:06:19Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "should these two have activeTab === tab as the condition instead of tab === OVERVIEW?",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1419676648",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ec943c8",
                                                            "authoredDate": "2023-12-07T19:06:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ahh yeah, good catch! I had resolved it in my other branch but not here",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1419700208",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ec943c8",
                                                            "authoredDate": "2023-12-07T19:06:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjQw",
                "hasNextPage": true,
                "hasPreviousPage": true,
                "startCursor": "Y3Vyc29yOjMx"
            },
            "issueCount": 54
        }
    }
}