{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 4,
                        "title": "Fixing missing protocol in the address",
                        "repository": {
                            "nameWithOwner": "c4dt/dela",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-10-03T16:07:43Z",
                        "mergedAt": "2023-10-04T13:59:37Z",
                        "url": "https://github.com/c4dt/dela/pull/4",
                        "state": "MERGED",
                        "author": {
                            "login": "ineiti"
                        },
                        "editor": null,
                        "body": "With the changes in fix-notls, the protocol becomes part of the node-ID, because it is needed to make the correct connection and verify or not the certificate.\r\n\r\nThis change makes sure that the full name is used wherever necessary, and makes the tests pass again.\r\n\r\nThere might still be things lingering which are not happy with the new node-ID.\r\n\r\nLocally the tests with 'run_local.sh' pass.",
                        "comments": {
                            "nodes": []
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "In python, I would do this using a \"dispatch table\", but it doesn't look good in golang\nhttps://chat.openai.com/share/e24fcf2d-a14b-4198-83e8-2910e17c7cd9",
                                                        "author": {
                                                            "login": "lanterno"
                                                        },
                                                        "url": "https://github.com/c4dt/dela/pull/4#discussion_r1345719323",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "31dcdd4",
                                                            "authoredDate": "2023-10-03T16:05:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "In python, I would use a lambda function.. ChatGPT didn't use lambdas, so I guess go lang doesn't have them?",
                                                        "author": {
                                                            "login": "lanterno"
                                                        },
                                                        "url": "https://github.com/c4dt/dela/pull/4#discussion_r1345720358",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "31dcdd4",
                                                            "authoredDate": "2023-10-03T16:05:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "You can have lambda functions in go. However I don't like making the code more intelligent than it needs to be.\nWhat would be the advantage of a function table compared to a switch/case construction?",
                                                        "author": {
                                                            "login": "ineiti"
                                                        },
                                                        "url": "https://github.com/c4dt/dela/pull/4#discussion_r1345730550",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "31dcdd4",
                                                            "authoredDate": "2023-10-03T16:05:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "OK, that's in fact wrong, because you can have an address created with NewAddress from\n\nhttps://hostname\nhttps://hostname:1234\nhttps://hostname:443\n\nThis will create an Address with host=\n\nhostname:443\nhostname:1234\nhostname:443\n\nTo get back to the original string, which is used when comparing hosts, if the port number is 443, it should result in 1.\nTo avoid wrong interpretations from https://hostname:443, NewAddress and NewAddressFromURL should reject that string.",
                                                        "author": {
                                                            "login": "ineiti"
                                                        },
                                                        "url": "https://github.com/c4dt/dela/pull/4#discussion_r1345763400",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "31dcdd4",
                                                            "authoredDate": "2023-10-03T16:05:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 2,
                        "title": "remove transcriptions that whisper got wrong",
                        "repository": {
                            "nameWithOwner": "CodingTrain/coding-train-transcripts",
                            "primaryLanguage": {
                                "name": "JavaScript"
                            }
                        },
                        "createdAt": "2023-10-03T05:37:02Z",
                        "mergedAt": "2023-10-03T16:19:09Z",
                        "url": "https://github.com/CodingTrain/coding-train-transcripts/pull/2",
                        "state": "MERGED",
                        "author": {
                            "login": "zeke"
                        },
                        "editor": {
                            "login": "zeke"
                        },
                        "body": "Apparently [Whoops whoops whoops](https://www.youtube.com/watch?v=QYjPBcqo1-s) is not English.\r\n\r\ncc @shiffman \r\n\r\n```\r\n$ node script/remove-non-english-transcripts.mjs\r\n1jTMZvu2dYU.json:  \u9d8f\u306e\u8db3\u3092 \u30ab\u30c3\u30c8\u3057\u307e\u3059\u3002\u9d8f\u306e\u8db3\u306e \u9aa8\u3092 \u5207\u308a\u53d6\u308a\u3001\u9d8f\u306e\u8db3\u3092 \u5207\u308a\u53d6\u308a\u3001\u9d8f\u306e\u8db3\u3092 \u9aa8\u3092\u5207\u308a\u53d6\u308a\u3001\u9d8f\u306e\r\n277611ExU9A.json:  Diolch yn fawr iawn. Yn ystod y diwrnod, mae'n dd\r\n2Fk2-efjkNM.json:  \u10d4\u10da\u10d4 all \u10d5\u10d4\u10d4 \u10d4\u10da\u10d4 \u10d4\u10da\u10d4 \u10d4\u10da\u10d4 \u10d4\u10da\u10d4 \u10d4\u10da\u10d4 \u10d4\u10da\u10d4 \u10d4\u10da\u10d4 \u10d4\u10da\u10d4 \u10d4\u10da\u10d4 \u10d4\r\n2dCwK4dgcg0.json: \u3054\u89a7\u3044\u305f\u3060\u304d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\u5f8c\u7de8\u3067\u767a\u8868\u4f1a\u306e\u69d8\u5b50\u3092\u304a\u697d\u3057\u307f\u304f\u3060\u3055\u3044\u3002\u97f3\u58f0\u306e\u30c6\u30b9\u30c8\u4e2d\u3053\u3093\u306b\u3061\u306f\u3002\u4eca\r\n3CelZoAep0Q.json: ..................................................\r\n6Uy1SifiBig.json:  \u041f\u043e\u043a\u0443\u0440\u043e\u043b\u0435\u0441\u0438\u043b\u0438 \u041f\u043e\u043a\u0443\u0440\u043e\u043b\u0435\u0441\u0438\u043b\u0438 \u0414\u043e\u0431\u0440\u043e\u0435 \u0443\u0442\u0440\u043e! \u0417\u0432\u0443\u043a\u043e\u043f\u0440\u043e\u0432\u043e\r\n6p_JM-I7FUg.json:  You You You You You You You You You You You You Y\r\n78ZthTGcdPw.json:  \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3 \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3 \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3 \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3 \u30a4\u30f3\u30b9\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\r\nAkySW5uy7rU.json: \u79c1\u306f\u975e\u5e38\u306b\u8208\u5473\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u79c1\u306f \u975e\u5e38\u306b\u8208\u5473\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u79c1\u306f\u975e\u5e38\u306b\u8208\u5473\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u79c1\u306f\u975e\u5e38\r\nEvOC_vyFAiI.json: \u4e8c\u4e00\u4e00\u3042\u306a\u305f\u306f\u4eca\u30ad\u30c3\u30c8\u3057\u3066\u3044\u307e\u3059\u3001 \u0440\u0430\u0441\u043amble \u3092\u6c7a\u3081\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u6539\u5584\u3057\u306a\u3044\u30ea\u30d1\u30fc\u30c8\u3069\u3061\r\nEzYDNydDUfc.json:  You Do Do Do Do Do Do Do Do Do Do Do Do Do Do Do \r\nF3Q4Cf9OZSw.json: \ufffd and the the the the H t t G imagen the the frien\r\nPpif4qdW2pE.json:  \u17a2\u17bc\u1793\u17b6\u1793\u17b6\u1793\u17b6\u1793\u17b6\u1793\u17b6\u1793\u17d2\u179a\u17b6\u1793\u17cb\u17b6\u1793\u17cb\u17d4 \u17a2\u17bc\u1798\u17b6\u1793\u17b6\u1793\u17b6\u1793\u17b6\u1793\u17b6\u1793\u17cb\u17d4 \u17a2\u17bc\u1798\u1798\u17b6\u1793\u17b6\u1793\u17b6\u1793\r\nQYjPBcqo1-s.json:  oops whoops whoops whoops whoops whoops whoops wh\r\nRXgLkdnStYE.json:  Outtro\r\nSGtT10OdGjA.json:  \u30aa\u30ec\u30f3\u30b8 1\u500b \u30aa\u30ec\u30f3\u30b8 2\u500b \u30d6\u30eb\u30fc\u30d9\u30ea\u30fc 1\u500b \u30d6\u30eb\u30fc\u30d9\u30ea\u30fc 3\u500b \u30d6\u30eb\u30fc\u30d9\u30ea\u30fc 4\u500b \u30aa\u30ec\u30f3\r\nVolDI5PT0wM.json:  \u1794\u17d2\u179a\u17bb\u1784\u17cb\u17d2\u178a\u17b6\u179a\u17d2\u179a\u1794\u17cb\u17d4 \u1794\u17d2\u179a\u17bb\u1784\u17cb\u17d4 \u1794\u17d2\u179a\u17bb\u1784\u17cb\u17d4 \u1794\u17d2\u179a\u17bb\u1784\u17cb\u17d4 \u1794\u17d2\u179a\u17bb\u1784\u17cb\u17d4 \u1794\r\nW3W7OQmanJw.json:  \u1793\u17d2\u17bc\u1798\u17d2\u179a\u17c7\u1796\u17b6\u1793\u17cb\u1793\u17c5\u17b6\u179e\u17d2\u1798\u17d2\u1789\u17bb\u17c6\u1799\u17d2\u1798\u17d2\u1794\u17b6\u1793\u17cb\u179b\u17cb\u17b6\u178e\u17d2\u179b\u17d2\u179a\u17c7\u178f\u17d2\u179a\u17c7\u178f\u17d2\u179b\u17d2\u179a\u17b6\u1789\r\ngsJvZjlfNko.json:  Rhosiwech alla Goa. Tra Brewh dress. 1-0-0 1-0-0 \r\nmXDrH0wStHs.json:  B2 B3 B4 B5 B6 B7 B8 B9 B11 B12 B13 B14 B15 B16 B\r\nmXFBoPIynIc.json: \u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u3001\u3053\u306e\u3088\u3046\u306b\u3001 \u30b9\u30c6\u30c3\u30d71\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30b9\u30c6\u30c3\u30d72\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30b9\u30c6\u30c3\u30d73\u3092\u4f7f\u7528\u3059\u308b\u3068\r\nrQroxWLZiCo.json: \u3048\u3044\u3063voodoofdj \u179f\u17d2\u179a\u17bb\u17c6\u178f\u17bb\u1784\u1780\u17b6\u1793\u17c5\u1780\u17b6\u1793\u17c5\u1798\u17d4 \u179f\u17d2\u179a\u17bb\u17c6\u178f\u17bb\u1784\u1780\u17b6\u1793\u17c5\u1780\u17b6\u1793\u17c5\u1798\u17d4\r\nsor1nwNIP9A.json:  a. A a a a a a a a a a a a a a a a a a a a a a a \r\nv1xGX7enkOo.json:  \u4eca\u65e5\u306f\u3001\u79c1\u305f\u3061\u306e\u4ed5\u4e8b\u3092\u59cb\u3081\u307e\u3059\u3002 \u79c1\u306f\u4eca\u3001\u79c1\u306e\u4ed5\u4e8b\u3092\u59cb\u3081\u308b\u524d\u306b\u3001\u79c1\u306f\u79c1\u306e\u4ed5\u4e8b\u3092\u59cb\u3081\u308b\u524d\u306b\u3001\u79c1\u306f \u4eca\r\nyzOW08JHL1U.json: \u76ee\u7389\u713c\u304d\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30ad\u30e0\u30c1\u306e\u82d7\u306e\u5f62\u3092\u30ab\u30c3\u30c8\u3057\u307e\u3059\u30ad\u30e0\u30c1\u306e\u5f62\u3092\u30ab\u30c3\u30c8\u3057\u307e\u3059\u30ad\u30e0\u30c1\u306e\u82d7\u306e\u5f62\u3092\u30ab\u30c3\u30c8\u3057\u307e\r\n```\r\n",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-10-03T16:18:59Z",
                                    "bodyText": "https://www.youtube.com/watch?v=1jTMZvu2dYU\nhttps://www.youtube.com/watch?v=277611ExU9A\nhttps://www.youtube.com/watch?v=2Fk2-efjkNM\nhttps://www.youtube.com/watch?v=2dCwK4dgcg0\nhttps://www.youtube.com/watch?v=3CelZoAep0Q\nhttps://www.youtube.com/watch?v=6Uy1SifiBig\nhttps://www.youtube.com/watch?v=6p_JM-I7FUg\nhttps://www.youtube.com/watch?v=78ZthTGcdPw\nhttps://www.youtube.com/watch?v=AkySW5uy7rU\nhttps://www.youtube.com/watch?v=EvOC_vyFAiI\nhttps://www.youtube.com/watch?v=EzYDNydDUfc\nhttps://www.youtube.com/watch?v=F3Q4Cf9OZSw\nhttps://www.youtube.com/watch?v=Ppif4qdW2pE\nhttps://www.youtube.com/watch?v=QYjPBcqo1-s\nhttps://www.youtube.com/watch?v=RXgLkdnStYE\nhttps://www.youtube.com/watch?v=SGtT10OdGjA\nhttps://www.youtube.com/watch?v=VolDI5PT0wM\nhttps://www.youtube.com/watch?v=W3W7OQmanJw\nhttps://www.youtube.com/watch?v=gsJvZjlfNko\nhttps://www.youtube.com/watch?v=mXDrH0wStHs\nhttps://www.youtube.com/watch?v=mXFBoPIynIc\nhttps://www.youtube.com/watch?v=rQroxWLZiCo\nhttps://www.youtube.com/watch?v=sor1nwNIP9A\nhttps://www.youtube.com/watch?v=v1xGX7enkOo\nhttps://www.youtube.com/watch?v=yzOW08JHL1U",
                                    "url": "https://github.com/CodingTrain/coding-train-transcripts/pull/2#issuecomment-1745312337",
                                    "author": {
                                        "login": "zeke"
                                    }
                                },
                                {
                                    "createdAt": "2023-10-03T17:23:43Z",
                                    "bodyText": "With help from https://chat.openai.com/share/6a1540fa-3219-4ec2-a3c3-c9759df2fe36",
                                    "url": "https://github.com/CodingTrain/coding-train-transcripts/pull/2#issuecomment-1745412089",
                                    "author": {
                                        "login": "zeke"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 5,
                        "title": "Add lgbm model code",
                        "repository": {
                            "nameWithOwner": "erobitschek/med-ml",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-10-03T07:16:12Z",
                        "mergedAt": "2023-10-06T00:29:12Z",
                        "url": "https://github.com/erobitschek/med-ml/pull/5",
                        "state": "MERGED",
                        "author": {
                            "login": "erobitschek"
                        },
                        "editor": null,
                        "body": "",
                        "comments": {
                            "nodes": []
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Few comments this time! :-)",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Enum maybe?",
                                                        "author": {
                                                            "login": "Simsso"
                                                        },
                                                        "url": "https://github.com/erobitschek/med-ml/pull/5#discussion_r1346311518",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8079a21",
                                                            "authoredDate": "2023-10-03T07:26:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Maybe spare this parameter and run the eval unless val_set is None.",
                                                        "author": {
                                                            "login": "Simsso"
                                                        },
                                                        "url": "https://github.com/erobitschek/med-ml/pull/5#discussion_r1346312642",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8079a21",
                                                            "authoredDate": "2023-10-03T07:26:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "os.path.join(run_dir, 'model.txt')",
                                                        "author": {
                                                            "login": "Simsso"
                                                        },
                                                        "url": "https://github.com/erobitschek/med-ml/pull/5#discussion_r1346312997",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8079a21",
                                                            "authoredDate": "2023-10-03T07:26:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Change this to\n        if not os.path.exists(model_path):\n            raise FileNotFoundError(\"Model file not found\")\n\n        model = lgb.Booster(model_file=model_path)\n        logger.info(f\"Model loaded from previous training\")\nIt's called a \"guard clause\" and the else isn't needed, because raise exits the function.",
                                                        "author": {
                                                            "login": "Simsso"
                                                        },
                                                        "url": "https://github.com/erobitschek/med-ml/pull/5#discussion_r1346314278",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8079a21",
                                                            "authoredDate": "2023-10-03T07:26:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "FYI: For Callable you can specify the types like this: https://chat.openai.com/share/da465ac3-4b5d-456b-95f9-3565b7b4cdb2",
                                                        "author": {
                                                            "login": "Simsso"
                                                        },
                                                        "url": "https://github.com/erobitschek/med-ml/pull/5#discussion_r1346318811",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8079a21",
                                                            "authoredDate": "2023-10-03T07:26:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The function is hard to read, because of the high-level if/else. If there is not enough overlap between the content of the if clause and the else clause, just split it into two functions.",
                                                        "author": {
                                                            "login": "Simsso"
                                                        },
                                                        "url": "https://github.com/erobitschek/med-ml/pull/5#discussion_r1346321827",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8079a21",
                                                            "authoredDate": "2023-10-03T07:26:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ill wait to make this sort of change because of the way the test set is passed automatically to the train function in higher level function and the model_eval parameter is specified as an arg in the arg parser for the main analysis pipeline. But it makes me think the flow I have set up needs some adjustment so I'll reflect on that in future PRs",
                                                        "author": {
                                                            "login": "erobitschek"
                                                        },
                                                        "url": "https://github.com/erobitschek/med-ml/pull/5#discussion_r1348086992",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8079a21",
                                                            "authoredDate": "2023-10-03T07:26:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "fixed :D (made two functions and you're right it's far more readable now)",
                                                        "author": {
                                                            "login": "erobitschek"
                                                        },
                                                        "url": "https://github.com/erobitschek/med-ml/pull/5#discussion_r1348120226",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "8079a21",
                                                            "authoredDate": "2023-10-03T07:26:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 22,
                        "title": "Add \"toml\" tag in README",
                        "repository": {
                            "nameWithOwner": "ldez/tagliatelle",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-10-03T10:12:29Z",
                        "mergedAt": "2023-10-03T15:42:16Z",
                        "url": "https://github.com/ldez/tagliatelle/pull/22",
                        "state": "MERGED",
                        "author": {
                            "login": "Antonboom"
                        },
                        "editor": null,
                        "body": "In some project guys was confused from absent `toml` in the linter readme.",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-10-03T10:42:45Z",
                                    "bodyText": "In some projects guys were confused by absent toml in the linter readme.\n\nWhen you say that you have to prove it. With this kind of argument, you can say what you want.\nAlso, you are talking about the readme (i.e. the documentation) but your PR changes the default values in the code.\nOtherwise, the default case for TOML is not really clear, this is why I don't add it.\nI think that snake_case is not the right default format, I prefer lowerCamelCase, but there is no real convention around TOML naming.\nhttps://toml.io/",
                                    "url": "https://github.com/ldez/tagliatelle/pull/22#issuecomment-1744704881",
                                    "author": {
                                        "login": "ldez"
                                    }
                                },
                                {
                                    "createdAt": "2023-10-03T12:19:28Z",
                                    "bodyText": "When you say that you have to prove it. With this kind of argument, you can say what you want.\n\nI'm sorry, I wasn't talking about an open source project, that's why I couldn't attach some links.\n\nbut your PR changes the default values in the code.\n\nThis is true. Initially, it was only about documentation, but then I discovered that you did not add this tag at all.\nAlthough it's popular a lot in Go enterprise projects.\n\nbut there is no real convention around TOML naming.\n\nI expected such answer and, of course, did extra analysis before PR \ud83d\udc4c\nFor some of your other defaults there is no convention too.\nE.g.\n\n\nJSON \u2013\u00a0no convention. But typically for Python/PHP it's snake_case, for Java/JS it's camelCase. Usually people reference to Google JSON Styleguide.\n\n\nYAML \u2013 no convention. The most popular option is snake_case (dictated by Python), but you selected camelCase like in k8s (?)\n\n\nHeader \u2013\u00a0case-insensitive by RFC. And I remember recommendation to use foo-bar instead of Foo-Bar (to support different libraries in different languages).\n\n\netc.\n\nI selected snake_case for TOML based on my experience.\nAsked ChatGPT for interest \ud83d\ude04\nhttps://chat.openai.com/share/8b245bcd-837f-47f6-a5fa-b3c7b47d9aad\n\nI see the next options:\n\nYou close PR, if disagree.\nYou merge PR as is, if agree with points above.\nI switch default format for TOML to anything what you want, and merge it.\nI remove the default rule, but add toml to the example in the README (so people can grep it), and merge it.",
                                    "url": "https://github.com/ldez/tagliatelle/pull/22#issuecomment-1744850167",
                                    "author": {
                                        "login": "Antonboom"
                                    }
                                },
                                {
                                    "createdAt": "2023-10-03T15:09:06Z",
                                    "bodyText": "I don't write in Python or PHP, so I don't follow weird conventions related to these languages.\nFor me, the convention for JSON should be related to JS because it's JavaScript Object Notation (and not P[language] Object Notation).\nYAML has a specific and historical relation with JSON: https://yaml.org/spec/1.2.0/#id2558778\nSo for me, the convention should be the same as JSON.\nThe default value was not related to K8s but to this.\nThe header format is based on the Go convention. The RFC just says it's case-insensitive: there is no \"official\" recommendation to use a specific case because the case should be ignored to avoid the fact of using a convention as a requirement (to avoid people creating applications that only understand uppercase headers...).\netc.\nPython tries to invent its own rule by using the same naming convention (as the language itself) for every format.\nI didn't add TOML because I wanted to avoid this kind of tab/space debate.\nFor me, it's lowerCamelCase but for some people it's snake_case, it's a useless debate.\nSo I prefer to add a TOML example in the doc.",
                                    "url": "https://github.com/ldez/tagliatelle/pull/22#issuecomment-1745177191",
                                    "author": {
                                        "login": "ldez"
                                    }
                                },
                                {
                                    "createdAt": "2023-10-03T15:34:57Z",
                                    "bodyText": "So I prefer to add a TOML example in the doc.\n\n\ud83d\udc4d done",
                                    "url": "https://github.com/ldez/tagliatelle/pull/22#issuecomment-1745227780",
                                    "author": {
                                        "login": "Antonboom"
                                    }
                                },
                                {
                                    "createdAt": "2023-10-03T15:36:40Z",
                                    "bodyText": "Can you fix the \"conventional\" indentation with space between field and value? \ud83d\ude04",
                                    "url": "https://github.com/ldez/tagliatelle/pull/22#issuecomment-1745231050",
                                    "author": {
                                        "login": "ldez"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjQ=",
                "hasNextPage": false,
                "hasPreviousPage": false,
                "startCursor": "Y3Vyc29yOjE="
            },
            "issueCount": 4
        }
    }
}