{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 638,
                        "title": "Add optional feature to set the SO_REUSEADDR option before binding th\u2026",
                        "repository": {
                            "nameWithOwner": "tsenart/vegeta",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-07-25T15:54:41Z",
                        "mergedAt": null,
                        "url": "https://github.com/tsenart/vegeta/pull/638",
                        "state": "OPEN",
                        "author": {
                            "login": "fabiorush"
                        },
                        "editor": {
                            "login": "fabiorush"
                        },
                        "body": "#### Background\r\n\r\nAdd an optional parameter to set the SO_REUSEADDR option on the TCP socket before binding\r\nit (default false). Can reduce the amount of \"bind: address already in use\" errors when doing many\r\nconnections with the same address and port combination, like the ones that happened on https://github.com/tsenart/vegeta/issues/583.\r\n\r\n#### Checklist\r\n\r\n- [x] Git commit messages conform to [community standards](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).\r\n- [x] Each Git commit represents meaningful milestones or atomic units of work.\r\n- [ ] Changed or added code is covered by appropriate tests.",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-07-25T17:18:05Z",
                                    "bodyText": "Hey, thanks for the patch. I have couple question.\n\nDoes this work on every OS/architecture pair we ship releases to? If not, that's fine. We just need to document it properly and make sure this only runs on the supported ones. See the latest release for the supported targets: https://github.com/tsenart/vegeta/releases/tag/v12.11.0\nAre there any risks / trade-offs involved with setting this on outgoing connections? I've used this when binding to a port to receive incoming requests but never to outgoing connections.",
                                    "url": "https://github.com/tsenart/vegeta/pull/638#issuecomment-1650230897",
                                    "author": {
                                        "login": "tsenart"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-25T17:26:46Z",
                                    "bodyText": "Here's what GPT4 had to say about this: https://chat.openai.com/share/b515e3dc-6193-4550-8d5d-3ecaa8088755",
                                    "url": "https://github.com/tsenart/vegeta/pull/638#issuecomment-1650244437",
                                    "author": {
                                        "login": "tsenart"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-25T18:42:12Z",
                                    "bodyText": "Yeah, I'm aware of the risks and the follow article explain it really well:\nhttps://hea-www.harvard.edu/~fine/Tech/addrinuse.html\nI think the main risk is to have a socket A receiving packets that should be received by socket B, but I think it doesn't matter much for the load test itself (it would matter for the report in the end, but I think we could add a note about that).",
                                    "url": "https://github.com/tsenart/vegeta/pull/638#issuecomment-1650351160",
                                    "author": {
                                        "login": "fabiorush"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-25T18:50:48Z",
                                    "bodyText": "And this post on stackoverflow talks about the different implementation of the REUSEADDR and REUSEPORT flags on many architectures. In resume the REUSEADDR flag stays the same, while we have some minor variations on the REUSEPORT flag.\nhttps://stackoverflow.com/questions/14388706/how-do-so-reuseaddr-and-so-reuseport-differ",
                                    "url": "https://github.com/tsenart/vegeta/pull/638#issuecomment-1650362184",
                                    "author": {
                                        "login": "fabiorush"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-25T20:12:54Z",
                                    "bodyText": "About the suggestions made by GPT4, something we cannot or are not allowed to modify sys net ipv4 parameters. For example, decreasing the tcp_fin_timeout will also affect other services, which may not be desirable.",
                                    "url": "https://github.com/tsenart/vegeta/pull/638#issuecomment-1650487982",
                                    "author": {
                                        "login": "fabiorush"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-30T15:02:17Z",
                                    "bodyText": "I need to convince myself that this is safe, and so far I haven't been able to. Maybe you can help me get there. If someone runs into \"bind: address already in use\" even given the fact that we're using HTTP keep alive underneath and re-using TCP connections, it like means the server is very slow to respond, or the network really faulty, or a mix. In either case, the TCP connection would still be open, and the client reading a response, so re-using the local address seems unsafe?\nOr is it only applicable when the underlying TCP connection is in TIME_WAIT state? In any case, I'd like to write some sort of integration test that exercises this and gives us some more confidence.",
                                    "url": "https://github.com/tsenart/vegeta/pull/638#issuecomment-1657195383",
                                    "author": {
                                        "login": "tsenart"
                                    }
                                },
                                {
                                    "createdAt": "2023-08-01T12:19:04Z",
                                    "bodyText": "Exactly. On our use case we were executing a load test to a load balancer composed of 8 front end servers. Those servers queries a route table located on another server and do a proxy_pass to one internal server out of 20. We were trying to find out what happens when the communication to the route table service becomes unresponsible. Because how the retries were implemented a request that took milliseconds to be responded went to up 5 seconds. We wanted to know if the front end servers would crash or also become unresponsible but we started to runs into \"bind: address already in use\". The setting of the reuse option fixed this on our case. It only allows the reuse of TIME_WAIT sockets when you are binding to different combination of remote IP address and port. So if you have a socket in TIME_WAIT with the combination LOCAL_ADDR_A:PORT_A <=> REMOTE_ADDR_A:PORT_X and try the same combination again it will not allow, but if use a combination with another remote IP address or port like LOCAL_ADDR_A:PORT_A <=> REMOTE_ADDR_B:PORT_X it will reuse the LOCAL_ADDR_A:PORT_A when binding.",
                                    "url": "https://github.com/tsenart/vegeta/pull/638#issuecomment-1660200541",
                                    "author": {
                                        "login": "fabiorush"
                                    }
                                },
                                {
                                    "createdAt": "2023-08-04T01:34:20Z",
                                    "bodyText": "If you're hitting \"bind: address in use\" issues in your load tests, it typically means you're exhausting the capabilities of the network stack on the host. SO_REUSEADDR and SO_REUSEPORT won't meaningfully impact those constraints. And, in any case, it's a situation that you would \u2014 should! \u2014 never encounter in a normal deployment, so it doesn't make sense to try to accommodate in a vegeta load test.\nedit: vegeta acts as a client, not a server, and SO_REUSEADDR/PORT on the client side is far more restrictive than on the server side. Specifically, it doesn't allow a single physical connection from a given client addr:port to a given server addr:port to mux arbitrary logical connections.\nInstead, you want to make sure that vegeta creates no more than a reasonable number of connections to a given target host. The best way to do that is by setting -max-connections to a value like 8 or 16 or 32. And if that means you can't do as many RPS as you want, then you need to run vegeta on multiple hosts.",
                                    "url": "https://github.com/tsenart/vegeta/pull/638#issuecomment-1664849256",
                                    "author": {
                                        "login": "peterbourgon"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 248,
                        "title": "[4\uae30 \uace0\uc608\uc131] Mission 1 PR \uc81c\ucd9c\ud569\ub2c8\ub2e4.",
                        "repository": {
                            "nameWithOwner": "prgrms-be-devcourse/springboot-jpa",
                            "primaryLanguage": null
                        },
                        "createdAt": "2023-07-25T17:55:26Z",
                        "mergedAt": "2023-07-26T05:18:46Z",
                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248",
                        "state": "MERGED",
                        "author": {
                            "login": "Dev-Yesung"
                        },
                        "editor": null,
                        "body": "## \ud83d\udccc\u00a0\uacfc\uc81c \uc124\uba85\r\n- [x]  JPA \ud504\ub85c\uc81d\ud2b8\ub97c \uc138\ud305\ud574\ubcf8\ub2e4.\r\n- [x]  \uc138\ud305\ud55c \ud504\ub85c\uc81d\ud2b8\ub97c \uc774\uc6a9\ud574\uc11c \ub2e8\uc77c \uc5d4\ud2f0\ud2f0\ub97c \uc774\uc6a9\ud55c CRUD\ub97c \uad6c\ud604\ud55c\ub2e4.\r\n    - \uace0\uac1d(Customer) \uc5d4\ud2f0\ud2f0\ub294 ID(PK), \uc774\ub984, \uc131\uc744 \uac00\uc9c4\ub2e4.\r\n    - \uace0\uac1d\uc5d4\ud2f0\ud2f0\ub97c \uc774\uc6a9\ud55c CRUD\ub97c \uad6c\ud604\ud55c\ub2e4.",
                        "comments": {
                            "nodes": []
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "\uae54\ub054\ud558\uac8c \ucf54\ub4dc\ub97c \uc798 \uc791\uc131\ud574\uc8fc\uc154\uc11c \ub9ac\ubdf0\ub4dc\ub9b4\ubd80\ubd84\uc774 \ub9ce\uc774 \uc5c6\uc5b4\uc11c.. \uc88b\uc558\ub358 \uc810 \ube44\ub86f\ud574\uc11c \uba87\uac00\uc9c0 \ub0a8\uaca8 \ubcf4\uc558\uc2b5\ub2c8\ub2e4\u314e\u314e!\n\uc608\uc131\ub2d8 \uc218\uace0\ub9ce\uc73c\uc168\uc2b5\ub2c8\ub2e4~\ud83d\udc4d\ud83d\udc4d",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "length = 50\ub97c \ud65c\uc6a9\ud558\uc5ec \ub370\uc774\ud130 \ud544\ub4dc\uc5d0 \uc81c\ud55c\uc744 \uc124\uc815\ud574\uc8fc\uc2e0 \ubd80\ubd84 \uc88b\uc740 \uac83 \uac19\uc2b5\ub2c8\ub2e4! \ud83d\udc4d\ud83d\udc4d",
                                                        "author": {
                                                            "login": "kimihiqq"
                                                        },
                                                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248#discussion_r1274325928",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "40ccb25",
                                                            "authoredDate": "2023-07-25T17:47:44Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\ud604\uc7ac \uc0dd\uc131\uc790\uac00 \ub450\uac1c\uc778\ub370\uc694, @GeneratedValue(strategy = GenerationType.SEQUENCE)\ub97c \ud1b5\ud574 id\uac00 \uc790\ub3d9\uc73c\ub85c \uc0dd\uc131\ub418\ub2c8 id\ub97c \ub9e4\uac1c\ubcc0\uc218\ub85c \ubc1b\ub294 \uc0dd\uc131\uc790\ub294 \uc5c6\uc5b4\ub3c4 \ub418\uc9c0 \uc54a\uc744\uae4c..? \uc0dd\uac01\ud569\ub2c8\ub2e4!",
                                                        "author": {
                                                            "login": "kimihiqq"
                                                        },
                                                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248#discussion_r1274334028",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "40ccb25",
                                                            "authoredDate": "2023-07-25T17:47:44Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\ud83d\udc4d\ud83d\udc4d \uc720\ud6a8\uc131 \uac80\uc0ac\ub97c \ud1b5\ud574 \uc774\ub984\uc774 \ud2b9\uc815 \ud328\ud134\uc5d0 \uc77c\uce58\ud558\ub294\uc9c0 \ud655\uc778\ud574\uc8fc\uc168\ub294\ub370, \uc774\ubd80\ubd84\uc740 \uc800\ub3c4 \ucc38\uace0\ud574 \ucd94\uac00\ud558\uaca0\uc2b5\ub2c8\ub2e4\u314e\u314e~",
                                                        "author": {
                                                            "login": "kimihiqq"
                                                        },
                                                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248#discussion_r1274335321",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "40ccb25",
                                                            "authoredDate": "2023-07-25T17:47:44Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\uc774\ubd80\ubd84\uc740 lombok\uc758 @NoArgsConstructor\uc758 \uc0ac\uc6a9\uc744 \uace0\ub824\ud574\ubcfc\uc218\ub3c4 \uc788\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4!",
                                                        "author": {
                                                            "login": "kimihiqq"
                                                        },
                                                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248#discussion_r1274335654",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "40ccb25",
                                                            "authoredDate": "2023-07-25T17:47:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u314e\u314e\u314e \uac10\uc0ac\ud569\ub2c8\ub2e4~ JPA\uac00 \ucc98\uc74c\uc774\ub77c \ub0af\uc124\uc5b4\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub294 \uae30\ub2a5\ub4e4\uc744 \ucd5c\ub300\ud55c \ud65c\uc6a9\ud574\ubcf4\ub824\uace0 \ud588\uc2b5\ub2c8\ub2e4!",
                                                        "author": {
                                                            "login": "Dev-Yesung"
                                                        },
                                                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248#discussion_r1274361822",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "40ccb25",
                                                            "authoredDate": "2023-07-25T17:47:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\uc81c\uac00 \uc815\ud655\ud558\uac8c \ubab0\ub77c\uc11c \uadf8\ub7f0\ub370, JPA\ub294 DB\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc62c \ub54c, \uc0dd\uc131\uc790\ub97c \uac00\uc9c0\uace0 \uac00\uc838\uc624\uc9c0 \uc54a\ub294\uac74\uac00\uc694...?\n\ud639\uc2dc\ub098 \ud574\uc11c DB\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc62c \ub54c \uc0dd\uc131\uc790\ub97c \ud1b5\ud574 \uac00\uc838\uc628\ub2e4\uba74 id\uc5d0 \uad00\ud55c \uc0dd\uc131\uc790\ub3c4 \ud544\uc694\ud560\uae4c\ubd10 \uc774\ub807\uac8c \ub9cc\ub4e4\uc5c8\uc2b5\ub2c8\ub2e4...!\n\uc774 \ubd80\ubd84 \ub2e4\uc2dc \uacf5\ubd80\ud558\uace0 \uc218\uc815\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4 \u314e\u314e\n\uc774\uc640 \ubcc4\uac1c\ub85c \uc81c\uac00 \uc774\ub984\ub9cc \uac00\uc9c0\uace0 \uc0dd\uc131\ud558\ub294 \uc0dd\uc131\uc790\uc5d0\ub294 validName\uc744 \uc548 \uac78\uc5b4\ub1a8\ub124\uc694... \u315c\ud83e\udd72\n\uc218\uc815\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4! \uac10\uc0ac\ud569\ub2c8\ub2e4~",
                                                        "author": {
                                                            "login": "Dev-Yesung"
                                                        },
                                                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248#discussion_r1274363563",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "40ccb25",
                                                            "authoredDate": "2023-07-25T17:47:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\uc800\ub3c4 \uacf5\ubd80\ud558\ub2e4\uac00 \uc5b4\ub514\uc11c \ucc38\uace0\ud574\uc11c \uac16\ub2e4 \uc37c\uc2b5\ub2c8\ub2e4 \u314e\u314e",
                                                        "author": {
                                                            "login": "Dev-Yesung"
                                                        },
                                                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248#discussion_r1274363805",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "40ccb25",
                                                            "authoredDate": "2023-07-25T17:47:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\uc544\uc557 \uc800\ub294 \ub86c\ubcf5\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc5b4\ub178\ud14c\uc774\uc158\uc5d0 public\uc73c\ub85c\ub9cc \uac00\ub2a5\ud55c\uc904 \uc54c\uc558\ub294\ub370\nprotected\ub85c \uc124\uc815\ud558\ub294 \uac83\ub3c4 \uac00\ub2a5\ud558\uad70\uc694...!!!\ud83e\udd29\n@NoArgConstructor\ub97c \uc0ac\uc6a9\ud574\uc11c \ubc14\uafd4\ubcf4\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4~ \uac10\uc0ac\ud569\ub2c8\ub2e4 \u314e\u314e",
                                                        "author": {
                                                            "login": "Dev-Yesung"
                                                        },
                                                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248#discussion_r1274364448",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "40ccb25",
                                                            "authoredDate": "2023-07-25T17:47:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\uc774 \uc815\ubcf4\uac00 \ub9de\ub294\uc9c0 \ubaa8\ub974\uaca0\ub294\ub370 \ub0b4\ubd80\uc801\uc778 \uba54\ucee4\ub2c8\uc998\uc0c1 \uae30\ubcf8\uc0dd\uc131\uc790\ub97c \ub9cc\ub4dc\ub294\uac8c \uc81c\uc77c \uc911\uc694\ud558\uad70\uc694...! \uc218\uc815\ud558\uaca0\uc2b5\ub2c8\ub2e4~\nhttps://chat.openai.com/share/a91172f5-5778-43d1-9c66-8321720753be",
                                                        "author": {
                                                            "login": "Dev-Yesung"
                                                        },
                                                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248#discussion_r1274378327",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "40ccb25",
                                                            "authoredDate": "2023-07-25T17:47:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "JPA\uac00 DB\uc5d0\uc11c \ub370\uc774\ud130\ub97c \uac00\uc838\uc62c\ub54c\ub294 \uae30\ubcf8\uc801\uc73c\ub85c (\ub9e4\uac1c\ubcc0\uc218\uac00 \uc5c6\ub294)\uae30\ubcf8\uc0dd\uc131\uc790\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc73c\ub85c \uc54c\uace0\uc788\uc2b5\ub2c8\ub2e4..! \uc774\ud6c4 Reflection API\ub97c \uc0ac\uc6a9\ud558\uc5ec private \ud544\ub4dc\uc5d0 \uc9c1\uc811 \uc811\uadfc\ud558\uace0 \uac12\uc744 \ubcc0\uacbd\ud558\uae30\uc5d0, id\ub97c \ub9e4\uac1c\ubcc0\uc218\ub85c \ubc1b\ub294 \uc0dd\uc131\uc790\ub3c4 \uc0ac\uc6a9\ud558\uc9c0 \uc54a\ub294\uac83\uc73c\ub85c \uc800\ub294 \uc54c\uace0\uc788\uc2b5\ub2c8\ub2e4..!\n\ub2e4\uc74c \uae00\uc744 \ucc38\uace0\ud574\ubcf4\uc154\ub3c4 \uc88b\uc744 \uac83 \uac19\uc2b5\ub2c8\ub2e4!\nhttps://velog.io/@yyy96/JPA-%EA%B8%B0%EB%B3%B8%EC%83%9D%EC%84%B1%EC%9E%90",
                                                        "author": {
                                                            "login": "kimihiqq"
                                                        },
                                                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248#discussion_r1274379093",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "40ccb25",
                                                            "authoredDate": "2023-07-25T17:47:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\uc624 \uc800\ub3c4 \uc774 \uae00 \uc77d\uc5c8\ub294\ub370, \uacb0\uad6d \uae30\ubcf8\uc0dd\uc131\uc790\uac00 \ubc18\ub4dc\uc2dc \ud544\uc694\ud55c \uc774\uc720\uc640 \ub3d9\uc77c\ud558\uad70\uc694!! \uc774\ud574\ub410\uc2b5\ub2c8\ub2e4 \u314e\u314e \uc790\uc138\ud55c \ub2f5\ubcc0 \uac10\uc0ac\ud569\ub2c8\ub2e4~",
                                                        "author": {
                                                            "login": "Dev-Yesung"
                                                        },
                                                        "url": "https://github.com/prgrms-be-devcourse/springboot-jpa/pull/248#discussion_r1274380190",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "40ccb25",
                                                            "authoredDate": "2023-07-25T17:47:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 91,
                        "title": "Fix #74: Correct for Lens Distortion for ray angle calculation",
                        "repository": {
                            "nameWithOwner": "Theta-Limited/OpenAthenaAndroid",
                            "primaryLanguage": {
                                "name": "Java"
                            }
                        },
                        "createdAt": "2023-07-25T23:40:12Z",
                        "mergedAt": null,
                        "url": "https://github.com/Theta-Limited/OpenAthenaAndroid/pull/91",
                        "state": "CLOSED",
                        "author": {
                            "login": "mkrupczak3"
                        },
                        "editor": {
                            "login": "mkrupczak3"
                        },
                        "body": "[![AutoPR Running](https://img.shields.io/badge/AutoPR-running-yellow)](https://github.com/Theta-Limited/OpenAthenaAndroid/actions/runs/5662910110)\n\nFixes #74\n\n## Status\n\nThis pull request is being autonomously generated by [AutoPR](https://github.com/irgolic/AutoPR).\n\n<details open>\n<summary>\ud83d\udcd6 Looking at files</summary>\n\n> <details>\n> <summary>\ud83d\udcac Asked for InitialFileSelect</summary>\n> \n> > <details>\n> > <summary>Prompt</summary>\n> > \n> > ~~~\n> > Hey, somebody just opened an issue in my repo, could you help me write a pull request?\n> > \n> > Given context variables enclosed by +-+:\n> > \n> > Issue:\n> > +-+\n> > #74 Correct for Lens Distortion for ray angle calculation\n> > \n> > mkrupczak3: Our current calculation for ray angle from a selected image point is entirely based on the idealized [pinhole camera model](https://towardsdatascience.com/camera-intrinsic-matrix-with-example-in-python-d79bf2478c12?gi=8bd7b436d2d3). This makes no consideration of the properties of the actual camera lens, which introduces its own image distortion subtly different than may be expected in the pinhole camera model. These distortions may be especially pronounced with fisheye cameras or zoom lenses at larger focal lengths:\n> > https://en.wikipedia.org/wiki/Distortion_(optics)\n> > \n> > This deviation due to distortion is noticeably more pronounced near the edges of images, causing the marked point to deviate from the desired calculated location.\n> > \n> > A different project called PIX4D, which is used for drone mapping and photogrammetry, has published how they account for lens distortion. Proper angle calculation is very important for photogrammetry's technique of stitching together images taken from different angles, so we may assume their model is reasonably accurate:\n> > \n> > https://support.pix4d.com/hc/en-us/articles/202559089-How-are-the-Internal-and-External-Camera-Parameters-defined\n> > \n> > We need to store R\u2081, R\u2082, R\u2083, T\u2081, and T\u2082 for common camera models, and use the equations as defined above to apply a correction for lens distortion which then allows us to use the pinhole camera model appropriately for ray angle calculation\n> > \n> > @sethgcanada \n> > \n> > \n> > mkrupczak3: It turns out we don't have to re-work these equations like I thought, all that's needed is code to solve for Xd and Yd and use those for trig angle calculation instead of un-corrected Xh and Yh as is done currently\n> > \n> > \n> > mkrupczak3: One implementation problem is that often drone images are scaled up or down from their original size, while the calibrated distortion parameters are in terms of pixels of the image size that was used for calibration. \n> > \n> > We cannot assume the size of the image loaded will be the same as the size that the parameters are calculated for (such as if it is automatically scaled down when sent over a messaging app): Therefore it is necessary to adjust the distortion parameters based on the image scale.\n> > \n> > Interestingly, the distortion parameters won't scale linearly with the image scale. I haven't checked the math, but I believe they may be defined however, by mathematical formula(s) involving the original parameter and an arbitrary scale value `n` (see the last entry [here](https://chat.openai.com/share/f35a1b48-461c-4dd6-bd44-f19d0fdbe45c))\n> > \n> > In brief, this suggests that the new distortion coefficients for the scaled resolution image could be:\n> > \n> > R1' = R1 / n^2\n> > R2' = R2 / n^4\n> > R3' = R3 / n^6\n> > T1' = T1 / n\n> > T2' = T2 / n\n> > \n> > The [existing code in MetadataExtractor.java](https://github.com/Theta-Limited/OpenAthenaAndroid/blob/8ef35c8b48f308b85bb79c288721e707f59184fd/app/src/main/java/com/openathena/MetadataExtractor.java#L785) calculates `scaleRatio` based on the digital zoom (center crop) ratio, the image width, and the expected full resolution width of the image (the vertical size is not used because these pixels are often cropped automatically to make an image fit 16:9 frame). This scale ratio may likely be used as `n` for the equations listed above.\n> > \n> > From there, once the distortion equation is applied, Xd and Yd may be calculated, and then the ray angle may be calculated using each of their tangents with the focal length (in pixels) as normal:\n> > https://github.com/Theta-Limited/OpenAthenaAndroid/blob/8ef35c8b48f308b85bb79c288721e707f59184fd/app/src/main/java/com/openathena/MetadataExtractor.java#L872\n> > \n> > \n> > mkrupczak3: Another really good description of the math of image distortion:\n> > \n> > https://www.mathworks.com/help/vision/ug/camera-calibration.html#:~:text=The%20intrinsic%20parameters%20represent%20the,plane%20using%20the%20intrinsics%20parameters.\n> > \n> > \n> > mkrupczak3: Oh, @sethgcanada  forgot to mention, there are two different distortion models depending on the type of lens: `perspective` or `fisheye`. See [the earlier page from PIX4D](https://support.pix4d.com/hc/en-us/articles/202559089-How-are-the-Internal-and-External-Camera-Parameters-defined) for the relevant equations for each. \n> > \n> > While the scale equations for perspective lenses are as described above, you will need to do some linear algebra to determine the appropriate image scale conversions for `c`, `d`, `e`, and `f` if the lensType is a fisheye camera and the image resolution is scaled different from what is expected.\n> > \n> > Here's an example of what the JSON entries for a `perspective` and a `fisheye` camera will look like:\n> > \n> > `perspective`:\n> > ```JSON\n> >     {\n> >       \"makeModel\": \"skydio2\",\n> >       \"isThermal\": false,\n> >       \"ccdWidthMMPerPixel\": \"6.14571/4056.0\",\n> >       \"ccdHeightMMPerPixel\": \"4.504078/3040.0\",\n> >       \"widthPixels\": 4056,\n> >       \"heightPixels\": 3040,\n> >       \"comment\": \"Skydio 2 and 2+ Sony IMX577 1/2.3\u201d 12.3MP CMOS\",\n> >       \"lensType\": \"perspective\",\n> >       \"radialR1\": 0.134437,\n> >       \"radialR2\": -0.24607,\n> >       \"radialR3\": 0.104529,\n> >       \"tangentialT1\": -0.000175531,\n> >       \"tangentialT2\": -0.000580392\n> >     }\n> > ```\n> > \n> > `fisheye`:\n> > ```JSON\n> >     {\n> >       \"makeModel\": \"parrotBEBOP 2\",\n> >       \"isThermal\": false,\n> >       \"ccdWidthMMPerPixel\": \"5.7344/4096.0\",\n> >       \"ccdHeightMMPerPixel\": \"4.648/3072.0\",\n> >       \"widthPixels\": 4096,\n> >       \"heightPixels\": 3072,\n> >       \"comment\": \"1/2.3in 14 MP unnamed sensor\",\n> >       \"lensType\": \"fisheye\",\n> >       \"c\": 1101.96,\n> >       \"d\": 0.0,\n> >       \"e\": 0.0,\n> >       \"f\": 1101.96\n> >     }\n> > ```    \n> > \n> > For example: in `MetadataExtractor.java`, to get the `JSONObject` matching the `ExifInterface` `exif` of an image being analyzed you would run the following:\n> > ```\n> > JSONObject matchingDrone = getMatchingDrone(exif);\n> > ```\n> > \n> > From there, to obtain the `lensType` String you would run:\n> > ```\n> > String lensType = matchingDrone.getString(\"lensType\");\n> > ```\n> > \n> > All the necessary remaining quantitative parameters can be gotten with respective:\n> > ```\n> > String key = \"xxx\";\n> > Double value = matchingDrone.getDouble(key);\n> > ```\n> > \n> > You may also use the `JSONObject` function `.has(String key)` as a safe way to check if a key exists:\n> > ```\n> > if (drone != null && drone.has(\"focalLength\")) {\n> >     doSomething();\n> > }\n> > ```\n> > \n> > \n> > mkrupczak3: Also if the values for distortion parameters are all 0.0, then this actually means the data is missing. In this case, just use the existing pinhole camera model without correcting for distortion\n> > \n> > \n> > mkrupczak3: My \n> > \n> > > One implementation problem is that often drone images are scaled up or down from their original size, while the calibrated distortion parameters are in terms of pixels of the image size that was used for calibration.\n> > > \n> > > We cannot assume the size of the image loaded will be the same as the size that the parameters are calculated for (such as if it is automatically scaled down when sent over a messaging app): Therefore it is necessary to adjust the distortion parameters based on the image scale.\n> > > \n> > > Interestingly, the distortion parameters won't scale linearly with the image scale. I haven't checked the math, but I believe they may be defined however, by mathematical formula(s) involving the original parameter and an arbitrary scale value `n` (see the last entry [here](https://chat.openai.com/share/f35a1b48-461c-4dd6-bd44-f19d0fdbe45c))\n> > > \n> > > In brief, this suggests that the new distortion coefficients for the scaled resolution image could be:\n> > > \n> > > R1' = R1 / n^2 R2' = R2 / n^4 R3' = R3 / n^6 T1' = T1 / n T2' = T2 / n\n> > > \n> > > The [existing code in MetadataExtractor.java](https://github.com/Theta-Limited/OpenAthenaAndroid/blob/8ef35c8b48f308b85bb79c288721e707f59184fd/app/src/main/java/com/openathena/MetadataExtractor.java#L785) calculates `scaleRatio` based on the digital zoom (center crop) ratio, the image width, and the expected full resolution width of the image (the vertical size is not used because these pixels are often cropped automatically to make an image fit 16:9 frame). This scale ratio may likely be used as `n` for the equations listed above.\n> > > \n> > > From there, once the distortion equation is applied, Xd and Yd may be calculated, and then the ray angle may be calculated using each of their tangents with the focal length (in pixels) as normal:\n> > > \n> > > https://github.com/Theta-Limited/OpenAthenaAndroid/blob/8ef35c8b48f308b85bb79c288721e707f59184fd/app/src/main/java/com/openathena/MetadataExtractor.java#L872\n> > \n> > These equations were wrong, there's no need to alter any of the distortion parameters based on the size of the image. The current code which applies the scale correction for fx, fy, cx, and cy is already there and should be all that's needed\n> > \n> > \n> > mkrupczak3: via ChatGPT:\n> > \n> > > I apologize for the confusion earlier. Here's a step-by-step process to calculate \u03b8x and \u03b8y from a pixel in a distorted image:\n> > > \n> > > 1. **Undistort the pixel coordinates**: The first step is to correct the distorted pixel coordinates to undistorted pixel coordinates. This is typically done using an iterative process, as the distortion equations are nonlinear and do not have a simple inverse. You might start with an initial guess for the undistorted coordinates (for example, the distorted coordinates), and then repeatedly apply the distortion model and adjust the coordinates until the distorted coordinates match the observed coordinates. The distortion model equations are given by:\n> > > \n> > >     xdistorted = x(1 + k1*r^2 + k2*r^4 + k3*r^6) + [2 * p1 * x * y + p2 * (r^2 + 2 * x^2)]\n> > >     ydistorted = y(1 + k1*r^2 + k2*r^4 + k3*r^6) + [p1 * (r^2 + 2 *y^2) + 2 * p2 * x * y]\n> > > \n> > >     Here, (x, y) are the undistorted pixel locations in normalized image coordinates, (xdistorted, ydistorted) are the distorted pixel locations, r^2 = x^2 + y^2, and k1, k2, k3, p1, and p2 are the distortion coefficients.\n> > > \n> > > 2. **Normalize the pixel coordinates**: Subtract the principal point coordinates (cx, cy) from the undistorted pixel coordinates, and divide by the focal length (fx, fy) to convert the pixel coordinates to normalized image coordinates. This will give you the coordinates (x, y) of the point in the camera's image plane, in units of the focal length.\n> > > \n> > >     xnormalized = (xundistorted - cx) / fx\n> > >     ynormalized = (yundistorted - cy) / fy\n> > > \n> > > 3. **Convert to angles**: The normalized image coordinates (xnormalized, ynormalized) represent the tangent of the angles from the principal axis. So you can use the arctangent function to convert these coordinates to angles. The horizontal angle \u03b8x is given by \u03b8x = atan(xnormalized), and the vertical angle \u03b8y is given by \u03b8y = atan(ynormalized).\n> > > \n> > > Please note that these angles are relative to the principal axis of the camera, which is the line from the camera center through the principal point. The angles are positive in the direction of increasing pixel coordinates, and are measured in radians. The horizontal angle is zero for points on the principal axis, positive for points to the right of the principal axis, and negative for points to the left. Similarly, the vertical angle is zero for points on the principal axis, positive for points below the principal axis (since y-coordinates increase downwards in image coordinates), and negative for points above.\n> > \n> > \n> > mkrupczak3: More from ChatGPT on using Newton's method for finding the homogeneous point given the known distorted point in the original image:\n> > \n> > > The distortion equations are nonlinear and do not have a simple closed-form inverse, which is why an iterative approach is often used to solve for the undistorted coordinates. However, it is possible to approximate the inverse using a series expansion, or to solve for the undistorted coordinates using a numerical method such as Newton's method.\n> > > \n> > > Here is an example of how you might use Newton's method to solve for the undistorted x-coordinate given the distorted x-coordinate:\n> > > \n> > > 1. Start with an initial guess for the undistorted x-coordinate. A good initial guess might be the distorted x-coordinate.\n> > > \n> > > 2. Calculate the distorted x-coordinate using the distortion model equation:\n> > > \n> > >     xdistorted = x(1 + k1*r^2 + k2*r^4 + k3*r^6) + [2 * p1 * x * y + p2 * (r^2 + 2 * x^2)]\n> > > \n> > > 3. Calculate the difference between the calculated distorted x-coordinate and the given distorted x-coordinate.\n> > > \n> > > 4. If the difference is less than a small tolerance, stop and return the current guess for the undistorted x-coordinate.\n> > > \n> > > 5. Otherwise, calculate the derivative of the distortion model equation with respect to the undistorted x-coordinate, and use this to update the guess for the undistorted x-coordinate:\n> > > \n> > >     x = x - (xdistorted - xcalculated) / derivative\n> > > \n> > > 6. Repeat steps 2-5 until the difference is less than the tolerance or the maximum number of iterations is reached.\n> > > \n> > > This process can be repeated for the y-coordinate.\n> > > \n> > > Please note that this method requires calculating the derivative of the distortion model equation, which can be complex due to the nonlinear terms. It also requires choosing a suitable tolerance and maximum number of iterations. If the method does not converge, it may be necessary to try a different initial guess or to use a different numerical method.\n> > \n> > \n> > mkrupczak3: The accuracy issue seems to be most pronounced with fisheye lenses, see an example here:\n> > \n> > ![fisheye_fail_optimized](https://github.com/Theta-Limited/OpenAthenaAndroid/assets/25494111/bd20259e-6a86-4a91-b291-e24bb3082340)\n> > \n> > This issue may be related to the user reported issue #79 \n> > \n> > \n> > \n> > \n> > +-+\n> > \n> > The list of files in the repo is:\n> > ```.gitignore (240 tokens)\n> > .gitmodules (55 tokens)\n> > LICENSE (8075 tokens)\n> > README.md (2786 tokens)\n> > build.gradle (92 tokens)\n> > gradle.properties (333 tokens)\n> > gradlew (2469 tokens)\n> > gradlew.bat (975 tokens)\n> > settings.gradle (138 tokens)\n> > transifex.yml (95 tokens)\n> > .idea/.gitignore (16 tokens)\n> > .idea/OpenAthenaAndroid.iml (337 tokens)\n> > .idea/compiler.xml (55 tokens)\n> > .idea/gradle.xml (344 tokens)\n> > .idea/misc.xml (917 tokens)\n> > .idea/modules.xml (394 tokens)\n> > .idea/vcs.xml (66 tokens)\n> > app/.gitignore (2 tokens)\n> > app/build.gradle (541 tokens)\n> > app/proguard-rules.pro (198 tokens)\n> > .github/workflows/autopr.yml (544 tokens)\n> > app/debug/output-metadata.json (178 tokens)\n> > app/mgrs/.gitignore (3 tokens)\n> > app/mgrs/gradlew (2233 tokens)\n> > app/mgrs/gradlew.bat (923 tokens)\n> > gradle/wrapper/gradle-wrapper.properties (85 tokens)\n> > metadata/en-US/full_description.txt (93 tokens)\n> > metadata/en-US/short_description.txt (11 tokens)\n> > metadata/zh-CN/full_description.txt (0 tokens)\n> > metadata/zh-CN/short_description.txt (0 tokens)\n> > app/src/main/AndroidManifest.xml (1260 tokens)\n> > metadata/en-US/changelogs/10.txt (20 tokens)\n> > metadata/en-US/changelogs/11.txt (5 tokens)\n> > metadata/en-US/changelogs/12.txt (11 tokens)\n> > metadata/en-US/changelogs/13.txt (1 tokens)\n> > metadata/en-US/changelogs/14.txt (7 tokens)\n> > metadata/en-US/changelogs/15.txt (12 tokens)\n> > metadata/en-US/changelogs/8.txt (161 tokens)\n> > metadata/en-US/changelogs/9.txt (86 tokens)\n> > app/mgrs/gradle/wrapper/gradle-wrapper.properties (84 tokens)\n> > app/mgrs/src/main/AndroidManifest.xml (47 tokens)\n> > app/src/main/javadoc/overview.html (639 tokens)\n> > app/src/main/resources/mgrs.properties (1140 tokens)\n> > app/src/test/resources/.gitattributes (203 tokens)\n> > app/src/test/resources/README (370 tokens)\n> > app/src/test/resources/java.policy (8943 tokens)\n> > app/src/test/resources/lang-708-input.txt (2693 tokens)\n> > app/src/test/resources/log4j.properties (130 tokens)\n> > app/src/main/java/samples/XMPCoreCoverage.java (12891 tokens)\n> > app/src/main/java/samples/XMPCoreCoverageConst.java (5246 tokens)\n> > app/src/main/res/drawable-v24/ic_launcher_foreground.xml (1061 tokens)\n> > app/src/main/res/drawable/ic_launcher_background.xml (2638 tokens)\n> > app/src/main/res/layout-land/activity_about.xml (991 tokens)\n> > app/src/main/res/layout-land/activity_main.xml (2280 tokens)\n> > app/src/main/res/layout-land/activity_prefs.xml (2354 tokens)\n> > app/src/main/res/layout/activity_about.xml (947 tokens)\n> > app/src/main/res/layout/activity_log.xml (442 tokens)\n> > app/src/main/res/layout/activity_main.xml (1989 tokens)\n> > app/src/main/res/layout/activity_prefs.xml (2078 tokens)\n> > app/src/main/res/layout/activity_selection.xml (329 tokens)\n> > app/src/main/res/menu/menu_main.xml (320 tokens)\n> > app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml (98 tokens)\n> > app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml (98 tokens)\n> > app/src/main/res/values-fr/strings.xml (3981 tokens)\n> > app/src/main/res/values-ja/strings.xml (4781 tokens)\n> > app/src/main/res/values-ko/strings.xml (5981 tokens)\n> > app/src/main/res/values-land/dimens.xml (26 tokens)\n> > app/src/main/res/values-night/themes.xml (318 tokens)\n> > app/src/main/res/values-pl/strings.xml (4453 tokens)\n> > app/src/main/res/values-ru/strings.xml (6457 tokens)\n> > app/src/main/res/values-uk/strings.xml (6475 tokens)\n> > app/src/main/res/values-w1240dp/dimens.xml (26 tokens)\n> > app/src/main/res/values-w600dp/dimens.xml (26 tokens)\n> > app/src/main/res/values-zh/strings.xml (4727 tokens)\n> > app/src/main/res/values/colors.xml (161 tokens)\n> > app/src/main/res/values/dimens.xml (26 tokens)\n> > app/src/main/res/values/strings.xml (3221 tokens)\n> > app/src/main/res/values/themes.xml (454 tokens)\n> > app/src/main/res/xml/backup_rules.xml (160 tokens)\n> > app/src/main/res/xml/data_extraction_rules.xml (221 tokens)\n> > app/src/main/resources/META-INF/MANIFEST.MF (205 tokens)\n> > app/mgrs/src/main/res/values/strings.xml (8 tokens)\n> > app/src/androidTest/java/com/openathena/ExampleInstrumentedTest.java (248 tokens)\n> > app/src/main/java/com/openathena/AboutActivity.java (3054 tokens)\n> > app/src/main/java/com/openathena/ActivityLog.java (2599 tokens)\n> > app/src/main/java/com/openathena/AthenaActivity.java (6999 tokens)\n> > app/src/main/java/com/openathena/AthenaApp.java (1627 tokens)\n> > app/src/main/java/com/openathena/CK42_Gauss_Kr\u00fcger_Translator.java (2137 tokens)\n> > app/src/main/java/com/openathena/CoordTranslator.java (778 tokens)\n> > app/src/main/java/com/openathena/CursorOnTargetSender.java (4168 tokens)\n> > app/src/main/java/com/openathena/DEMParser.java (13895 tokens)\n> > app/src/main/java/com/openathena/DTEDParser.java (632 tokens)\n> > app/src/main/java/com/openathena/DroneParameterProvider.java (67 tokens)\n> > app/src/main/java/com/openathena/DroneParametersFromJSON.java (951 tokens)\n> > app/src/main/java/com/openathena/EGM96OffsetAdapter.java (374 tokens)\n> > app/src/main/java/com/openathena/EGMOffsetProvider.java (44 tokens)\n> > app/src/main/java/com/openathena/MainActivity.java (19638 tokens)\n> > app/src/main/java/com/openathena/MarkableImageView.java (5449 tokens)\n> > app/src/main/java/com/openathena/MetadataExtractor.java (15022 tokens)\n> > app/src/main/java/com/openathena/MissingDataException.java (249 tokens)\n> > app/src/main/java/com/openathena/PrefsActivity.java (2144 tokens)\n> > app/src/main/java/com/openathena/RequestedValueOOBException.java (326 tokens)\n> > app/src/main/java/com/openathena/SelectionActivity.java (2161 tokens)\n> > app/src/main/java/com/openathena/TargetGetter.java (6617 tokens)\n> > app/src/main/java/com/openathena/WGS84_CK42_Geodetic_Translator.java (3211 tokens)\n> > app/src/main/java/com/openathena/geodataAxisParams.java (110 tokens)\n> > app/src/main/java/org/slf4j/ILoggerFactory.java (735 tokens)\n> > app/src/main/java/org/slf4j/IMarkerFactory.java (940 tokens)\n> > app/src/main/java/org/slf4j/Logger.java (8492 tokens)\n> > app/src/main/java/org/slf4j/LoggerFactory.java (7159 tokens)\n> > app/src/main/java/org/slf4j/LoggerFactoryFriend.java (280 tokens)\n> > app/src/main/java/org/slf4j/MDC.java (3347 tokens)\n> > app/src/main/java/org/slf4j/Marker.java (1541 tokens)\n> > app/src/main/java/org/slf4j/MarkerFactory.java (1164 tokens)\n> > app/src/main/java/org/slf4j/package.html (91 tokens)\n> > app/src/main/resources/META-INF/proguard/org.threeten.bp.pro (24 tokens)\n> > app/src/main/resources/META-INF/services/org.threeten.bp.zone.ZoneRulesProvider (17 tokens)\n> > app/src/test/java/com/openathena/ExampleUnitTest.java (130 tokens)\n> > app/src/test/java/org/slf4j/BasicMarkerTest.java (2875 tokens)\n> > app/src/test/java/org/slf4j/Differentiator.java (442 tokens)\n> > app/src/test/java/org/slf4j/DoubleCheckedInt.java (2150 tokens)\n> > app/src/test/java/org/slf4j/LoggerAccessingThread.java (845 tokens)\n> > app/src/test/java/org/slf4j/NoBindingTest.java (684 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPConst.java (2660 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPDateTime.java (1171 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPDateTimeFactory.java (1769 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPError.java (292 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPException.java (363 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPIterator.java (954 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPMeta.java (15441 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPMetaFactory.java (3149 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPPathFactory.java (3761 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPSchemaRegistry.java (1806 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPUtils.java (6110 tokens)\n> > app/src/main/java/com/adobe/xmp/XMPVersionInfo.java (342 tokens)\n> > app/src/main/java/com/adobe/xmp/package.html (152 tokens)\n> > app/src/main/java/com/agilesrc/dem4j/BoundingBox.java (1605 tokens)```\n> > \n> > Should we take a look at any files? If so, pick only a few files (max 5000 tokens). \n> > Respond with a very short rationale, and a list of files.\n> > If looking at files would be a waste of time with regard to the issue, respond with an empty list.\n> > ~~~\n> > \n> > </details>\n> > \n> > <details open>\n> > <summary>Response</summary>\n> > \n> > ~~~\n> > To solve the issue, we should look at the files that contain the existing code for dealing with lens distortion in images, or any related calculations. Based on the issue description, the file `app/src/main/java/com/openathena/MetadataExtractor.java` seems to be the main file where the current implementation of ray angle calculation and image resolution scaling is happening. \n> > \n> > Rationale: The provided issue details mention the MetadataExtractor.java file multiple times, indicating that the current implementation of the affected functionality is located there. \n> > \n> > Files to look at:\n> > - `app/src/main/java/com/openathena/MetadataExtractor.java`\n> > - `app/src/main/java/com/openathena/AthenaActivity.java`\n> > - `app/src/main/java/com/openathena/MarkableImageView.java`\n> > - `app/src/main/java/com/openathena/DroneParametersFromJSON.java`\n> > \n> > We should also check the JSON file which contains the drone parameters to make sure we understand the data structure and values. Unfortunately, the file path is not provided in the repo list, so we may need to ask the user for it.\n> > ~~~\n> > \n> > </details>\n> </details>\n> \n> <details open>\n> <summary>\ud83d\udee4 Ran InitialFileSelectResponse on rail</summary>\n> \n> > <details>\n> > <summary>Prompt</summary>\n> > \n> > ~~~xml\n> > \n> > Given the following document surrounded by `+++++`, answer the following questions. \n> > If the answer doesn't exist in the document, enter `null`.\n> > \n> > +++++\n> > To solve the issue, we should look at the files that contain the existing code for dealing with lens distortion in images, or any related calculations. Based on the issue description, the file `app/src/main/java/com/openathena/MetadataExtractor.java` seems to be the main file where the current implementation of ray angle calculation and image resolution scaling is happening. \n> > \n> > Rationale: The provided issue details mention the MetadataExtractor.java file multiple times, indicating that the current implementation of the affected functionality is located there. \n> > \n> > Files to look at:\n> > - `app/src/main/java/com/openathena/MetadataExtractor.java`\n> > - `app/src/main/java/com/openathena/AthenaActivity.java`\n> > - `app/src/main/java/com/openathena/MarkableImageView.java`\n> > - `app/src/main/java/com/openathena/DroneParametersFromJSON.java`\n> > \n> > We should also check the JSON file which contains the drone parameters to make sure we understand the data structure and values. Unfortunately, the file path is not provided in the repo list, so we may need to ask the user for it.\n> > +++++\n> > \n> > Extract information from this document and return a JSON that follows the correct schema.\n> > If looking at files would be a waste of time, please submit an empty list.\n> > \n> > \n> > Given below is XML that describes the information to extract from this document and the tags to extract it into.\n> > \n> > \n> > <output>\n> >     <list name=\"filepaths\">\n> >         <string description=\"Files in this repository that we should look at.\"/>\n> >     </list>\n> > </output>\n> > \n> > \n> > ~~~\n> > \n> > </details>\n> > \n> > <details>\n> > <summary>Raw output</summary>\n> > \n> > ~~~json\n> > {\n> >   \"filepaths\": [\n> >     \"app/src/main/java/com/openathena/MetadataExtractor.java\",\n> >     \"app/src/main/java/com/openathena/AthenaActivity.java\",\n> >     \"app/src/main/java/com/openathena/MarkableImageView.java\",\n> >     \"app/src/main/java/com/openathena/DroneParametersFromJSON.java\"\n> >   ]\n> > }\n> > ~~~\n> > \n> > </details>\n> > \n> > <details>\n> > <summary>Parsed output</summary>\n> > \n> > ~~~json\n> > {\n> >   \"filepaths\": [\n> >     \"app/src/main/java/com/openathena/MetadataExtractor.java\",\n> >     \"app/src/main/java/com/openathena/AthenaActivity.java\",\n> >     \"app/src/main/java/com/openathena/MarkableImageView.java\",\n> >     \"app/src/main/java/com/openathena/DroneParametersFromJSON.java\"\n> >   ]\n> > }\n> > ~~~\n> > \n> > </details>\n> > \n> > <details open>\n> > <summary>Validated output</summary>\n> > \n> > ~~~json\n> > {\n> >   \"filepaths\": [\n> >     \"app/src/main/java/com/openathena/MetadataExtractor.java\",\n> >     \"app/src/main/java/com/openathena/AthenaActivity.java\",\n> >     \"app/src/main/java/com/openathena/MarkableImageView.java\",\n> >     \"app/src/main/java/com/openathena/DroneParametersFromJSON.java\"\n> >   ]\n> > }\n> > ~~~\n> > \n> > </details>\n> </details>\n</details>\n\n<img src=\"https://media0.giphy.com/media/l3nWhI38IWDofyDrW/giphy.gif\" width=\"200\" height=\"200\"/>",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-07-25T23:40:17Z",
                                    "bodyText": "Thank you for your submission! We really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.AutoPR seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it.",
                                    "url": "https://github.com/Theta-Limited/OpenAthenaAndroid/pull/91#issuecomment-1650709622",
                                    "author": {
                                        "login": "CLAassistant"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjM=",
                "hasNextPage": false,
                "hasPreviousPage": false,
                "startCursor": "Y3Vyc29yOjE="
            },
            "issueCount": 3
        }
    }
}