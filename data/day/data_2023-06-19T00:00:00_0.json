{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 45,
                        "title": "[ feature ] \u81ea\u8a02 Avatar \u5143\u4ef6\uff0c\u986f\u793a\u540d\u5b57\u9996\u5b57\u548c\u4e82\u6578\u80cc\u666f\u8272",
                        "repository": {
                            "nameWithOwner": "Feijai/Lunar",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-06-19T16:38:16Z",
                        "mergedAt": "2023-06-20T01:41:54Z",
                        "url": "https://github.com/Feijai/Lunar/pull/45",
                        "state": "MERGED",
                        "author": {
                            "login": "Hsinny"
                        },
                        "editor": null,
                        "body": "### \u81ea\u8a02 Avatar \u5143\u4ef6\r\n\r\n**Knowhow**\r\nhttps://chat.openai.com/share/599180fe-139b-4f23-9ca5-16cec245301a",
                        "comments": {
                            "nodes": []
                        },
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 8,
                        "title": "[TAS-10]Connection between the server and the client",
                        "repository": {
                            "nameWithOwner": "Miller-RS/DistributedMiningNetwork",
                            "primaryLanguage": {
                                "name": "Java"
                            }
                        },
                        "createdAt": "2023-06-19T03:21:01Z",
                        "mergedAt": "2023-06-19T04:12:14Z",
                        "url": "https://github.com/Miller-RS/DistributedMiningNetwork/pull/8",
                        "state": "MERGED",
                        "author": {
                            "login": "getavi"
                        },
                        "editor": null,
                        "body": "Connection between the server and the client, with sending a message from both sides.",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-06-19T03:24:35Z",
                                    "bodyText": "Crear una clase Java que genere una lista de palabras y la env\u00ede a los mineros a trav\u00e9s de una conexi\u00f3n de red utilizando su protocolo de comunicaci\u00f3n deseado. @https://chat.openai.com/share/29174ecb-3071-4ae2-bfc4-f332e91b0fb6",
                                    "url": "https://github.com/Miller-RS/DistributedMiningNetwork/pull/8#issuecomment-1596437152",
                                    "author": {
                                        "login": "notion-workspace"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "todo bien, se procede con la integracion",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 379,
                        "title": "HTTPS support for Prometheus Exporter",
                        "repository": {
                            "nameWithOwner": "nickbabcock/OhmGraphite",
                            "primaryLanguage": {
                                "name": "C#"
                            }
                        },
                        "createdAt": "2023-06-19T23:46:30Z",
                        "mergedAt": "2023-07-06T21:55:02Z",
                        "url": "https://github.com/nickbabcock/OhmGraphite/pull/379",
                        "state": "MERGED",
                        "author": {
                            "login": "roy-spark"
                        },
                        "editor": null,
                        "body": "Now possible to configure Prometheus config to enable HTTPS support. Readme also updated to reflect changes.\r\n\r\nAs discussed https://github.com/nickbabcock/OhmGraphite/issues/377.\r\n\r\nBest Regards,",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-06-20T00:59:04Z",
                                    "bodyText": "Looks good, do you have instructions that you used so I can test them out (ie: any openssl or powershell commands)?",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1597921981",
                                    "author": {
                                        "login": "nickbabcock"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-20T10:15:07Z",
                                    "bodyText": "Looks good, do you have instructions that you used so I can test them out (ie: any openssl or powershell commands)?\n\nSure,\nOther than having the option true in the config file simply follow the netsh-version of this guide:\nhttps://learn.microsoft.com/en-us/dotnet/framework/wcf/feature-details/how-to-configure-a-port-with-an-ssl-certificate\nIt's basically attaching a cert to a port (which must be the same port as in the application).",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1598501152",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-21T10:32:44Z",
                                    "bodyText": "Sure,\nOther than having the option true in the config file simply follow the netsh-version of this guide:\nhttps://learn.microsoft.com/en-us/dotnet/framework/wcf/feature-details/how-to-configure-a-port-with-an-ssl-certificate It's basically attaching a cert to a port (which must be the same port as in the application).\n\nThat's good news, though I know cert generation, windows config, and then prometheus config will be a source of confusion / overwhelming for others, so I'm interested in providing a minimal, no-nonsense list of commands and instructions that can be included in the readme (like no need to have instructions mention httpcfg). So any help you can provide in fleshing out these instructions would be greatly appreciated, as I'll most likely be the one fielding all future ssl questions, so future users and myself will thank you\ud83d\ude04\nEven if it is just in PR description (and I can subsequently update the readme).",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1600593325",
                                    "author": {
                                        "login": "nickbabcock"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-25T15:41:47Z",
                                    "bodyText": "I could do that.\nHowever this is due to the dependency of WCF that Prometheus-net has.\nThe link for enabling it actually came indirectly from you from the issue post reply with quote you had ;)",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1606137975",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                },
                                {
                                    "createdAt": "2023-06-26T23:35:55Z",
                                    "bodyText": "Yeah I think when considering the audience of who is reading the OhmGraphite readme, I don't want to assume experience with the following:\n\nCert generation\nCert installation on windows\nCert bindings (the microsoft link covers this, though I think finding the thumbprint may not be needed if we are generating the cert as we might have the thumbprint already handy)\nPrometheus configuration (ie: scheme: https and tls_config.insecure_skip_verify: true)\n\nThere's a lot of things that can go wrong, and since I'd be on the hook to help issues that arise, it is in my best interest to have tailored instructions at the ready to help budding admins.\nLet me know if you think you're not well suited to write this, but we'll want something before this is released.",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1608464033",
                                    "author": {
                                        "login": "nickbabcock"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-01T21:18:47Z",
                                    "bodyText": "Well.\nI cab write some thing. But it makes no sense that someone that uses Prometheus and ohmgraohite can't follow a short official documentation.\nAfter all, I would then argue that they shouldn't be doing Prometheus if they can't move a cert to trust store.\nEither we make a ps script that covers 90% of all use cases. Or we make a very simple todo",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1616135212",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-01T21:21:59Z",
                                    "bodyText": "Prometheus themselves serve tls as an experimental feature for similar reasons",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1616136994",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-01T21:26:12Z",
                                    "bodyText": "Moreover , everyone working with tls knows today that it must pass online acme check for passing tls verification...\nMaybe mark it as as a function for advanced users..\nTo front with a reverse proxy is essentially the same complexity (if not more) .\nSo if one wants tls there today there are few ways to go",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1616140761",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-01T21:28:32Z",
                                    "bodyText": "Until we/you decide have it merged in a experiential/tls-mode-prometheus branch so we who wants it can always rebase it .",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1616143235",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-02T13:14:11Z",
                                    "bodyText": "How about this (I'd update the readme after merging this):\n\nTo setup HTTPS communication with a self signed certificate between OhmGraphite and Prometheus:\n# Create a new self signed certificate with a subject equal to host used to\n# access OhmGraphite. If an IP address is used to access OhmGraphite, the\n# you'll need the IPAddress field, otherwise the `TextExtension` param can be\n# replaced with the DnsName param.\n$params = @{\n  FriendlyName = 'OhmGraphite'\n  Subject = '10.0.0.200'\n  TextExtension = @('2.5.29.17={text}&IPAddress=10.0.0.200')\n}\n$cert = New-SelfSignedCertificate @params\n$thumb = $cert.Thumbprint\n\n# Export and then import our cert into Windows certificate store\nExport-Certificate -Cert $cert -FilePath ohmgraphite.cer\nImport-Certificate -FilePath .\\ohmgraphite.cer -CertStoreLocation Cert:\\LocalMachine\\Root\n\n# Bind our cert to the port OhmGraphite is listening on\nnetsh http add sslcert ipport=0.0.0.0:4445 certhash=$thumb\nEnable https in OhmGraphite.exe.config\n     <add key=\"type\" value=\"prometheus\" />\n     <add key=\"prometheus_port\" value=\"4445\" />\n     <add key=\"prometheus_host\" value=\"*\" />\n+    <add key=\"prometheus_https\" value=\"true\" />\nThen update the prometheus config to expect our certificate without verification:\n   - job_name: 'ohmgraphite'\n+    scheme: https\n+    tls_config:\n+      insecure_skip_verify: true\n     static_configs:\n     - targets: ['10.0.0.200:4445']\n\nIn order to have prometheus verify against a self signed certificate, the certificate must be converted into a format prometheus understands:\nopenssl x509 -inform der -in ohmgraphite.cer -out ohmgraphite.pem\n\nAnd then the config can be updated:\n   - job_name: 'ohmgraphite'\n     scheme: https\n     tls_config:\n+      ca_file: /etc/prometheus/ohmgraphite.pem\n-      insecure_skip_verify: true\n     static_configs:\n     - targets: ['10.0.0.200:4445']\nExcept this doesn't work. Prometheus starts up fine, but doesn't seem to make successful queries, and errors aren't logged.\nThis sounds like your area of expertise. Mind lending a hand to figure out how the last step can succeed, so insecure_skip_verify isn't required?",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1616657702",
                                    "author": {
                                        "login": "nickbabcock"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-02T13:42:38Z",
                                    "bodyText": "I'll give a better explanation during the week but it is based on the new way HTTPS is validated. Basically the hostname one wants a valid handshake must be online at one point in time to do a ACME check. This makes hostnames that can't be accessible from internet can never get a fully valid TLS. However that is authentication. Not encryption.\nSo if you have a subnet inside office with a server foo you will never be able to get it to be fully \"verified\".\nHowever, if you own yourdomain.com you may set it up ACME validation for foo.yourdomain.com at one point then pull that subdomain off the internet . In that way you may have verify tls on even though it's not accessible on the net anymore.\nBut as I said, we will try to find a compromise for all use cases without making the documentation too long or boring.\nI've just been a bit busy latest days\nBest regards,",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1616665951",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-02T14:23:20Z",
                                    "bodyText": "Does the ps script do the same as in the ms guide btw?",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1616680299",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-02T14:30:49Z",
                                    "bodyText": "Ok, take your time. When you get around to it maybe you can clarify some confusion I have. afaik, ACME checks are only for ACME CAs that have an DNS or HTTP challege. Like typically any sort of paid for cert, won't pass an ACME check (like github.com), as the only thing that matters to clients is that the cert chain validates against an installed root certificate. So I'm not sure a cert being issued through ACME is an important distinction. How certs are issued have definitely changed in the last decade, but client validation has remained the same (well, perhaps aside from the importance of SANs for Chrome)\n\nDoes the ps script do the same as in the ms guide btw?\n\nYeah the script works using the same netsh http add sslcert command found in the guide.",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1616682254",
                                    "author": {
                                        "login": "nickbabcock"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-02T16:52:21Z",
                                    "bodyText": "https://chat.openai.com/share/0b9e90b1-2a60-43da-864e-eeef47d48fb2\nI should've formed the question a bit better but maybe you get the hint.",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1616729656",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-02T17:36:03Z",
                                    "bodyText": "I'm not sure what is trying to be conveyed. Chatgpt is giving reasons for why validation might fail, which is not the same as saying validation is impossible.\nIf the self signed certificate is imported on the client, then the client will consider communication with self signed certificate valid. That's what I was going for by importing the self signed certificate into prometheus with ca_file.",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1616744784",
                                    "author": {
                                        "login": "nickbabcock"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-02T17:39:37Z",
                                    "bodyText": "So, validation is possible if you own the hostname online. Better that I\u2019ll come back with hard info rather than chatgpt ,)\n\n\nBut read the last piece , that authenticity of  certificate is the \u201cproblem\" in these scenarios hence the need for skip tls verify\n\n\nPs. Trust me, this part is really confusing and you're not alone. Was not long time until I realized why I couldn't make my own self signed certificates work within my own subnet .\n\nBut the simple assumption that loading the client with the same certificate is enough doesn't hold anymore due to changes of the authentication process.",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1616746054",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-03T14:08:52Z",
                                    "bodyText": "Well, this is one of the issues:\n(Quoting ChatGPT)\nAbsence of certificate revocation checks: Certificate revocation checks require contacting the issuing CA or an online revocation list (CRL). Without internet connectivity, the servers won't be able to verify if the certificate has been revoked.\nThis can be solved with OSCP stapling.\nA full TLS cert verification is very strict as you can imagine. The better way is to find a way to make softer verifications (i.e. accept given key) - not caring if it is revoked or else.",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1618379880",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-03T21:13:33Z",
                                    "bodyText": "Maybe this is a different way of thinking about it.\n\nself-signed certificates are by definition root certificates\n[ref]\n\nSaying a self signed certificate can't be considered verified is like saying all root certificates can't be verified (which, if true, would mean all certs can't be verified).\nAs for revocation checks, the root certificate is the issuing CA and won't be able to revoke itself. That's why it is such a big deal if a root certificate does need to be revoked\nThe only thing that is necessary for a client to trust a new root certificate, is to have it imported (ie: my intentions with ca_file).\nHow to import this cert is different depending on the context. For curl, it looks like:\ncurl --cacert ohmgraphite.pem 'https://10.0.0.200:4445/metrics'\nIn debugging this problem, I was able to get prometheus to print out the error:\n\nlevel=debug ts=2023-07-03T14:59:21.913Z caller=scrape.go:1262 component=\"scrape manager\" scrape_pool=ohmgraphite target=https://10.0.0.200:4445/metrics msg=\"Scrape failed\" err=\"Get \\\"https://10.0.0.200:4445/metrics\\\": x509: certificate relies on legacy Common Name field, use SANs instead\"\n\n\nTurns out the trick was to tweak the cert generation to output a SAN IP (updated original instructions with this).\n$params = @{\n  FriendlyName = 'OhmGraphite'\n  Subject = '10.0.0.200'\n  TextExtension = @('2.5.29.17={text}&IPAddress=10.0.0.200')\n}\n$cert = New-SelfSignedCertificate @params\nI'm happy with this (I'll include a note that dns users will want a slightly different command).\nLet me know if you have any closing thoughts. I'll be merging this in a couple days.",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1619156863",
                                    "author": {
                                        "login": "nickbabcock"
                                    }
                                },
                                {
                                    "createdAt": "2023-07-04T13:44:07Z",
                                    "bodyText": "Great job!\nI'll have to verify it but sounds promising.",
                                    "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#issuecomment-1620278065",
                                    "author": {
                                        "login": "roy-spark"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "There are incorrect indentations on the other lines. Some are space and some are tabs - so i left it at tab instead of changing the whole section or continuing the discrepancy.",
                                                        "author": {
                                                            "login": "roy-spark"
                                                        },
                                                        "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#discussion_r1234561633",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "eb26387",
                                                            "authoredDate": "2023-06-19T23:43:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'm assuming this is an unused import",
                                                        "author": {
                                                            "login": "nickbabcock"
                                                        },
                                                        "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#discussion_r1234580355",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "eb26387",
                                                            "authoredDate": "2023-06-19T23:43:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Correct, Visual Studio tried to be smart or something...",
                                                        "author": {
                                                            "login": "roy-spark"
                                                        },
                                                        "url": "https://github.com/nickbabcock/OhmGraphite/pull/379#discussion_r1235052160",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "eb26387",
                                                            "authoredDate": "2023-06-19T23:43:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "title"
                        },
                        {
                            "property": "body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjM=",
                "hasNextPage": false,
                "hasPreviousPage": false,
                "startCursor": "Y3Vyc29yOjE="
            },
            "issueCount": 3
        }
    }
}