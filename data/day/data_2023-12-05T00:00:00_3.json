{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 22,
                        "title": "ODY-276 About\u30da\u30fc\u30b8\u306e\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u5bfe\u5fdc",
                        "repository": {
                            "nameWithOwner": "daydule/odyssey-frontend",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-12-16T02:35:41Z",
                        "mergedAt": "2023-12-27T12:46:54Z",
                        "url": "https://github.com/daydule/odyssey-frontend/pull/22",
                        "state": "MERGED",
                        "author": {
                            "login": "atoook"
                        },
                        "editor": {
                            "login": "atoook"
                        },
                        "body": "# \u4e8b\u524d\u78ba\u8a8d\r\n\r\n- [x] PR\u524d\u306b\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u305f\u304b\r\n- [x] \u6a5f\u5bc6\u60c5\u5831\u3092\u542b\u3093\u3067\u3044\u306a\u3044\u304b\r\n- [x] [\u958b\u767a\u30eb\u30fc\u30eb](https://daydule.atlassian.net/wiki/spaces/DAYDULE/pages/9765029)\u3092\u5b88\u3063\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u304b\r\n- [x] \u5358\u4f53\u30c6\u30b9\u30c8\u304c\u5168\u3066OK\u306b\u306a\u3063\u3066\u3044\u308b\u304b\uff08\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5834\u5408SKIP\uff09\r\n- [x] \u6700\u65b0\u306e`develop`\u30d6\u30e9\u30f3\u30c1\u3092\u53cd\u6620\u3057\u3066\u3044\u308b\u304b\r\n- [x] \u30d3\u30eb\u30c9\u30a8\u30e9\u30fc/ESLint\u30a8\u30e9\u30fc\u306f\u8d77\u304d\u3066\u3044\u306a\u3044\u304b\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u512a\u5148\u5ea6\uff08\u3069\u308c\u304b\u4e00\u3064\uff09\r\n\r\n- [ ] \u3059\u3050\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] 3\u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] 7\u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u306e\u5ea6\u5408\u3044\r\n\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3057\u3063\u304b\u308a\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30ef\u30fc\u306b\u3088\u308b\u52d5\u4f5c\u78ba\u8a8d\r\n\r\n- [ ] @tom-takeru \r\n- [ ] @Mellbrother \r\n- [ ] @kzk27 \r\n\r\n# \u3084\u3063\u305f\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n- \u4ee5\u4e0b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u5bfe\u5fdc\r\n AboutCardWithImage\r\n AboutCardWithText\r\n- AboutCardWithImage\u306eisImageLeft Props\u3092\u524a\u9664\u3057\u3066\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u81ea\u4f53\u3092Left/Right\u306b\u5206\u5272\uff08\u4f1a\u8b70\u3067\u5171\u6709\u6e08\uff09\r\n \u203b\u7406\u7531\uff11\uff1a\u753b\u9762\u30b5\u30a4\u30ba\u53d6\u5f97\u5f8c\u306bisImageLeft\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u51fa\u3057\u308f\u3051\u3057\u3088\u3046\u3068\u3059\u308b\u3068ssr\u51fa\u6765\u306a\u304f\u306a\u308b\u305f\u3081\r\n \u203b\u7406\u7531\uff12\uff1aAboutCardWithImage\u3092csr\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3068\u3053\u308d\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9NG\u304c\u89e3\u6d88\u3067\u304d\u306a\u304b\u3063\u305f\u305f\u3081 \r\n\r\n# \u3084\u3089\u306a\u3044\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u3066\u3082\u304a\u304b\u3057\u304f\u306a\u3044\u3051\u3069\u3084\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u304a\u3051\u308b\u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u305d\u306e\u4ed6<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u4e0a\u8a18\u306e\u9805\u76ee\u4ee5\u5916\u306b\u4f1d\u3048\u308b\u3079\u304d\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "\u4ee5\u4e0b\u3092\u5225\u30c1\u30b1\u30c3\u30c8\u3067\u5bfe\u5fdc\u3059\u308b\u5206\u3068\u3057\u3066\u8d77\u7968\u3057\u307e\u3057\u305f\uff01\n\u3053\u306ePR\u304c\u30de\u30fc\u30b8\u3055\u308c\u3066\u304b\u3089\u3001\u3069\u3053\u304b\u3067\u512a\u5148\u5ea6\u3092\u898b\u3066\u3084\u308a\u307e\u3057\u3087\u3046\uff01\n\u672cPR\u3067\u5bfe\u5fdc\u53ef\u80fd\u3067\u3057\u305f\u3089\u3001\u5bfe\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u30c1\u30b1\u30c3\u30c8\u3092\u524a\u9664\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\uff01\n\nAboutCardWithText.tsx\u3000\u304c\u30e2\u30d0\u30a4\u30eb\u306e\u6642\u306b\u753b\u9762\u3044\u3063\u3071\u3044\u306b\u5e83\u304c\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u4fee\u6b63\nAboutCardWith(Right/Left).stories.tsx\u306b\u30b9\u30de\u30db\u5e45\u3067\u306e\u30b9\u30c8\u30fc\u30ea\u3092\u8ffd\u52a0\n\n1\u306b\u3064\u3044\u3066",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u3053\u308c\u3063\u3066\u306a\u3093\u306e\u305f\u3081\u306b\u5165\u308c\u305f\u3093\u3067\u3059\u304b\uff1f",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436242042",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ChatGPT\u306b\u8cea\u554f\u3060\u3051\u3057\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u3001\u77e5\u3089\u3093\u3068\u8a00\u308f\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3001\u3001\u3001\u3002\nhttps://chat.openai.com/share/adc90fb5-54c2-4f1c-8b17-e2928e556b02",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436248823",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@tom-takeru\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b.tsx\u306e\u62e1\u5f35\u5b50\u3092\u3064\u3051\u3066import\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u3059\u304c\uff08\u4fee\u6b63\u524d\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u8ffd\u52a0\u3057\u305f\u8a18\u61b6\u304c\u3042\u308a\u307e\u3059\uff09\u304c\u3001\u4e0d\u8981\u306a\u306e\u3067\u524a\u9664\u3057\u307e\u3059\u3002\nimport { XXX } from 'XXXX.tsx';",
                                                        "author": {
                                                            "login": "atoook"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436360202",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM\uff01 \ud83d\udc24",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 904,
                        "title": "\u6574\u7406: \u7591\u554f\u5f62 upspeak \u306e\u5358\u7d14\u5316",
                        "repository": {
                            "nameWithOwner": "VOICEVOX/voicevox_engine",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-12-19T08:22:22Z",
                        "mergedAt": "2023-12-21T05:24:41Z",
                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904",
                        "state": "MERGED",
                        "author": {
                            "login": "tarepan"
                        },
                        "editor": {
                            "login": "tarepan"
                        },
                        "body": "## \u5185\u5bb9\r\n\u6982\u8981: \u7591\u554f\u5f62 upspeak \u51e6\u7406\u306e\u5358\u7d14\u5316\u306b\u3088\u308b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0  \r\n\r\n\u30cd\u30b9\u30c8\u306e\u89e3\u6d88\u30fb\u51e6\u7406\u306e\u7c21\u7d20\u5316\u306b\u3088\u3063\u3066\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3092\u304a\u3053\u306a\u3063\u305f\u3002  \r\n\r\n## \u95a2\u9023 Issue\r\npart of #897\r\n\r\n## Reviewer \u5411\u3051\u60c5\u5831\r\n3\u3064\u306e\u95a2\u6570\u30cd\u30b9\u30c8\u3092\u524a\u9664\u3057\u305f\u305f\u3081\u3001diff \u304c\u6a5f\u80fd\u3057\u3066\u3044\u307e\u305b\u3093\u3002  \r\ncommit \u3054\u3068\u306b 1 \u3064\u306e\u95a2\u6570\u3092\u524a\u9664\u3057\u305f\u305f\u3081\u3001\u30ec\u30d3\u30e5\u30fc\u6642\u306b\u306f commit log \u3092\u53c2\u7167\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002  ",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u3053\u306e\u5909\u66f4\u3067\u3059\u304c\u3001\u4e00\u822c\u7684\u306b\u306f\u95a2\u6570\u5074\u306b\u30d5\u30e9\u30b0\u3092\u4e0e\u3048\u3066\u3069\u3046\u3059\u308b\u304b\u3092\u59d4\u306d\u308b\u3088\u308a\u3082\u3001\u5358\u4e00\u51e6\u7406\u3092\u884c\u3046\u95a2\u6570\u306b\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u3055\u308c\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nChatGPT\u306b\u4e21\u8005\u306e\u30e1\u30ea\u30c3\u30c8\u3092\u805e\u3044\u3066\u307f\u305f\u611f\u3058\u3001\u3053\u306e\u8fd4\u7b54\u304c\u81ea\u5206\u306e\u8003\u3048\u3068\u8fd1\u304b\u3063\u305f\u3067\u3059\u3002\nhttps://chat.openai.com/share/cb0a7a43-fbff-4876-801a-921c90ed5618\n\u4f55\u304b\u3053\u3046\u3057\u3066\u3044\u308b\u610f\u56f3\u304c\u3042\u308c\u3070\u77e5\u308a\u305f\u3044\u3067\u3059\uff01",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433359944",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u4e00\u822c\u7684\u306b\u306f ... \u5358\u4e00\u51e6\u7406\u3092\u884c\u3046\u95a2\u6570\u306b\u3059\u308b\u306e\u304c\u826f\u3044\n\n\ud83d\udc4d\n\u4e00\u822c\u8ad6\u3068\u3057\u3066\u540c\u610f\u3067\u3059\u3002\n\n\u3053\u3046\u3057\u3066\u3044\u308b\u610f\u56f3\u304c\u3042\u308c\u3070\n\n\u300cupspeak \u9069\u7528\u6709\u7121\u542b\u3081\u3066 1 \u6a5f\u80fd\u3068\u307f\u306a\u3057\u3001\u53b3\u5bc6\u306b\u30c6\u30b9\u30c8\u3067\u304d\u308b\u304b\u3089\u300d\u304c\u610f\u56f3/\u7406\u7531\u3067\u3059\u3002\n\u73fe\u5728\u306e test_synthesis_engine_base.py \u3067\u306f spy \u306b\u7528\u3044\u3066 .synthesis() \u306e\u4e00\u90e8\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n  \n    \n      voicevox_engine/test/test_synthesis_engine_base.py\n    \n    \n        Lines 214 to 218\n      in\n      831d28a\n    \n  \n  \n    \n\n        \n          \n           self.synthesis_engine.synthesis( \n        \n\n        \n          \n               query, 0, enable_interrogative_upspeak=enable_interrogative_upspeak \n        \n\n        \n          \n           ) \n        \n\n        \n          \n           # _synthesis_impl\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u4e0e\u3048\u3089\u308c\u305fquery\u3092\u691c\u8a3c \n        \n\n        \n          \n           actual = self.synthesis_engine._synthesis_impl.call_args[0][0].accent_phrases \n        \n    \n  \n\n\n\n  \n    \n      voicevox_engine/test/test_synthesis_engine_base.py\n    \n    \n        Lines 255 to 259\n      in\n      831d28a\n    \n  \n  \n    \n\n        \n          \n           self.create_synthesis_test_base( \n        \n\n        \n          \n               text=\"\u3053\u308c\u306f\u3042\u308a\u307e\u3059\u304b\uff1f\", \n        \n\n        \n          \n               expected=expected, \n        \n\n        \n          \n               enable_interrogative_upspeak=False, \n        \n\n        \n          \n           ) \n        \n    \n  \n\n\n\u3053\u306e\u30c6\u30b9\u30c8\u5bfe\u8c61\u9818\u57df\u304c\u300cupspeak \u9069\u7528\u6709\u7121 + upspeak\u9069\u7528\u300d\u3064\u307e\u308a\u4eca\u56de\u5207\u308a\u51fa\u3055\u308c\u305f apply_interrogative_upspeak() \u306b\u76f8\u5f53\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u73fe\u5728\u306e\u30c6\u30b9\u30c8\u3067\u306f\u3053\u306e\u30b3\u30fc\u30c9\u3092 enable_interrogative_upspeak \u30d5\u30e9\u30b0\u5024\u3092\u5909\u3048\u306a\u304c\u3089\u5e45\u5e83\u3044\u30d1\u30bf\u30fc\u30f3\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5e45\u5e83\u3055\u306fupspeak\u6709\u7121\u306e\u30d0\u30b0\u304c\u54c1\u8cea\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u305f\u3081\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n#899 \u3067\u8b70\u8ad6\u3055\u308c\u305f\u3088\u3046\u306b .synthesis() \u306e\u5165\u529b\u8a2d\u5b9a\u5168\u30d1\u30bf\u30fc\u30f3\u30c6\u30b9\u30c8\u306f\u4e0d\u53ef\u80fd\u3067\u3059\u3002\n\u3053\u308c\u304c\u7406\u7531\u3067\u3001\u30d5\u30e9\u30b0\u3092\u5916\u306b\u51fa\u3059\u3068\u73fe\u884c\u306e\u300cenable_interrogative_upspeak \u30d5\u30e9\u30b0\u5024\u3092\u5909\u3048\u306a\u304c\u3089\u5e45\u5e83\u3044\u30d1\u30bf\u30fc\u30f3\u300d\u3092\u6368\u3066\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\nenable_interrogative_upspeak \u30d5\u30e9\u30b0\u3092 upspeak \u91cf\u3092\u8abf\u6574\u3059\u308b\u4f55\u304b\u3068\u898b\u505a\u3057\u3066\u3057\u307e\u3048\u3070\u3001apply_interrogative_upspeak() \u306e\u5f15\u6570\u306b\u8abf\u6574\u8a2d\u5b9a\u5024\u304c\u5165\u308b\u306e\u306f\u305d\u3053\u307e\u3067\u9055\u548c\u611f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3088\u3063\u3066 upspeak\u9069\u7528\u6709\u7121\u542b\u3081\u3066 1 \u6a5f\u80fd\u3068\u307f\u306a\u3059\u306e\u306f\uff08\u5c11\u306a\u304f\u3068\u3082\uff09\u304a\u304b\u3057\u306a\u3053\u3068\u3067\u306f\u306a\u304f\u3001\u4ed6\u306e\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8\u3067\u30d5\u30e9\u30b0\u3092\u5f15\u6570\u306b\u3059\u308b\u304b\u5426\u304b\u6c7a\u3081\u3066\u826f\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u89b3\u70b9\u3092\u7dcf\u5408\u3057\u305f\u7d50\u679c\u3001\u9069\u7528\u6709\u7121\u542b\u30811\u6a5f\u80fd\u3068\u898b\u505a\u3057\u3066\u73fe\u884c\u306e\u5e45\u5e83\u3044\u30c6\u30b9\u30c8\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u6700\u5584\u3068\u8003\u3048\u3001\u4e00\u822c\u8ad6\u3068\u306f\u7570\u306a\u308b\u5207\u308a\u51fa\u3057\u65b9\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u8ffd\u8a18:\n\u5c06\u6765\u306e\u65b9\u5411\u6027\u3068\u3057\u3066\u3001\n\n#897 \u304c\u9032\u884c\u3057\u3066 .synthesis() \u3068 ._synthesis_impl() \u304c\u7d71\u5408\nquery_to_decoder_feature() \u5185\u3078\u672c PR \u306e apply_interrogative_upspeak() \u3092\u79fb\u690d\n\u4ed6\u306e apply \u95a2\u6570\u9054\u3068\u4e26\u3076\n\n\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\uff08\u4e0b\u30b3\u30fc\u30c9\u306f\u6700\u7d42\u72b6\u614b\u306e\u30a4\u30e1\u30fc\u30b8\uff09\ndef query_to_decoder_feature(query) -> tuple[ndarray, ndarray]:\n    accent_phrases = query.accent_phrases\n    # \u8a2d\u5b9a\u3092\u9069\u7528\u3059\u308b\n    accent_phrases = apply_interrogative_upspeak(accent_phrases, query) # query\u5185upspeak\u30d5\u30e9\u30b0\n    moras = apply_prepost_silence(to_flatten_moras(accent_phrases), query)\n    moras = apply_speed_scale(moras, query)\n    moras = apply_pitch_scale(moras, query)\n    ...",
                                                        "author": {
                                                            "login": "tarepan"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433424756",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u306a\u308b\u307b\u3069\u3067\u3059\uff01\uff01\n\u5c11\u306a\u304f\u3068\u3082\u4eca\u306ePR\u306eapply_interrogative_upspeak\u95a2\u6570\u306f\u3001query\u30af\u30e9\u30b9\uff08\u3064\u307e\u308a\u95a2\u6570\u306e\u8cac\u52d9\u7bc4\u56f2\u5916\uff09\u306benable_interrogative_upspeak\u304c\u3042\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u306a\u3044\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u3060\u3051\u898b\u305f\u5834\u5408\u306b\u3001\u306a\u305c\u3053\u306e\u30d5\u30e9\u30b0\u304c\u3042\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u306a\u3068\u3002\nquery\u305d\u306e\u3082\u306e\u3092\u6e21\u3059\u8a2d\u8a08\u3092\u4e88\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u8a71\u306f\u5225\u3067\u3057\u305f\u3002\u3044\u3063\u305f\u3093NOTE\u30b3\u30e1\u30f3\u30c8\u304c\u6709\u308b\u3068\u826f\u3044\u306e\u304b\u306a\u3068\uff01\n\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u30de\u30fc\u30b8\u3055\u305b\u3066\u3044\u305f\u3060\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff01",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433522317",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                \"\"\"\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5404\u30a2\u30af\u30bb\u30f3\u30c8\u53e5\u306e\u672b\u5c3e\u3078\u7591\u554f\u5f62\u30e2\u30fc\u30e9\uff08\u540c\u4e00\u6bcd\u97f3\u30fb\u7d99\u7d9a\u9577 0.15\u79d2\u30fb\u97f3\u9ad8\u2191\uff09\u3092\u4ed8\u4e0e\u3059\u308b\"\"\"\n          \n          \n            \n                \"\"\"\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5404\u30a2\u30af\u30bb\u30f3\u30c8\u53e5\u306e\u672b\u5c3e\u3078\u7591\u554f\u5f62\u30e2\u30fc\u30e9\uff08\u540c\u4e00\u6bcd\u97f3\u30fb\u7d99\u7d9a\u9577 0.15\u79d2\u30fb\u97f3\u9ad8\u2191\uff09\u3092\u4ed8\u4e0e\u3059\u308b\"\"\"\n          \n          \n            \n                # NOTE: \u5c06\u6765\u7684\u306bAudioQuery\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f15\u6570\u306b\u3059\u308b\u4e88\u5b9a",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433523753",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM\uff01\uff01\uff01",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 122355,
                        "title": "Kube-proxy/nftables: allow \"numgen inc\"",
                        "repository": {
                            "nameWithOwner": "kubernetes/kubernetes",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-12-17T10:03:18Z",
                        "mergedAt": null,
                        "url": "https://github.com/kubernetes/kubernetes/pull/122355",
                        "state": "CLOSED",
                        "author": {
                            "login": "uablrek"
                        },
                        "editor": {
                            "login": "uablrek"
                        },
                        "body": "This makes the nftables proxier distribute traffic in the same way as proxy-mode=ipvs with the \"rr\" scheduler\r\n\r\n\r\n#### What type of PR is this?\r\n\r\n/kind feature\r\n/sig network\r\n/area kube-proxy\r\n\r\n#### What this PR does / why we need it:\r\n\r\nExisting users of proxy-mode=ipvs may feel more comfortable if they can keep the round-robin distribution when upgrading to proxy-mode=nftables.\r\n\r\nIt should be noted that the same limitation applied for nftables with \"random inc\" as for ipvs/rr: the individual kube-proxy instances on the nodes are not coordinated, but distribute individually. And different schedulers are not possible, as in \"ipvs\".\r\n\r\n#### Which issue(s) this PR fixes:\r\n\r\nN/A\r\n\r\n#### Special notes for your reviewer:\r\n\r\nFor start this is a PoC.\r\n\r\nA more suitable name than `numgen` should probably be used in the proxier structure. Trying to look into the future, one might expect some new features in nftables, like maglev-hashing\", and make it possible to configure those future things without altering the config API, just use a new value for some distribution parameter.\r\n\r\n#### Does this PR introduce a user-facing change?\r\n\r\n```release-note\r\nAllow users to configure the distribution in proxy-mode=nftables to mimic proxy-mode=ipvs with round-robin\r\n```\r\n\r\n#### Additional documentation e.g., KEPs (Kubernetes Enhancement Proposals), usage docs, etc.:\r\n\r\n\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "is the plan to make this a configuration option like in ipvs?\n\t// scheduler is the IPVS scheduler to use\n\tScheduler string `json:\"scheduler\"`",
                                                        "author": {
                                                            "login": "aojea"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430695581",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "this is going to be a bit of bikeshedding, but random seems to be a better default since is the one used by cilium and kube-proxy iptables, that I are used more than ivps https://gist.github.com/aojea/5f82db3ba5f1efd59bb73f4b28614a6a",
                                                        "author": {
                                                            "login": "aojea"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430698073",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I kind of agree. Random is random, but people expect too much of other schedulers, even \"rr\". Like the endless discussion of \"initial distribution\", mentioned for instance in #121591 (comment). Even maglev-hashing doesn't work out-of-the-box in the way people expect.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430938479",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "No plan at the moment. I just read the nft doc's and saw that it can be done. Easily.\nBut I can't say I have any strong opinions about it, except that is may make some current users of ipvs more comfortable with the upgrade as mentioned in the description. But people may select ipvs for other reasons than \"rr\", e.g. get rid of the \"probability chain\" in iptables, that can look horrible for many endpoints, or simply that they know ipvs and it's easier to understand (my case). Or they want another scheduler, which can't be supported by nftables anyway.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430943279",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I made some experiments of my own with K8s load-balancing, but without any http considerations, only plain tcp connects, at: https://github.com/uablrek/xcluster-ovls/tree/main/k8s-load-balancing\nThe hardest part was to create the table with Unix/Linux commands, please see:\nhttps://github.com/uablrek/xcluster-ovls/blob/510cca913b632ae0a8506c45bf69d92bc1e6373e/k8s-load-balancing/k8s-load-balancing.sh#L72",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1430954376",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "But yes, my thought was a config option.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431253807",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ChatGPT thinks IPTables proxy uses round-robbin algorithm, directing new requests to next destination in the list of pods.  Maybe that is what people think/expect in general - round-robin rather than random \ud83e\udd14\nhttps://chat.openai.com/share/20271990-883b-476b-b5b0-3c2d2b7efbaf",
                                                        "author": {
                                                            "login": "aroradaman"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431275620",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It should be configurable. For now random, round-robin and hash could be supported, https://wiki.nftables.org/wiki-nftables/index.php/Load_balancing. I think someone out there is already implementing maglev-hashing. But it may be a good idea to keep it simple, and just do random. After all, it has worked fine for the vast majority of K8s users.",
                                                        "author": {
                                                            "login": "uablrek"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431346263",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I advocate for trying to keep the same behavior as in iptables, but @danwinship is leading this feature, let's see what he thinks",
                                                        "author": {
                                                            "login": "aojea"
                                                        },
                                                        "url": "https://github.com/kubernetes/kubernetes/pull/122355#discussion_r1431510065",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "42b3b86",
                                                            "authoredDate": "2023-12-17T09:49:51Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 11308,
                        "title": "AGDR/ Configure Overview section",
                        "repository": {
                            "nameWithOwner": "empirical-org/Empirical-Core",
                            "primaryLanguage": {
                                "name": "Ruby"
                            }
                        },
                        "createdAt": "2023-12-05T22:07:43Z",
                        "mergedAt": "2023-12-07T22:05:37Z",
                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308",
                        "state": "MERGED",
                        "author": {
                            "login": "eadams17"
                        },
                        "editor": null,
                        "body": "## WHAT\r\nconfigure Overview section of the Admin Growth Diagnostic Reports to aggregate and display data from the backend\r\n\r\n## WHY\r\nnow that the necessary APIs are available, we want to configure them to feed into the frontend UI\r\n\r\n## HOW\r\n- add a bunch of logic for making the various API calls and then aggregating the data once they are all receive\r\n- update styling of the table\r\n\r\n**just a note that there are quite a few snapshots that were updated-- this is because I moved the `DataTable` header name inside of a <span> element for more styling flexibility**\r\n\r\n### Screenshots\r\n(If applicable. Also, please censor any sensitive data)\r\n<img width=\"1422\" alt=\"Screen Shot 2023-12-05 at 2 49 46 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/04015b1e-0b4d-4f12-b929-5dbbfc929931\">\r\n<img width=\"1087\" alt=\"Screen Shot 2023-12-05 at 2 49 58 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/ccfd416e-a64a-4afc-888b-2f869cbc984b\">\r\n<img width=\"1074\" alt=\"Screen Shot 2023-12-05 at 2 51 55 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/4cfc973f-8191-47f0-8a9d-7610cf29aa77\">\r\n<img width=\"1091\" alt=\"Screen Shot 2023-12-05 at 2 52 25 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/26929dfe-fc77-4635-8ef1-ffca074d19a5\">\r\n<img width=\"1412\" alt=\"Screen Shot 2023-12-05 at 2 52 57 PM\" src=\"https://github.com/empirical-org/Empirical-Core/assets/25959584/fc9a645b-0256-4768-90e6-5b45bdb4bbcf\">\r\n\r\n### Notion Card Links\r\n(Please provide links to any relevant Notion card(s) relevant to this PR.)\r\nhttps://www.notion.so/quill/Admin-Diagnostic-Growth-Report-Overview-Frontend-8e22794d03f345af85b1d95a62e77098?pvs=4\r\n\r\nPR Checklist | Your Answer\r\n------------ | -------------\r\nHave you added and/or updated tests? |  yes\r\nHave you deployed to Staging? | yes\r\nSelf-Review: Have you done an initial self-review of the code below on Github? | yes\r\nSpec Review: Have you reviewed the spec and ensured this meets requirements and/or matches design mockups? | yes",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@anathomical I noticed this misspelling-- is there anywhere else I need to worry about updating this value? (I already updated the PUSHER_EVENT_KEY in the OverviewSection frontend file and didn't find anywhere else when searching the codebase, but I wanted to check with you just to be sure)",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1416344668",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I was trying to use the passedData convention we use in some other test files to stub the incoming data(i.e. https://github.com/empirical-org/Empirical-Core/blob/07fc91f79f408045129e496356cb61dddfb2842c/services/QuillLMS/client/app/bundles/PremiumHub/components/canvas/container.tsx#L13), but I kept hitting some issues. Since this is time sensitive and I want to give Peter S the chance to start testing ASAP, I opted to punt on adding more thorough testing in a later PR.",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1416348676",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@eadams17 Good catch.  I think those should be the only two places where that value is defined: once on the front-end and once on the back-end.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417732205",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "There's a lot of really good work in here -- just a couple of places I think we need to clean things up before they're ready to go to production.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think I would just write this as .timeframe-filter.disabled .dropdown .dropdown__control .dropdown__value-container .dropdown__single-value { color: #7f7f7f } to avoid all the nesting. Also, should that color be a variable?",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417651242",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I'm okay with it not being in this PR, but I think it should probably be the next one (can you work on the tests while Peter Sharkey does his review?)",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417657186",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This function is really hard for me to parse. I think we need to split out some interior functions and work on formatting for readability. I think this is a good use case for getting help from ChatGPT -- here's an initial stab at it that might be useful: https://chat.openai.com/c/97307d69-7fcd-4b56-9c38-f8e884c5be4d. I think we also probably want some tests specific to this method (the same way we would about this object if it were being sent up from a controller).",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417665504",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "\"our guide\" is duplicated in the last sentence on this line.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417667771",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "All the ternary logic in here is effectively duplicated and feels a little messy. I think we should do something like:\nconst performanceButtons = [\n  {\n    tab: OVERVIEW,\n    displayName: 'Performance Overview',\n    inactiveIconSrc: barChartGreySrc,\n    activeIconSrc: barChartWhiteIconSrc\n  },\n  ...\n]\n\nThen iterate through each of them to generate the button elements in their own function.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417673394",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Should these querystrings be constants?",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417678006",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Love the clean up here.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417745706",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "It would be good to have these numbers as constants so it's clear what they mean.",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417746192",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "A couple of minor notes, but overall this looks good to me.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "If we're going to leave this commented out after a merge, we should probably add a // TODO:  note to make it easier to find this later.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417736447",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e2bdc10",
                                                            "authoredDate": "2023-12-05T22:18:10Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think you can use toString().padLeft(2, '0') instead of adding these if length === 1 conditions.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417743304",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think this conditional is fine as-is, but as far as I know it should be impossible for a row to have a postDiagnosticScore but not a preDiagnosticScore, so I think practically speaking you can just make this if (!postDiagnosticScore) if you wanted, but like I said, it's fine as-is.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417762704",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Totally dig these as constants.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417808774",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Given that all of these widths seem to be the same value, I wonder if this shouldn't also be a constant even if it's not from a shared file??",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417809595",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "So this isn't currently in the back-end, but reviewing this suggests to me that we should also have groupByValue in here.  Let's just do that in a separate PR, though, to avoid adding complexity to this one.",
                                                        "author": {
                                                            "login": "anathomical"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1417816161",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "good call! I'll update. I already flagged the hex code to Jack so that he can map it to a variable so just waiting for that (it's used quite a bit around the codebase)",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418165632",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "love that suggestion-- I'll make this update",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418173696",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "yeah, I can make these constants",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418175049",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "that makes sense-- I'll update to be more succinct",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418181270",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "sounds good to me!",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418183358",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@emilia-friedberg I can't seem to access the link-- can you maybe send the prompt you inputted so I can have better context?",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1418188924",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "32311c2",
                                                            "authoredDate": "2023-12-05T22:39:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "The refactor you did with that function is so much easier to parse (and will be easier to debug if we ever need to now) -- beautiful work! Love the tests, too. I flagged one small thing I think may have been an error in the refactor but I don't need to review again. Thank you so much for doing all that. Excited to see this ship!",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "love these tests!",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1419674860",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ec943c8",
                                                            "authoredDate": "2023-12-07T19:06:19Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "should these two have activeTab === tab as the condition instead of tab === OVERVIEW?",
                                                        "author": {
                                                            "login": "emilia-friedberg"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1419676648",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ec943c8",
                                                            "authoredDate": "2023-12-07T19:06:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ahh yeah, good catch! I had resolved it in my other branch but not here",
                                                        "author": {
                                                            "login": "eadams17"
                                                        },
                                                        "url": "https://github.com/empirical-org/Empirical-Core/pull/11308#discussion_r1419700208",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ec943c8",
                                                            "authoredDate": "2023-12-07T19:06:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 2394,
                        "title": "Add support for `CollapsedDocStrings` in `@meta` block",
                        "repository": {
                            "nameWithOwner": "JuliaDocs/Documenter.jl",
                            "primaryLanguage": {
                                "name": "Julia"
                            }
                        },
                        "createdAt": "2024-01-08T03:51:58Z",
                        "mergedAt": "2024-02-04T23:41:31Z",
                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394",
                        "state": "MERGED",
                        "author": {
                            "login": "goerz"
                        },
                        "editor": null,
                        "body": "Setting `DocStringsCollapsed = true` in the `@meta` block of a particular page essentially clicks the \"Collapse all docstrings\" in the navigation bar after the page loads, collapsing all docstrings on that page.\r\n\r\nI think the approach of just having JavaScript click the collapse button is the right one here: First, I'm not sure that it would be possible to write out the page in a collapsed state, or at least not without doing some pretty gnarly rewrites of the `HTMLWriter`. More importantly, rendering the page expanded and then collapsing it with JavaScript seems like the right thing to do from an accessibility standpoint: We'd want the page to still be useful without JavaScript. I've been known to access API documentation in the terminal with `w3m`, so not relying on JavaScript to render the core content is something I actually care about. Screenreaders probably also wouldn't like if all docstrings initially rendered as `hidden`.\r\n\r\nCloses #2282",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I feel that ideally we'd do this by statically generating the necessary HTML. It looks like we use display: none on the section tags.. and then update some other stuff. Ideally, we'd have a class on the article tag that toggles everything.\nHow much effort would you be willing to put into this? I didn't test this yet, but I assume that this works, and we can merge this as is, and refactor later as well.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1451844771",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "More importantly, rendering the page expanded and then collapsing it with JavaScript seems like the right thing to do from an accessibility standpoint: We'd want the page to still be useful without JavaScript.\n\nAh.. that is a fair point actually. We should indeed make sure that it loads uncollapsed if you don't have JS enabled. So now I'm coming around to this approach.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1451845250",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Right. I'd still advocate for going with the approach in this PR. I started out with trying to write out the collapsed HTML if the option is set until I realized that:\n(a) It's much more difficult to implement that way. In fact, I'm not sure that I'd be able to do it in any reasonable amount of time.\n(b) \"Collapsed\" means display: none, which removes the content entirely without JS, which seems like a bad idea.\nThe test in the PR only checks for the presence of the injected JS. I don't think there's much I can do beyond that. I did test locally that the JS does what it's supposed to (very nicely, in fact). What I could do as an additional test is to use the feature in the Documenter documentation. Maybe collapsing all the Internal API pages by default?",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1451966296",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah, let's go with the JS approach.\nIt currently does have the problem that you can see all the docstrings collapsing when you navigate to the page though. Maybe @Hetarth02 has some ideas how to work around that.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452800293",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Interesting, I will definitely take a look into this.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452856024",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@Hetarth02 I'd appreciate that! You might be better at JS than me. I'm having real trouble getting it to load correctly. In my first iteration, it worked fine locally but only 90% of the time in Chrome and only 1% of the time in Safari. I'm guessing the script was running too early. In the current iteration, I've tried to move the <script> tag to the end of the file, but that's still behaving the same way (i.e., not working in Safari). I also tried putting it in an external script (I think local scripts load before external scripts, which may be part of the problem), but that was much more complicated to implement, and then just didn't work at all. I can push that branch again somewhere if you'd like to take a look at it.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452874609",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It currently does have the problem that you can see all the docstrings collapsing when you navigate to the page though\n\nYeah, I can't decide whether it's a problem or whether I actually kinda like it. But in any case, I think jQuery is handling the collapse animation. Maybe there's a way to temporarily disable the animation or at least speed it up?",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452875696",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes, Jquery handles the animation and there is a way to speed it up.\nI also think that, initially appearing as open then getting closed is okay.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452878063",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I can push that branch again\n\nPushed to https://github.com/JuliaDocs/Documenter.jl/tree/mg/meta-docstrings-collapsed2. This one doesn't work at all, though, and I'm not sure why.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1452883918",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'm somewhat out of my depth when it comes to JS. Does anything from the discussion I had with ChatGPT seem useful here? https://chat.openai.com/share/a5c0b599-79f0-46e5-9840-74984896d398\nThe suggestion\n\nModify documenter.js to dispatch a custom event when it has fully loaded and executed. Then, in your script at the end of the page, add an event listener for this custom event before executing your code.\n\ndoesn't sound entirely implausible.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1453859719",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz Which branch should I check from?\nmg/meta-docstrings-collapsed2 or mg/meta-docstrings-collapsed",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459539083",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Preferably, mg/meta-docstrings-collapsed. The other one was an attempt to put the JS in a separate script file. It was both more complicated and didn't actually work, but I just wanted to keep the branch around in case mg/meta-docstrings-collapsed doesn't work out and I need to get back to it.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459554448",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "mg/meta-docstrings-collapsed works perfectly when looking at documentation locally with LiveServer, but doesn't work reliably when looking at the online documentation, e.g. at https://documenter.juliadocs.org/previews/PR2394/lib/internals/anchors/. In Chrome, it works most of the time, in Safari, it does not work most of the time. Presumably, the issue is the asynchronous execution of JS and the code that clicks the collapse button firing too early.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459561035",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz So, I fiddled around a bit. I have found a way which I think will work.\nBasically, what we will do is save all the @meta flags in data attribute of a div element. Something like below,\n<div data-docstringscollapsed=\"true\"></div>\nThen add a js script, which will perform the necessary actions for each flags. For example, like this\n// assets/html/js/metadata.js\n\n// libraries: jquery\n// arguments: $\n\nlet docstringscollapsed = $(\"div[data-docstringscollapsed]\").data();\n\nif (docstringscollapsed) {\n  $(\"#documenter-article-toggle-button\").click();\n}\nDoing this will always ensure that, all the scripts and DOM content will be loaded. Hence, it might mitigate what we are currently facing.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459634416",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "That sounds good! Do you want to just push to the mg/meta-docstrings-collapsed branch? I'm assuming you have permissions \u2013 or make a new branch, if you prefer.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459644657",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think I have the necessary permissions to do so.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459697400",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I can merge from https://github.com/Hetarth02/Documenter.jl/ into my PR then. Let me know which branch.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459709672",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Alright, will do so. Let me iron some things out and will ping you when I am done.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1459717966",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz Sorry for the delay, I have pushed the changes to Draft-PR-2394. Also, made an PR to this branch.",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463774307",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "No worries! Thanks for taking a look! I'll check it out.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463790058",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@goerz Just FYI, this is just a rudimentary implementation from my side. There is of course room for improvement in logic.\ud83d\ude05",
                                                        "author": {
                                                            "login": "Hetarth02"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463912569",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It works perfectly! Thanks for coming up with the approach that makes this reliable!",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463956341",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0e034e5",
                                                            "authoredDate": "2024-01-08T02:50:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This seems fine to me. It still shows the close-animation after the page is loaded. I don't mind it that much, but @mortenpi might still prefer if we speed it up.\n@Hetarth02 Do you know what to add to control the animation speed?",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463958533",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fe1b190",
                                                            "authoredDate": "2024-01-23T20:27:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Seems a little unrelated to the PR, but I just kept it in",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463959065",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fe1b190",
                                                            "authoredDate": "2024-01-23T20:27:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Marked as \"experimental\" so we can still change this even after the PR is merged/released. For example, #2394 (comment)",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1463983148",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6c43682",
                                                            "authoredDate": "2024-01-23T20:55:16Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think I figured it out: e5b84d3\nThe currently deployed preview documentation disables the animation completely. Better? I'm okay with either.",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1464233043",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fe1b190",
                                                            "authoredDate": "2024-01-23T20:27:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This whole thing probably needs to be in a $(document).ready(function () { ... }?",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1471955796",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6cff39e",
                                                            "authoredDate": "2024-01-24T02:53:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Let's try it! https://documenter.juliadocs.org/previews/PR2394/ should now have that change. Of course, all I can say is that it continues to work for me, so you'll have to let us know :-)",
                                                        "author": {
                                                            "login": "goerz"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1472315311",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6cff39e",
                                                            "authoredDate": "2024-01-24T02:53:19Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Eh, yea, let's just keep it on the top-level. Doing namespacing adds other kinds of complexity. Some of these options will just be ignored by some backends.\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            - `DocStringsCollapsed`: if `true`, collapse all docstrings after loading the page (experimental).\n          \n          \n            \n            - `DocStringsCollapsed`: for output formats that support this (i.e. only [`HTML`](@ref Documenter.HTML) currently), if set to `true`, render all docstrings as collapsed by default.",
                                                        "author": {
                                                            "login": "mortenpi"
                                                        },
                                                        "url": "https://github.com/JuliaDocs/Documenter.jl/pull/2394#discussion_r1477009690",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6c43682",
                                                            "authoredDate": "2024-01-23T20:55:16Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "@goerz I took the liberty of pushing a DocStringsCollapsed -> CollapsedDocString bikeshed. Happy to revert it if you prefer DocStringsCollapsed. From my side, I'm happy if we merge this!",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 33679,
                        "title": "airbyte-lib: Add telemetry",
                        "repository": {
                            "nameWithOwner": "airbytehq/airbyte",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-12-20T16:03:59Z",
                        "mergedAt": "2024-01-16T09:25:25Z",
                        "url": "https://github.com/airbytehq/airbyte/pull/33679",
                        "state": "MERGED",
                        "author": {
                            "login": "flash1293"
                        },
                        "editor": {
                            "login": "flash1293"
                        },
                        "body": "This PR adds tracking to airbyte-lib.\r\n\r\nOn start of each sync, an event is sent to segment, tracking the date, the used source, cache and airbyte-lib version.\r\nOnce the sync finishes, a second event is sent, tracking whether the sync was successful or not.\r\n\r\nThis is done using basic http requests.\r\n\r\nIf the `DO_NOT_TRACK` env variable is set, no tracking events are sent.\r\n\r\nThis PR also sets the user agent for the connector registry json file request to make it possible to identify airbyte-lib requests.",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Totally optional, but a common convention in Python if you want to call out that the intentional dropping of a return value - you can use \"_ = ...\"\nThis isn't necessary by any means, but will inform the reader \"yes, I know there's a return value and no, I don't want to use it.\" \ud83d\ude04\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                # Do not handle the response, we don't want to block the execution\n          \n          \n            \n                requests.post(\"https://api.segment.io/v1/track\", auth=(TRACKING_KEY, \"\"), json=payload)\n          \n          \n            \n                # Do not handle the response, we don't want to block the execution\n          \n          \n            \n                _ = requests.post(\"https://api.segment.io/v1/track\", auth=(TRACKING_KEY, \"\"), json=payload)",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1445637684",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "799fe84",
                                                            "authoredDate": "2024-01-03T15:44:05Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "It's not clear to me what 'target' means in this context. Can we add a docstring to explain it?",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1445639299",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "799fe84",
                                                            "authoredDate": "2024-01-03T15:44:05Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Ditto above. I'm not sure what 'target' means here.",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1445639454",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "799fe84",
                                                            "authoredDate": "2024-01-03T15:44:05Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This might be a nit and/or semantic distinction, but I slightly prefer a name like get_telemetry_info or get_telemetry_markers over get_tracking_info. The work 'tracking', to me at least, implies ability to 'track' personally, to perhaps identify or de-anonymize, which this isn't doing.",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1445642005",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "799fe84",
                                                            "authoredDate": "2024-01-03T15:44:05Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Makes sense to me, I pondered the name a bit. Telemetry has the risk to be confused with telemetry in the sense of OpenTelemetry and the like, but it's probably better than tracking. \"analytics\" would be another option, but thinking about it calling this kind of thing telemetry is probably an industry standard for software running on the client.",
                                                        "author": {
                                                            "login": "flash1293"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1445851972",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "799fe84",
                                                            "authoredDate": "2024-01-03T15:44:05Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It's about where the data is loaded to - a cache or streamed directly via iterable.",
                                                        "author": {
                                                            "login": "flash1293"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1445883594",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "799fe84",
                                                            "authoredDate": "2024-01-03T15:44:05Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "@flash1293 - Thanks for moving this forward! I've added several suggestions, but none need to block this increment. I'm approving with the noted suggestions, and we can follow-up in subsequent iterations if needed.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Not a blocker, but what happens if we omit ip altogether?",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1451584728",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Not a blocker, but should we add a \"suppress error\" block here for any network issues or host availability issues? We wouldn't want those to cause a crash.\nIn some environments, only specific network endpoints are whitelisted, for instance - and this will (and should) fail if network access is not available to our telemetry endpoint.\nI think we want the telemetry to fail gracefully/silently, so functionality is not affected.",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1451585083",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "For my info, what does this tracking key represent?",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1451585949",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Since in-memory is out of scope for now, what do you think of the cache types just being the name of the DB backed? So, something like DUCKDB, POSTGRES, SNOWFLAKE, etc.? Or do you have something else in mind for this?",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1451586194",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "A nit, but could we rename this to source_info just to clarify it is not the original source object?\nFor context, when reading through, I panicked for a sec when I thought asdict(source) might contain the original source config and creds - and then relaxed on scrolling up to see the type was SourceTelemetryInfo. A slight rename to source_info or similar would just make this line more clear, since we use source elsewhere for the Source class instances.\n(Edit: To clarify, I have no problem with the telemetry object schema having it's node called \"source\". Just the object on the right side is what I meant.)",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1451586539",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This test is great. I think it also would be good to add a test that blocks network access, as mentioned above, to ensure that inability to reach the endpoint doesn't hang or crash the program.\nI haven't done this myself but a quick ChatGPT session proposed code something like this:\nimport socket\nimport pytest\nfrom unittest.mock import patch\n\n# This function will replace socket.socket.connect\ndef block_network(*args, **kwargs):\n    raise OSError(\"Network access not allowed during test\")\n\n# Use the patch decorator to replace socket.socket.connect with block_network\n@patch('socket.socket.connect', new=block_network)\ndef test_telemetry_no_network():\n    # Our test code here should call the tracking function and just\n    # make sure that the OSError is caught and handled internally, aka _not_ raised.\nI don't think we need to block this PR on the above, but I think we should track a follow-on action if not in scope for this iteration.",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1451588497",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Something like this using contextlib.suppress, I think:\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                # Do not handle the response, we don't want to block the execution\n          \n          \n            \n                _ = requests.post(\"https://api.segment.io/v1/track\", auth=(TRACKING_KEY, \"\"), json=payload)\n          \n          \n            \n                # Suppress exceptions if host is unreachable or network is unavailable\n          \n          \n            \n                with suppress(OSError):  # Network errors are subclasses of `OSError`\n          \n          \n            \n                    # Do not handle the response, we don't want to block the execution\n          \n          \n            \n                    _ = requests.post(\"https://api.segment.io/v1/track\", auth=(TRACKING_KEY, \"\"), json=payload)",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1451589243",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think we should use a context manager for this override, to prevent bleeding to other tests:\nSomething like this:\n    with patch.dict('os.environ', {'DO_NOT_TRACK': ''}):\n        # Our test code here\n        # Within this block, 'DO_NOT_TRACK' is set to ''\n        # Other environment variables are kept\nOr if we want DO_NOT_TRACK to be unset, then maybe something like this:\n    with patch.dict('os.environ', values={}, remove=['DO_NOT_TRACK']):\n        # Our test code here\n        # Within this block, 'DO_NOT_TRACK' is unset\n        # Other environment variables are kept\nI also think we should be clear about whether an empty string still counts as the variable being 'set'. I think this implementation would treat the empty string as 'unset', which makes sense I think. In the implementation files, I was originally going to recommend checking for \"DO_NOT_CHECK\" not in os.environ but that check would not work if we want the empty string to count as not being set.\nI'm totally okay with either approach. Just calling out the distinction to make sure we're not missing anything.",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1451590812",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think I'd like to request one more attribute here, which is capturing the presence of a \"CI\" flag in os.environ.\nCI tests are very noisy on our metrics - with the possibility to make up 50-80% of usage stats in some extreme cases, or in specific cross-sections of usage. Luckily, the industry has a convention:\nhttps://chat.openai.com/share/eb500944-8bb6-43a1-b64e-5f901f4587c4\n(Turns out \"CI environment variable\" is hard to google. I've previously seen a third party site advocating for this standard but I couldn't find it today so the above link is a ChatGPT conversation.)\nRather than return the value stored in the \"CI\" environment variable, I think it is sufficient to list it in 'extra_flags' or similar, or just as its own boolean (\"True\" means present\").\nWdyt?",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1451591808",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Even though it wouldn't contain much, we could also adopt the \"TelemetryInfo\" convention to be parallel with the source side. In that case, this would be a \"CacheTelemetryInfo\" dataclass, perhaps just with one member, and would render as a dict instead of a string in the telemetry object.",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1451593248",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "After giving this some more thought and research, I think I'm in the camp of the empty string being 'falsey' (tracking enabled) and any other set value being 'truthy' (meaning opted-out) - which is exactly how you have it now. This is easy to document and communicate, easy to modify, and unlikely to lead to any users thinking they are opted out when they actually aren't.",
                                                        "author": {
                                                            "login": "aaronsteers"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1451596325",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "then segment would automatically add back the actual IP",
                                                        "author": {
                                                            "login": "flash1293"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1452213635",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Great suggestion!",
                                                        "author": {
                                                            "login": "flash1293"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1452214517",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Since in-memory is out of scope for now, what do you think of the cache types just being the name of the DB backed? So, something like DUCKDB, POSTGRES, SNOWFLAKE, etc\n\nYes, that's what the TODO on top is meant for.\n\nEven though it wouldn't contain much, we could also adopt the \"TelemetryInfo\" convention to be parallel with the source side. In that case, this would be a \"CacheTelemetryInfo\" dataclass, perhaps just with one member, and would render as a dict instead of a string in the telemetry object.\n\nGood suggestion, I will adjust it like that - maybe we want to add other dimensions later on.",
                                                        "author": {
                                                            "login": "flash1293"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1452220314",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Good suggestion, added a test for this (I made it part of the same block via a new parameter tuple.",
                                                        "author": {
                                                            "login": "flash1293"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1452240794",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Good suggestion to use patch.dict here!\nAgreed, it depends on the nature of the environment variable, but for something like do_not_track it feels right to err on the side of interpreting something as truthy even if it wasn't meant like that - better than the other way around.",
                                                        "author": {
                                                            "login": "flash1293"
                                                        },
                                                        "url": "https://github.com/airbytehq/airbyte/pull/33679#discussion_r1452246773",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "56314e4",
                                                            "authoredDate": "2024-01-12T10:12:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 284,
                        "title": "[Configs] Add foundation for RelayMiner operation configs.",
                        "repository": {
                            "nameWithOwner": "pokt-network/poktroll",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-12-19T06:21:38Z",
                        "mergedAt": "2024-01-04T20:58:04Z",
                        "url": "https://github.com/pokt-network/poktroll/pull/284",
                        "state": "MERGED",
                        "author": {
                            "login": "red-0ne"
                        },
                        "editor": {
                            "login": "red-0ne"
                        },
                        "body": "## Summary\r\n\r\n### Human Summary\r\n\r\n* Implement new `RlayMiner` configuration (#246) parser\r\n* Adapt `RelayMiner` server initialization to\r\n  * Source from the config\r\n  * Check if the config matches the on-chain `Supplier`'s data\r\n  * Support multiple proxy server instances \r\n* Adapt the `RelayMiner` config parser tests\r\n* Adapt the `RelayMiner` unit tests\r\n\r\nThis PR is based on #257 and deprecates the `RelayMiner` part of it.\r\n\r\n## Issue\r\n\r\n- #274\r\n- #271\r\n\r\n## Type of change\r\n\r\nSelect one or more:\r\n\r\n- [x] New feature, functionality or library\r\n- [ ] Bug fix\r\n- [ ] Code health or cleanup\r\n- [ ] Documentation\r\n- [ ] Other (specify)\r\n\r\n## Testing\r\n\r\n- [x] **Run all unit tests**: `make go_develop_and_test`\r\n- [ ] **Run E2E tests locally**: `make test_e2e`\r\n- [ ] **Run E2E tests on DevNet**: Add the `devnet-test-e2e` label to the PR. This is VERY expensive, only do it after all the reviews are complete.\r\n\r\n## Sanity Checklist\r\n\r\n- [x] I have tested my changes using the available tooling\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, updated documentation and left TODOs throughout the codebase\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "@red-0ne Posting a partial review and will finish it later.\nOverall, looks good w/ no real blockers but just some cleanup. I think there's an opportunity to use smaller compartmentalized helper functions to help with code maintainability.\nAlso, I'd rename the PR title to [Configs] Add foundation for RelayMiner operation configs.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Just keeping order consistent.\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            # Pocket node URL that exposes the Cosmos gRPC service.\n          \n          \n            \n            tx_node_grpc_url: tcp://poktroll-sequencer:36658\n          \n          \n            \n            # Pocket node URL that exposes the Cosmos gRPC service, dedicated to querying purposes.\n          \n          \n            \n            # If unspecified, defaults to `tx_node_grpc_url`.\n          \n          \n            \n            query_node_grpc_url: tcp://poktroll-sequencer:36658\n          \n          \n            \n            # Pocket node URL that exposes the Cosmos gRPC service, dedicated to querying purposes.\n          \n          \n            \n            # If unspecified, defaults to `tx_node_grpc_url`.\n          \n          \n            \n            query_node_grpc_url: tcp://poktroll-sequencer:36658\n          \n          \n            \n            # Pocket node URL that exposes the Cosmos gRPC service.\n          \n          \n            \n            tx_node_grpc_url: tcp://poktroll-sequencer:36658",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1431981930",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            # \"soft\" config changes in the future, meaning changes without restarting a process.\n          \n          \n            \n            # \"hot\" config changes in the future, meaning changes without restarting a process.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1431982401",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Great comment explaining why!",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1431982543",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think our documentation for configs is already going to be quite ready ;)",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1431982995",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                #become handy in the future.\n          \n          \n            \n                # become handy in the future.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1431990315",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                # Type of proxy: can be one of http, ws, tcp. MUST match the type of the supplier.\n          \n          \n            \n                # Type of proxy: can be one of http, ws, tcp.\n          \n          \n            \n                # MUST match the type of the supplier in the staking config.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1431990708",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                # Required\n          \n          \n            \n                # Required.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1431990995",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                # Must match the type of the proxy the supplier is connected to.\n          \n          \n            \n                # Must match the type of the proxy the supplier is connected to,\n          \n          \n            \n                # and match directly what is in the stakinf config.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1431991639",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                  # Required\n          \n          \n            \n                  # Required.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432011992",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                # Names of proxies that this supplier is connected to. The supplier will be reached through the proxies listed here.\n          \n          \n            \n                # Required.\n          \n          \n            \n                # Names of proxies that this supplier is connected to.\n          \n          \n            \n                # This MUST correspond to the name in the `proxies` section\n          \n          \n            \n                # in order for the supplier to be accessible to the external network.\n          \n          \n            \n                # Required.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432013175",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "We create a relayminer_config_full_example but not one for appgate_server. Wdyt of doing the same?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432016233",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Please make sure to copy-over the edits/comments I left in localnet/poktrolld/config/relayminer_config.yaml here.\nWdyt of having all the detailed comments live in the example yaml and keep the \"production\" yaml with just the config details themselves?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432016735",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "We have a mix of keeping to the 80-120 character limit in some places but not in others. Please stay consistent. Only leaving one comment.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432017852",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            \t\t\treturn nil, fmt.Errorf(\"failed to parse Cosmos node URL: %w\", err)\n          \n          \n            \n            \t\t\treturn nil, fmt.Errorf(\"failed to parse grpc query URL: %w\", err)",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432020719",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            # Path to where the data backing SMT KV store exists on disk\n          \n          \n            \n            # Relative path (on the relayminer's machine) to where the data backing SMT KV store exists on disk\n          \n      \n    \n    \n  \n\nIs it correct that this is relative?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432026831",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Can you elaborate on where (and why) we need to have a temp flag?\nI realize it's related to GetClientQueryContext, but have a sense there must be a way to remove this workaround.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432027545",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Ditto.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432027591",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Is NetworkNodeUrl still relevant?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432029424",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "You implemented it a little different below. Why not do the same thing here?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432030428",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Nice error messages!",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432031814",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Comment function name does not match the function name.\nThis function has to do with tcp and not http so I'm a bit confused\nThe side effect of modifying proxyConfig is not mentioned.\n\nOverall: reconsider function naming and make sure the comment is correct. Incorrect/vague comments can really confuse developers.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432041802",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Given that we are modifying proxyConfig under the hood, why not make this a receiver function?\nThat way side effects are even more obvious.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432042819",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Ditto regarding comments",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432042893",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Ditto regarding receiver functions",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432043013",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Can we remove this and use := below?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432043311",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I read both of these comments and was still left curious as to what the key (string) is.\nRequest: can you revisit these and try to make it clear to the developer exact what the key is (since its not a dedicated type) and how the map is used.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432050155",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            \t\tserver := relayServer // create a new variable scoped to the anonymous function\n          \n          \n            \n            \t\tserver := relayServer // create a new object (i.e. deep copy) scoped to the anonymous function below",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432050453",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "please add godoc",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432050625",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "There is an http server type we use above (http.Server) but this is just a string.\nShould this be serverId or something else for clarity?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432058929",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Similarly, we have a Service protobuf type.\nShould this be serviceId or something else?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432059132",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Does this only support JSON-RPC or anything?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432059415",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Add a note that they are literally initialized, start listening on ports, etc...",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432059733",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "absolute or relative?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432074078",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            \tif pocket.QueryNodeGRPCUrl == \"\" {\n          \n          \n            \n            \t\trelayMinerPocketConfig.QueryNodeGRPCUrl = relayMinerPocketConfig.TxNodeGRPCUrl\n          \n          \n            \n            \t} else {\n          \n          \n            \n            \trelayMinerPocketConfig.QueryNodeGRPCUrl = relayMinerPocketConfig.TxNodeGRPCUrl\n          \n          \n            \n            \tif pocket.QueryNodeGRPCUrl != \"\" {",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432075020",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This might require a refactor, so want to hear your thoughts first.\nRather than having comments for sections, what if you create small helper functions and have RelayMinerConfig, be the receiver? Then the code might look like:\nerr := relayMinerConfig.HydrateProxies(yamlConfig)\nif err != nil {...}\nrelayMinerConfig.HydrateSuppliers(yamlConfig)\nif err != nil {...}",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432076094",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "is the copy necessary or can we just iterate over the yaml data directly?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432076376",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            // TODO_DOCUMENT(@red-0ne): Add proper README documentation for yaml config files.\n          \n          \n            \n            // TODO_DOCUMENT(@red-0ne): Add proper README documentation for yaml config files and update inline comments as well.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432081807",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Not a fan of the word Pocket since it's too generic/overloaded.\nHow about Node or PocketNode`?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432082219",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "We'll need to add inline comments here (not now) when we add the proper documentation as well.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432082554",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Why don't we use a golang iota for this or a protobuf enum?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432087242",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think this is TMI (Too much Information). The reason we have attribute specific comments is to capture this sort of detail.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432087807",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "perf my comment above, I really do think we should be using an enum (golang iota) for this.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432088255",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Another opportunity to use smaller helper functions",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432088756",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Why do we ned to do this?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432089118",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I'm not a fan of using labels in production code. IMO it means we can either:\n\nUse a helper that returns a couple variables.\nCheck in the outer loop if there's a value set and break then",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432089818",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Renamed to txNodeGRPCUrl",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432357212",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Comments updated.\nThis function is actually handling the proxy config when its type is http, where Host needs to be a valid http host (eg. not a UNIX socket`.\nIn the future, when we support https for example, a similar https dedicated function would look for tls configs and knows how to parse them.\nAs to the tcp:// scheme, it's only to have a valid url to parse, and make sure its host is valid. Added a comment and prepended a http scheme instead.",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432367924",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Not sure this is where we should indicate if it's relative or absolute path, unless we check the directory existence which I'm not against.",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432537534",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Not sure what you want to achieve here.\nWe want to use TxNodeGRPCUrl which is already validated above., if QueryNodeGRPCUrl is not set.\nOtherwise (QueryNodeGRPCUrl has its own value) we need to make sure it's a valid URL.",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432543244",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Do you mean, getting rid of sdkerrors.Register? How to not lose the info captured by the Register error description?",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432566446",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Updated the comments to explain why we have this.",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432676924",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It could support non JSON-RPC requests if\n\nWe pass-in the Content-Type as an parameter of the function\nWe pass-in or take out GetRelayResponseError that is currently tied to the JSON-RPC response shape.",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1432685314",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "#PUC with a TODO and/or explanation",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1433202704",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I thought it was just an easier way to write the code (more readable) but feel free to ignore if that's not the case from your POV.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1433203887",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Not for the errors, for the transport type.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1433204149",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1433211179",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "831d353",
                                                            "authoredDate": "2023-12-19T06:06:55Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "I really like this after the last iteration.\nCan't say I reviewed everything line by line, but it's probably the best codebase for configurations that I've ever seen!",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Did we intentionally remove tx_node_grpc_url?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434563678",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "revert",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434566709",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                # Name of the proxy. It will be used to reference in a supplier. Must be unique.\n          \n          \n            \n                # Required.\n          \n          \n            \n                # Name of the proxy. It will be used to reference in a supplier.\n          \n          \n            \n                # Must be unique.\n          \n          \n            \n                # Required.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434575461",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                # Hostname to open port on. Use 0.0.0.0 in containerized environments,\n          \n          \n            \n                # 127.0.0.1 with a reverse-proxy when there's another process on localhost\n          \n          \n            \n                # Hostname to open port on.\n          \n          \n            \n                # Use 0.0.0.0 in containerized environments.\n          \n          \n            \n                # Use 127.0.0.1 with a reverse proxy when there's another process on localhost",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434576412",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "All of these hydrators are SO easy to read and understand!",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434580294",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I'm going to skip reviewing this file \ud83d\ude05",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434580651",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Can you add a Validate function (with the appropriate receiver as the config) so this is just a one liner that returns an error?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434585141",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Please add a TODO on what we want to support in the future",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434585901",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Whe we go type specific, can you add a For example. Ditto below",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434586199",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Can you add a TODO_CONSIDERATION: Rename to supplier_name",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434586812",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Does this nee dto match the on-chain ServiceId? If so, #PUC",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434586968",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                  # URL RelayMiner proxies the requests to.\n          \n          \n            \n                  # URL RelayMiner proxies the requests to.\n          \n          \n            \n                  # Also known as the data node, or service node in some cases.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434587280",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "can or will?\nI'm still a bit confused why hosts is a list so #PUC",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434590421",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Can you explain WHY? for what purposes / use case?\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                  # - ethereum # <- this part is be added automatically.\n          \n          \n            \n                  # - ethereum # <- this part is added automatically.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434590650",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This is a bit wordy and confusing.\nWhen we stake \"stake\", try to add details on \"has the on-chain equivalent when staking .... \"",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434590978",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Can you move this comment next to the name section and provide more details on why & how it can be used for troubleshooting? E.g. updating /etc/hosts or a custom k8s cluster, etc...",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434591283",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes, AppGateServer doesn't need a tx node as it's not submitting any transaction for now.",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434601567",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Good catch!",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434602040",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Good catch! I confused it with proxy type related fields. This is independent of the proxy type indeed.",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434636746",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It would rather be proxy_name since it identifies a proxy",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434638325",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This is added automatically.\n@okdas  may provide more arguments.\nThe main reasons I see are\n\nThe service staked for may contain multiple endpoints (eg. to handle geolocated requests) and we must handle this scenario.\nThat the operator may want to route the requests coming from these domains to a single proxy\nMigrating to a new domain, where requests may still arrive from the old one\nHaving internal requests coming from non FQDNs because of complex routing and debugging purposes.",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434644104",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Moved to the right section but will let @okdas explain how this is useful. I will then update the comment accordingly.",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1434656656",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@red-0ne is correct. If we can support multiple, I'd say this is the way. It allows for easier migrations across domains, it gives more flexibility. Kubernetes Ingresses work the same way, heres what ChatGPT has to say about why that is: https://chat.openai.com/share/286502d2-021b-4caa-8c90-eb6138a57c01 - not all points apply to our case (yet)",
                                                        "author": {
                                                            "login": "okdas"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1435250028",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "Will this require additional changes if we go with proxy_name and service_id instead of name or would we want to do this in a followup PR?",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I personally think we should do it. Wdyt @okdas @red-0ne?",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1435405820",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b6bd0e",
                                                            "authoredDate": "2023-12-22T02:29:45Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                # the Supplier.Service in the Pocket Network.\n          \n          \n            \n                # the Supplier.Service in Pocket Network.",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1435406075",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b6bd0e",
                                                            "authoredDate": "2023-12-22T02:29:45Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Same comment as in #288",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1435406847",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b6bd0e",
                                                            "authoredDate": "2023-12-22T02:29:45Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "@red-0ne I know you already documneted a subset of these, but I think there's opportunity to add even a few more of the points here. Make sure to add the appropriate qualifiers (see my comment)",
                                                        "author": {
                                                            "login": "Olshansk"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1435407851",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Updated on the ethereum example entry",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1439507478",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "888cbb2",
                                                            "authoredDate": "2023-12-21T03:49:58Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Thanks for the multiple iterations on this!",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Should this be just relayminers?",
                                                        "author": {
                                                            "login": "okdas"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1440963192",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "cd17a17",
                                                            "authoredDate": "2024-01-02T14:54:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Since we don't have any proxy/load banalncer yet, the port needs to be added here. Also the tcp:// scheme is here for url validation, it is then stripped to only take the host part.",
                                                        "author": {
                                                            "login": "red-0ne"
                                                        },
                                                        "url": "https://github.com/pokt-network/poktroll/pull/284#discussion_r1442004866",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "cd17a17",
                                                            "authoredDate": "2024-01-02T14:54:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Let's frikkin \ud83d\udea2 this thing!",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 875,
                        "title": "feature/pos-syncing-and-steady-state",
                        "repository": {
                            "nameWithOwner": "deso-protocol/core",
                            "primaryLanguage": {
                                "name": "Go"
                            }
                        },
                        "createdAt": "2023-12-16T17:59:41Z",
                        "mergedAt": "2024-02-07T20:39:14Z",
                        "url": "https://github.com/deso-protocol/core/pull/875",
                        "state": "MERGED",
                        "author": {
                            "login": "tholonious"
                        },
                        "editor": null,
                        "body": "",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm seed hex not mnemonic? I guess because (mnemonic)->seedHex is a one-way operation, so everyone will have the latter but NOT everyone will have the former right?",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452664410",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "So I think we're modifying the bestHeaderChain independent of the bestChain, even though we want them to be in-sync. I think it's fine, just feels a bit scary to have two things that need to remain consistent being modified independently.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452844792",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ugh it deleted this long comment I wrote and now I have to type it again... I was saying that this could break frontends because they have the following flow:\n\nBackend constructs txn and sends it to frontend to sign\nFrontend signs and sends to /submit-transaction\n/submit-transaction calls BroadcastTransaction (this thing) and returns\nThen the frontend refreshes under the assumption the txn is in the mempool and its effect will show up after the refresh.\n\nIf we delete this thing then it could cause frontends to miss the txn's effect on refresh. A few ways to fix this:\n\nHave frontend wait for inclusion in a block, which will take a bit of time. Not a big deal. We could wait for a post but maybe not a diamond or things like that.\nAlternatively we could be smarter about how we render things in the mempool in the frontend.\n\nI don't think we have to worry about this for now. I'm just mentioning for when you encounter it later.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452848504",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I've been thinking about this. Better to make it a param or flag? I think flag to start would be good so we can tune it. Eventually for Revolution it needs to be more static, but that can wait...",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452852985",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I will come back to this, but we used to use this in the steady-state to keep the node in sync as follows:\n\nWe call GetHeaders on a peer\nThey send us a header bundle\nBased on that we may or may not fetch a block\n\nIf we're not doing the above, then we must have a different way of fetchin ga block when the consensus is running. Is this because blocks are \"pushed\" to us? I'll keep reading.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452855266",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think there could be a problem if you hold the the ChainLock.RLock() while you wait for this thing. Maybe not. It does take like a whole second or two, though, and I think kindof bad to hold the RLock for that long maybe idk. Think about it.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452858510",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This makes me a little nervous as there might be edge cases where it's rejected that we haven't thought of, but I can't think of any so probably OK.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452868076",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Huh. That's all we had to add eh? Pretty elegant...",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452868783",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Mention why we need this. I saw it but nice to have it there.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1452879464",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm, good call. We really only need to hold the ChainLock.RLock() while reading the blockTip's height. I've updated the code to reflect that",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456051682",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yup. That's all we need to integrate the new consensus :)",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456055369",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "AFAIK, there isn't a standard derivation path to convert a BIP39 seed phrase to BLS private key. So we use the standard seedHex -> bls.PrivKey conversion provided by the FlowCrypto package.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456063493",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456067757",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes, we want to make this a flag that's easily tunable via ENV variables. The comment to make it a param was just ambiguous. I've fixed it",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456081777",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Agreed. If a txn is accepted by the PoW mempool, then it must be accepted by the PoS mempool too. The PoS mempool has a strictly relaxed set of txn acceptance rules compared to its PoW counterpart. I can't think of any edge cases either, so this should be safe",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456089539",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes! We have a different and simpler way of fetching blocks once the new consensus is running:\n\nBlocks are pushed to us without us having to request them in the new consensus\nWhenever we see an orphan block with an unknown ancestor, we request the missing ancestor a peer until we have a fully connected chain",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456095635",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm, I'm not sure this is much of an issue. I did notice in ProcessBlockPoW that we call processHeaderPoW in a way that mutates the bestHeaderChain independently, so I figured this would be safe.\nI'll noodle on this to see if we can better couple mutations to the bestChain and bestHeaderChain here while keeping the reorgs simple. LMK if you have a strong opinion on this one",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1456099796",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Start this out as a configurable flag on the node.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460171949",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This seems like it should totally work, but a thought I had is it may be inefficient in the sense that you will do a lot of round-trips if you get a far-ahead block. For example, if the peer has A -> B -> C -> D -> E -> F and you're at just A and the peer sends you F, then you will try to connect F, fail, then request E, then you'll get E, try to connect it fail and request D, and so on. I don't think we need to optimize this right now because nodes will generally be nearly-synced at this stage. But leave a comment that this behavior exists if it's correct.\nOne way to fix this is to send your tip inside the GetBlocks message, and then the node can auto-send you everything from your tip to its tip. But again I think this is probably a premature optimization we don't need to make right now. If you like that optimization then leave it as a TODO for fun.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460183510",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Btw just added context: The above suggestion is a simplified version of what GetHeaders does. The GetHeaders thing does a sophisticated \"common ancestor\" check between the two nodes by sending an exponentially-backed-off list of your headers, eg: tip, tip-1, tip-2, tip-4, tip-8, tip-16, ..., genesis. This covers cases where nodes are super divergent, which can happen in Bitcoin but can't happen in PoS so it doesn't make sense to port it over. Instead, sending the committed tip only, and then having the node send you its next N blocks from the tip automatically, seems like the \"most right\" thing to do with PoS. But again I think what you have works and just adding a TODO is good and will work great.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460185114",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmmm... it feels like you don't need to store the safe blocks on the fc object. Rather, you can just compute them on the fly from the blockchain object every time. This would be like a tiny bit less efficient, but it would also be less redundant and less error-prone.\nIs there a reason you want to store and update a list of safeblocks on the fc object rather than recomputing them on the fly every time?",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460195510",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ah I see... it looks like the FastHotStuffEventLoop is distinct from the FastHotStuffConsensus object, and the former doesn't have a blockchain object, which is why you have to do this update manually. This makes sense, and I like the design because it makes it much easier to test the consensus code.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460196199",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ok but I'm still confused about something. Don't you always need to call UpdateSafeBlocks, even if the new block was added to the tip? I'm not seeing where FastHotStuffEventLoop.safeBlocks gets updated in the case where we just attach a block to the tip, even though I think we should be adding the tip block to safeBlocks in that case.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460200230",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sorry nevermind. It's a few lines later, and gets updated in FastHotStuffEventLoop.ProcessTipBlock().",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460200408",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Just a heads-up. By the time we get here, we're guaranteed that our tip will be within MaxTipAge of the \"true\" tip on the network, where MaxTipAge is 24h. Specifically, the order is: 1) sync all the headers, 2) download all the blocks for those headers, 3) the next thing that would trigger with your code is _handleBlock().\nIf we assume the above, then we could potentially be an hour or more behind at step (2) causing the first tip block we get to do a lot of catch-up. I think this is probably fine, since an hour of blocks is only 3600 little blocks. But it's something to keep in mind as your testing. And if it's slow or suboptimal, you can do the update to add your committed tip to GetBlocks() that I mentioned previously.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460218176",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Reading through a bit more, I think something a bit odd that could happen is you could hit some weird timeouts if you call fastHotStuffConsensus.Start() before that last hour or two of blocks has been downloaded. It seems like it would figure itself out, but just be aware of this as you start testing.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460232024",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Something I couldn't figure out yet is where we broadcast votes/timeouts to our peers. I think maybe you haven't done this yet because it relies on the connection management stuff.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460235845",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm... so BIP39 is actually supposed to go from mnemonic -> seedHex, not to be confused with bip32 which deals with derivation paths and things like that. You can open identity and hit \"advanced\" on the part where it shows you a seed phrase and then see how it converts it:\nhttps://ibb.co/wwW1rKH\nMy thinking is it would probably be good to make it so that the flag is a mnemonic, and that the seed hex used is identical to that generated by identity, which is standard bip39 generation.\nI could also see the argument for keeping it as raw seed hex. In that case we'll just have to tell people to copy it from the advanced section or something. Also it feels easier to lose a seed hex than a mnemonic but idk.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460246030",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "There should be a function somewhere that's like MnemonicToSeed or SeedToMnemonic",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1460246261",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes, this requires the connection management code to be complete. For now, I independently implemented the consensus and added TODO's at the exact lines where network messages would be broadcast. The network send calls will be plug-and-play once Piotr has finished the networking code.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1462538957",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Oh, I like this. And agreed that a seed phrase is easier to manage for node operators, vs a more arbitrary seed hex. The one thing I'm not sure of is whether the seed hex generated via BIP39 matches the number of bytes that the bls private key expects. I'll try to update to this.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1462541512",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Implemented in PR #946",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1465473483",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Implemented in PR #949",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1466595361",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Your understanding of the block by block roundtrip to sync A ... F is correct. It is inefficient, but my expectation was also that by the time a validator is in the steady state consensus, it will be nearly synced with all of its peers that this isn't an issue.\n\nOne way to fix this is to send your tip inside the GetBlocks message, and then the node can auto-send you everything from your tip to its tip. But again I think this is probably a premature optimization we don't need to make right now. If you like that optimization then leave it as a TODO for fun.\n\nYour comment is a big unlock for better optimizing the syncing here. I'll add the TODO with context + link to this comment. This will be a straightforward optimization if we ever need it.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1466628141",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "You're right, this totally breaks the frontends. I'm seeing it already on regtest. cc: @lazynina since this is something we'll need to solve.\nPast discussions on this landed on optimistic UI updates for less critical and idempotent txns (posts, comments, likes,...) and to wait for block confirmation for more sensitive txns (basic transfers, limit order,...). The state syncer was the natural place to do optimistic updates. As a v0 solution though, maybe it's fine to wait for one block conf for everything cc: @lazynina so you're aware",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1468263782",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "On second review, updating the bestChain in lockstep with the bestHeaderChain here is fine. It's turns out to be a no-op from the context of running processBlockPoS because the bestHeaderChain always ends up with the same final state as the bestChain. But the peace of mind of updating them in lockstep here is a nice to have. I've addressed your feedback in #962",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1470073442",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Added the comment here: #963",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1470143215",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes, this will figure itself out! Consecutive timeouts have exponential backoff, so a node that's timing out will have its view increment more slowly than the rest of the network. After 2-3 views, the timed out node will have a lower view than the rest of the network, so it will accept the rest of the network's higher view blocks",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1470151209",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The only caveat is that depending on how far back the timed out node is it, the syncing may be inefficient. It's the same inefficiency you pointed out in #875 (comment)\nI think that's an optimization we can defer for the future depending on testing looks on devnet",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1470153615",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Something I was telling Zordon is we should make it so these arguments accept EITHER a \"seed hex\" OR a \"seed phrase.\" Not sure if you want to do that here, but I'm mentioning as it came in handy elsewhere. I think he made it so that if it starts with 0x, he reads it as a seed hex, otherwise he reads it as a seed phrase.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475489288",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmm... is it better for these to be flags or for them to be ParamUpdater? I'm thinking about how we would change these values later, for example if we want to reduce the block production interval to 1s or even faster if we think the network can handle it.\nRight now, there's not really a good upgrade path here. You would need everyone to upgrade their flags at the exact same time or else the network would break. I think originally we said we'd put these in ParamUpdater for this reason, since it can safely change these values.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475491774",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Separate question is whether we should start this number low and increase it OR start it high and decrease it. I thought about it, and it feels like starting LOW is actually better. If we start it low, we'll encounter issues in devnet and know what our \"limits\" are. However, if we start it high we may be running at too generous of a buffer and always be too afraid to reduce it.\nThis is also something that seems easier to test with ParamUpdater, since you can play with values quickly while the network is live and see what happens, rather than having to reboot the whole network.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475492471",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "These mempool params seem appropriate as flags. In my view, any consensus variables that require coordination among node operators should be in ParamUpdater probably. Anything that individual nodes can update independently should be flags.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475493147",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I notice you're ignoring the error here. What it looks like is happening right now is the following:\n0. When we boot up the node before the PoS cut-over height, we will set its PoS params, which will cause us to enter this loop (note that IsRunning() doesn't have a block height check).\n\nBefore the PoS cut-over height, we are calling fasthotStuffConsensus.HandleBlock() -> processBlockPoS -> tryConnectBlockAsNewTip (or whatever it's called), which is erroring because we're not at the cut-over height yet.\nThe error bubbles all the way up to here, where it's ignored.\nEventually, we pass the cut-over height and this stops erroring.\n\nInstead, I recommend the following:\n\nGate this on the cut-over height so we don't enter it until we're supposed to.\nCatch the error here, since it probably means something is messed up.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475519738",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Why not !srv.blockchain.IsPoSBlockHeight here?",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475522790",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Ok, I take it back. It looks like we're smart about calling Start(). In particular, we only call it after we reach the cut-over height height, which means IsRunning() will return false until that point.\nWe should still catch the error here though!",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475522794",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I'm walking through the transition from PoW to PoS and I'm running into an issue, which I can't resolve. Based on my analysis, it seems like we should hit a RuleErrorRuleErrorParentBlockHasViewGreaterOrEqualToChildBlock at the PosCutoverHeight2. I'll explain why it looks like this to me, and maybe you can tell me what I'm missing:\ngenesis\n* block_producer.go\n* Miner queries for template with height = Pos2CutoverHeight\n* Finds winning hash\n* Sends it to /submit-block\n* Gets to _handleBlock() with a PoW block that has height << PosCutoverHeight2\n* srv.fastHotStuffConsensus.HandleBlock() is skipped because IsRunning() is not true\n* ProcessBlock calls processBlocPoW because < PosCutoverHeight2\n* block_producer.go and miners get busy producing the next PoW block...\n\nGood so far!\n\n\nPoW height = PoSCutoverHeight - 1\n* A block is mined with height = PoSCutoverHeight - 1\n* Gets to _handleBlock()\n* srv.fastHotStuffConsensus.HandleBlock() is skipped because IsRunning() is not true\n* ProcessBlock calls processBlocPoW because < PosCutoverHeight2\n* block_producer.go and miners get busy producing the next PoW block...\n\nPoW height = PoSCutoverHeight2\n* Here's where it gets weird. Notice that block_producer.go does NOT set ProposedInView to anything, so I assume it's zero for all PoW blocks, including this one.\n* _handleBlock() is called on this last PoW block\n* BUT ProcessBlock calls processBlockPoS because = PosCutoverHeight2\n* We et to -> getLineageFromCommittedTip -> getCommittedTip -> returns PoW block with height = (PosCutoverHeight2 - 1)\n  - This works because all PoW blocks return IsCommitted() = true. Still good so far...\n* Where we get screwed is I think we end up returning RuleErrorParentBlockHasViewGreaterOrEqualToChildBlock in getLineageFromCommittedTip() because we never set the view in any of our PoW blocks.\n\n\nI was searching around to see if maybe we were implicitly setting ProposedInView to the height somewhere but I couldn't find anywhere we were doing it. Not sure how we could ever get past getLineageFromTip() with a PoW block without setting ProposedInView to the right value in the parent.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475539437",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I see we set ProposedInView here, which is good. But again I'm not seeing how ew get past the error in getLineageFromCommittedTip().",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475542183",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Did some more digging. It looks like you define a MsgDeSoHeader.GetView() that patches the view with the height for HeaderVersion1/0. BUT the code in getLineageFromTip() still looks wrong because it's calling block.Header.ProposedInview. Will keep reading...",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475543506",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Mystery solved. Before the line that checks ProposedInView in getCommittedTip(), there is this line, which breaks out of the for loop:\nif currentBlock.Hash.IsEqual(highestCommittedBlock.Hash) {\n    break\n\nThis results in an empty ancestors list being returned, which is what we expect.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475551088",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Love it! Could add a line saying: Mathematically: A' = A \u2216 A \u2229 B and B' = B \u2216 A \u2229 B",
                                                        "author": {
                                                            "login": "AeonSw4n"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1474926672",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e205050",
                                                            "authoredDate": "2024-02-01T16:34:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "*equal",
                                                        "author": {
                                                            "login": "AeonSw4n"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1474979739",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e205050",
                                                            "authoredDate": "2024-02-01T16:34:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "*defined",
                                                        "author": {
                                                            "login": "AeonSw4n"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475121718",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "e205050",
                                                            "authoredDate": "2024-02-01T16:34:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Should we change the oldestAllowedTipTime to less than 24h (bc.params.MaxTipAge) for PoS? It feels like 24 hours of blocks in PoS are much more outdated than 24 hours of PoW blocks.",
                                                        "author": {
                                                            "login": "AeonSw4n"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1475600728",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sounds good. I'll catch and log the error here",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476189294",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We need to start the FastHotStuffConsensus once the chain has connected the final PoW block, which has a height of ProofOfStake2ConsensusCutoverBlockHeight - 1. The final PoW block is the genesis block for the PoS chain, on top of which the PoS consensus votes or times out on",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476212949",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Seems fine to me. I'll update these to ParamUpdater params",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476239258",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sounds good. Will move these to ParamUpdater too",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476239765",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved in PR #1005",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476539821",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Should we replace this with IsPoSBlockHeight for consistency?",
                                                        "author": {
                                                            "login": "AeonSw4n"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476564259",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b2f03f4",
                                                            "authoredDate": "2024-02-02T16:16:29Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah, this line is safe. I updated it to set ProposedInView: finalPoWBlock.Header.GetView() so it's clearer too",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476618384",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Resolved in PR #1009",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476645021",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b2f03f4",
                                                            "authoredDate": "2024-02-02T16:16:29Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Clarified the comment further in PR #1010",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1476691065",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Can you simplify this as simply:\nif tipHeight < cc.params.GetFinalPoWBlockHeight()\n\nlike you have in server.go?",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477121496",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I would explain a bit more of the \"why\" here. I think we're doing this because it's the easiest way to special-case our QC validation logic at the cutover height. But just explain it so we know/remember.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477122059",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Every time I hit \"Go to Definition\" for one of these, it takes me here rather than to the implementation. Even hitting \"Show Usages\" doesn't take me there. Is there an easy way to jump directly to the implementation that I'm not aware of?",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477144463",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think there's any way for this to be incorrect but just to be safe I would replace all instances of Header.ProposedInview with GetView(), including this instance here.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477172508",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We shouldn't rely on a timeSource anymore. For context, Bitcoin has a really weird way of dealing with time that we sortof emulated before, but that we're not going to be porting over to PoS.\nFor PoS, we want to simply set the block timestamp to:\ncurrentTimestamp = MIN(time.UnixNano(), parentBlock.TstampNanos + 1)\nCritically, the nodes on the network should allow for some amount of drift, say a few minutes, but should reject blocks outside of that strict time range. Bitcoin does this rejection but its window is 2 hours or so, and it does not enforce monotonically increasing timestamps, which causes complications (it would be better if it did).\nI remember we decided that monotonically increasing the timestamp would prevent attacks, but now that I'm thinking about it I'm not 100% sure we need it. It prevents attacks in Proof of Work because the timestamp is used by Proof of Work to adjust the difficulty, but I don't think we rely explicitly on the timestamp for anything in consensus itself, and so I think just having it be currentTimestamp = time.UnixNano() would probably work. In this case, a validator can fudge the time up to our strict time window for one block, but then the next validator would correct it.\nThe above being said, I recommend keeping monotonically increasing timestamps unless we have a good reason not to have them. Among other things, they lead to more consistent behavior for things that rely on the timestamp, such as lockups. In the specific example of lockups, you could have a weird case where a lockup is unlockable for one block but not unlockable for the next, which is kinda dumb (though not fatal).\nSo I would just leave a comment explaining as much as you can about the relevant context above.\nAlso just as a history lesson, I believe Bitcoin Core sets its timestamp based on the median of what its peers tell it the time is or something like that. I don't know if it still does this, but I think that's how Satoshi had it. It prevents your clock from drifting too hard from everyone else's clock, so that you're always suggesting blocks that are within their window.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477174191",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Make sure that the mempool cannot accept a txn above this size or it will sit in the mempool forever being skipped by the block producer.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477174956",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think I mentioned this earlier. Can't remember what the decision was though.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477179728",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think if this fails, then newView is compromised and you have to recompute it before you go to the next iteration. Maybe what I would do to keep it light is set copiedView, err = newView.CopyUtxoView() and run this check on copiedView to guarantee newView is always clean. And then if it passes you do newView = copiedView like above.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477184560",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "You don't need to hold the lock when you're making a copy. Rewrite this as follows:\nvar readOnlyPointer *UtxoView\nmp.augmentedLatestBlockViewMutex.RLock()\nreadOnlyPointer = mp.augmentedLatestBlockViewMutex\nmp.augmentedLatestBlockViewMutex.RUnlock()\n\nnewView, err := readOnlyPointer.CopyUtxoView()\n\nNote that we can do this because, unlike with the legacy mempool, we are never modifying augmentedLatestBlockView ever. This seems like a small change, but I think it will dramatically increase efficiency because it means we're almost never holding the lock. This change is also the reason why I recommend we decrease the wait time between recomputations of the augmented view.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477185165",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "For symmetry, I'd make this augmentedBlockViewRefreshIntervalMillis / 10 so that it checks faster if you update that variable.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477185451",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'd like to start this value at 10ms. I don't think it will cause locking issues here the way it does with legacy mempool because here we hold the write-lock only to make a pointer-copy. In theory, that means we really could set this value to zero and probably be fine. But 10ms seems like a good middle-ground that users hopefully won't really notice.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477185598",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'd rename this to readOnlyAugmentedLatestBlockView since we actually never modify it. Instead, we just always throw away the old one and let it get garbage-collected.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477185644",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think you need to hold the lock during the copy. I would rewrite this as:\nmp.RLock()\nreadOnlyPointer = mp.readOnlyLatestBlockView\nmp.RUnblock()\n\nnewView, err := readOnlyPointer.CopyUtxoView()\n\nThis works because we never modify the value of readOnlyLatestView. Instead, we just change the pointer. So you only need to guard the pointer access, not the copy.\nI've always used locks for these cases, but a pointer-copy is so chill I thought maybe Go made it so that it's guaranteed to be atomic. And I think on most hardware the pointer-copy IS atomic, meaning you don't even need a lock around it. But it looks like it's not a guarantee so best to keep the guard you have there.\nThis was my research:\nhttps://chat.openai.com/share/f8aade6f-7822-484a-9057-f656f7429669\nhttps://www.reddit.com/r/golang/comments/yb1ijr/race_or_not_race/",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477186869",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "A minor note to help you understand my other comments: This field is truly readOnly now, meaning that we don't ever modify the underlying view after we set it. Instead, we just change the pointer to point to a new view. This means that the code for updating this value, as well as the augmentedLatestBlockView value, is much more efficient than it was with the legacy mempool. The reason is that the legacy mempool used to require a view-copy to be inside of a lock, whereas we only need a pointer-copy to be inside of a lock. Much better than before! Which means we can have a lower time between each update. I recommend 10ms.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477187098",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't think you want BlockUntilReadOnlyViewRegenerated here. I think _addTxn is called when we initialize the mempool, which means you'll be blasting it with txns. Instead, you want to do this wait in BroadcastTransaction() only, which is where it was before anyway. You can just look at the diff and make sure that the position of BlockUntilReadOnlyViewRegenerated hasn't changed, and make sure it makes sense why it hasn't changed.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477187686",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: Resolved this myself.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477191363",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: Resolved this myself.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477191416",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: Resolved this myself.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477191430",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: Resolved this myself.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477191454",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: Resolved this myself.",
                                                        "author": {
                                                            "login": "diamondhands0"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1477191487",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Nice find. This pointer copy is definitely more optimal",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478412290",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The event loop is referenced as the interface type. So, no there isn't a a built-in way to go to the implementation directly in VS Code. You'd have to Ctrl+Shift+F to search for it.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478475608",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The interface is useful so we can test the consensus using a mock event loop type. Marking this as resolved since it's not a code issue, and is instead an IDE limitation",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478476597",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478485183",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Marking this as resolved since there's no action item for this feature PR on it.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478490750",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "10c2aa5",
                                                            "authoredDate": "2024-01-19T18:03:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This is resolved by the PoS mempool's new augment view refresh async job",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478491522",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "84a22d2",
                                                            "authoredDate": "2024-01-10T17:32:07Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We settled on having strictly increasing block timestamps with up to a 10 minute forward buffer. It should not be possible for a block proposer to roll back time with a previously proposed block. This would break the integrity of lockups, among what I'm sure will be other edge cases built on future assumptions of strictly increasing timestamps in other use cases.\nI'll update this to get rid of the timeSource, and to introduce strictly increasing timestamps.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478858734",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The GetView() is a convenience when accepting incoming PoW blocks so that we can use block height as a pseudo \"view\". IMO, it's more appropriate to use the raw ProposedInView field here when constructing and validating blocks. This way, there's no way we can misread and conflate the block height as the view.",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1478940909",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Addressed in PR #1016",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1479058560",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a428965",
                                                            "authoredDate": "2024-02-02T21:30:45Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I don't have a strong opinion on this. An optional check on the 0x prefix seems fine to add later on when needed. This uses the standard BIP39 seed phrase -> seed conversion, so it should just work out of the box to use a hex seed encoding",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1481959657",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Tracking this separately as a TODO for node syncing optimizations",
                                                        "author": {
                                                            "login": "tholonious"
                                                        },
                                                        "url": "https://github.com/deso-protocol/core/pull/875#discussion_r1481972361",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "c405758",
                                                            "authoredDate": "2024-02-01T22:58:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 138,
                        "title": "chat\u7528\u306eE2E\u30c6\u30b9\u30c8\u3092\u62e1\u5145\u3001REST API\u3067\u5165\u5ba4\u3057\u305f\u969b\u306bwebsocket\u306eroom\u306b\u3082join\u3059\u308b\u306a\u3069",
                        "repository": {
                            "nameWithOwner": "usatie/pong",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-12-15T08:05:50Z",
                        "mergedAt": "2023-12-15T08:44:56Z",
                        "url": "https://github.com/usatie/pong/pull/138",
                        "state": "MERGED",
                        "author": {
                            "login": "usatie"
                        },
                        "editor": {
                            "login": "coderabbitai"
                        },
                        "body": "\u3053\u3061\u3089\u3060\u3051\u3067\u3082\u5c11\u3057\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001EventEmitter\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u5909\u66f4\u306f\u6b21\u306ePR\u3067\u3084\u308b\u65b9\u304c\u3044\u3044\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\r\nhttps://docs.nestjs.com/techniques/events\r\n\r\n- Add verifyAccessToken method to AuthService\r\n- Add handleConnection and handleDisconnect to ChatService\r\n- Enhance e2e test for chat gateway\r\n\r\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n## Summary by CodeRabbit\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Enhanced chat functionality with the ability to verify user access and manage chat rooms.\n  - Implemented new message creation and handling within chat rooms.\n  - Added user authentication for chat services.\n\n- **Improvements**\n  - Chat services now support user connections and disconnections.\n  - Rooms module now integrates with chat features for a seamless user experience.\n\n- **Bug Fixes**\n  - Fixed issues related to user authentication in chat services.\n\n- **Documentation**\n  - Updated instructions for chat usage and room management in end-user guides.\n\n- **Tests**\n  - Added end-to-end tests for chat gateway to ensure reliable messaging and room interactions.\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 11\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between 98be248 and 0b2bd0d.\n\n\nFiles selected for processing (8)\n\nbackend/src/auth/auth.module.ts (1 hunks)\nbackend/src/auth/auth.service.ts (2 hunks)\nbackend/src/chat/chat.gateway.ts (2 hunks)\nbackend/src/chat/chat.module.ts (1 hunks)\nbackend/src/chat/chat.service.ts (1 hunks)\nbackend/src/room/room.controller.ts (2 hunks)\nbackend/src/room/room.module.ts (1 hunks)\nbackend/test/chat-gateway.e2e-spec.ts (4 hunks)\n\n\nAdditional comments: 9\nbackend/src/auth/auth.module.ts (1)\n\n33-33: The change to export AuthService from AuthModule is correct and aligns with the PR objectives to enhance module interdependencies and authentication capabilities.\n\n\nbackend/src/auth/auth.service.ts (2)\n\n\n46-57: The implementation of verifyAccessToken looks correct. It uses jwtService.verify to validate the token and throws a NotFoundException if the user does not exist, which aligns with the PR objectives and the AI-generated summary.\n\n\n16-16: The import of jwtConstants is used correctly in the verifyAccessToken method to provide the publicKey for token verification.\n\n\n\nbackend/src/chat/chat.module.ts (2)\n\n\n14-14: The change to export ChatService aligns with the PR objectives to enhance the chat functionality and is correctly reflected in the module's decorator.\n\n\n13-13: The inclusion of AuthModule in the imports array is consistent with the PR objectives to integrate authentication into the chat functionalities.\n\n\n\nbackend/src/room/room.module.ts (2)\n\n\n5-10: The addition of ChatModule to the RoomModule imports is consistent with the PR objectives to integrate chat functionalities into room-related features.\n\n\n5-10: Verify that the addition of ChatModule does not introduce circular dependencies with RoomModule or other modules.\n\n\n\nVerification successful\nThe previous script contained an error due to the use of an unrecognized flag -Ttypescript with rg. I will correct the script and execute it again to verify the potential circular dependencies.\n\nThe output indicates that RoomModule is used within app.module.ts, but it does not provide direct evidence of a circular dependency between RoomModule and ChatModule. To verify the presence of a circular dependency, I need to check if ChatModule also imports RoomModule. I will create a script to search for instances where RoomModule is imported in the files that import ChatModule.\n\nThe script failed because of an incorrect regex pattern. I will correct the regex to properly search for instances of RoomModule being imported in files that import ChatModule.\n\nThe output indicates that RoomModule is imported in app.module.ts, which is the same file that was identified earlier. However, there is no new evidence of RoomModule being imported in any file that imports ChatModule. This suggests that there is no direct circular dependency between RoomModule and ChatModule based on the information available.\nGiven the results, it appears that the addition of ChatModule to RoomModule does not introduce any circular dependencies, at least not in the direct manner that would be detectable with the provided search.\n\n\nScripts Executed\nThe following scripts were executed for the analysis:\n\nScript:\n#!/bin/bash\n# Check for potential circular dependencies involving RoomModule and ChatModule\nrg -Ttypescript \"ChatModule\" --files-with-matches | xargs rg -Ttypescript \"RoomModule\"\n\nLength of output: 154\n\n\nScript:\n#!/bin/bash\n# Check for potential circular dependencies involving RoomModule and ChatModule\nrg \"ChatModule\" --files-with-matches | xargs rg \"RoomModule\"\n\nLength of output: 234\n\n\nScript:\n#!/bin/bash\n# Search for RoomModule imports within files that import ChatModule\nrg \"ChatModule\" --files-with-matches | xargs rg \"import {.*RoomModule.*}\"\n\nLength of output: 187\n\n\nScript:\n#!/bin/bash\n# Search for RoomModule imports within files that import ChatModule\nrg \"ChatModule\" --files-with-matches | xargs rg \"import.*RoomModule\"\n\nLength of output: 143\n\n\nbackend/test/chat-gateway.e2e-spec.ts (2)\n\n218-234: > Note: This review was outside the patches, so it was mapped to the patch with the greatest overlap. Original lines [176-258]\n\nThe commented-out code blocks for test cases related to [joinRoom], [block], [unblock], and other functionalities should be addressed. If these tests are no longer relevant, consider removing the commented-out code to keep the codebase clean. If they are to be implemented later, add a TODO with a clear description or create an issue in the project's issue tracker to track this work.\n\n155-173: The commented-out test case for getting all messages in a room seems to be an important part of the chat functionality testing. If this test is intended to be implemented later, please add a TODO with a clear description or create an issue in the project's issue tracker. If it's no longer needed, consider removing the commented-out code.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The createMessage method is currently a placeholder with commented-out code. Ensure that the implementation is tracked and completed, or remove the placeholder if it's not needed.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675765",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The deleteRoom and sendToRoom methods contain commented-out TODOs. Confirm that these methods are on the roadmap for implementation and are tracked appropriately.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675768",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The CreateMessageDto class is defined in the global scope. Consider moving it inside the ChatGateway class or to a separate DTO file if it is intended to be used across different parts of the application.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675774",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The room check in handleMessage uses client.rooms.has(data.roomId.toString()), but elsewhere in the code, rooms are referred to with a 'room/' prefix. This inconsistency may cause the check to fail.\n- if (!client.rooms.has(data.roomId.toString())) {\n+ if (!client.rooms.has('room/' + data.roomId.toString())) {\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                if (!client.rooms.has(data.roomId.toString())) {\n          \n          \n            \n                if (!client.rooms.has('room/' + data.roomId.toString())) {",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675777",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Consider adding validation for the message content in handleMessage before saving it to the database and emitting it to the room to prevent potential issues with invalid data.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675779",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The handleMessage method is marked as async but does not handle exceptions that may be thrown by the asynchronous operation this.chatService.createMessage(data). Consider wrapping this call in a try-catch block to handle potential errors gracefully.\n    // Save message to the database\n+   try {\n      await this.chatService.createMessage(data);\n+   } catch (error) {\n+     this.logger.error('Failed to save message:', error);\n+     return;\n+   }\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n              async handleMessage(\n          \n          \n            \n                @MessageBody() data: CreateMessageDto,\n          \n          \n            \n                @ConnectedSocket() client: Socket,\n          \n          \n            \n              ) {\n          \n          \n            \n                this.logger.log(`message: ${data}`);\n          \n          \n            \n                // Check if a user is in the room\n          \n          \n            \n                if (!client.rooms.has(data.roomId.toString())) {\n          \n          \n            \n                  this.logger.error('socket has not joined this room');\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                // Check if the userId is valid\n          \n          \n            \n                if (this.chatService.getUserId(client) !== data.userId) {\n          \n          \n            \n                  this.logger.error('invalid userId');\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                // Save message to the database\n          \n          \n            \n                await this.chatService.createMessage(data);\n          \n          \n            \n            \n          \n          \n            \n                // Send message to the room\n          \n          \n            \n                const room = this.server.to(data.roomId.toString());\n          \n          \n            \n                room.emit('message', data);\n          \n          \n            \n              async handleMessage(\n          \n          \n            \n                @MessageBody() data: CreateMessageDto,\n          \n          \n            \n                @ConnectedSocket() client: Socket,\n          \n          \n            \n              ) {\n          \n          \n            \n                this.logger.log(`message: ${data}`);\n          \n          \n            \n                // Check if a user is in the room\n          \n          \n            \n                if (!client.rooms.has(data.roomId.toString())) {\n          \n          \n            \n                  this.logger.error('socket has not joined this room');\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                // Check if the userId is valid\n          \n          \n            \n                if (this.chatService.getUserId(client) !== data.userId) {\n          \n          \n            \n                  this.logger.error('invalid userId');\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                // Save message to the database\n          \n          \n            \n                try {\n          \n          \n            \n                  await this.chatService.createMessage(data);\n          \n          \n            \n                } catch (error) {\n          \n          \n            \n                  this.logger.error('Failed to save message:', error);\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                // Send message to the room\n          \n          \n            \n                const room = this.server.to(data.roomId.toString());\n          \n          \n            \n                room.emit('message', data);",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675783",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The TODO comment in the create method should be addressed or removed if the corresponding task is completed.\n\n\nEnsure that this.chatService.addUserToRoom is awaited to prevent race conditions and ensure the user is added to the room before the response is returned.\n- 45:   this.chatService.addUserToRoom(res.id, request['user']);\n+ 45:   await this.chatService.addUserToRoom(res.id, request['user']);\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n              async create(@Body() createRoomDto: CreateRoomDto, @Req() request: Request) {\n          \n          \n            \n                const res = await this.roomService.create(createRoomDto, request['user']);\n          \n          \n            \n                // TODO: Add user to room\n          \n          \n            \n                this.chatService.addUserToRoom(res.id, request['user']);\n          \n          \n            \n                return res;\n          \n          \n            \n              async create(@Body() createRoomDto: CreateRoomDto, @Req() request: Request) {\n          \n          \n            \n                const res = await this.roomService.create(createRoomDto, request['user']);\n          \n          \n            \n                // TODO: Add user to room\n          \n          \n            \n                await this.chatService.addUserToRoom(res.id, request['user']);\n          \n          \n            \n                return res;",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675784",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The addUserToRoom call in the createUserOnRoom method should be awaited to ensure that the user is added to the room before the response is returned.\n- 93: this.chatService.addUserToRoom(id, request['user']);\n+ 93: await this.chatService.addUserToRoom(id, request['user']);\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                const res = await this.roomService.createUserOnRoom(id, request['user']);\n          \n          \n            \n                this.chatService.addUserToRoom(id, request['user']);\n          \n          \n            \n                return res;\n          \n          \n            \n                const res = await this.roomService.createUserOnRoom(id, request['user']);\n          \n          \n            \n                await this.chatService.addUserToRoom(id, request['user']);\n          \n          \n            \n                return res;",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675785",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Consider using a DTO or a decorator to extract the user information from the request in a type-safe manner.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675787",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 2\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between 0b2bd0d and f1b8bc5.\n\n\nFiles selected for processing (2)\n\nbackend/src/chat/chat.module.ts (1 hunks)\nbackend/src/chat/chat.service.ts (1 hunks)\n\n\n\nFiles skipped from review as they are similar to previous changes (1)\n\nbackend/src/chat/chat.module.ts\n\n\nAdditional comments: 4\nbackend/src/chat/chat.service.ts (4)\n\n\n16-18: The AuthService is now being injected into the ChatService. Ensure that the AuthService is properly provided in the module where ChatService is declared.\n\n\n21-23: The clients and users maps are used to manage WebSocket connections and user information. Verify that the usage of these maps is thread-safe and that there are no data races, especially if the service can be accessed concurrently.\n\n\n88-108: The handleConnection method correctly extracts the token and uses the AuthService to validate it. Ensure that the error handling is robust and that any exceptions thrown are handled gracefully by the WebSocket gateway.\n\n\n111-113: The handleDisconnect method removes the client from the clients and users maps. Confirm that this cleanup is sufficient and that there are no additional resources that need to be released upon disconnection.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "There are several TODO comments in the code related to creating messages and deleting rooms. Determine if these are placeholders for future implementation or if they need to be addressed before merging this pull request.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427686120",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f1b8bc5",
                                                            "authoredDate": "2023-12-15T08:21:18Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 6\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between f1b8bc5 and fa95e86.\n\n\nFiles selected for processing (6)\n\nbackend/src/chat/chat.controller.spec.ts (1 hunks)\nbackend/src/chat/chat.gateway.ts (2 hunks)\nbackend/src/chat/chat.service.spec.ts (1 hunks)\nbackend/src/chat/chat.service.ts (1 hunks)\nbackend/src/chat/dto/craete-message.dto.ts (1 hunks)\nbackend/src/room/room.controller.ts (2 hunks)\n\n\n\nFiles skipped from review due to trivial changes (1)\n\nbackend/src/chat/chat.gateway.ts\n\n\nAdditional comments: 6\nbackend/src/chat/chat.controller.spec.ts (2)\n\n\n5-6: The addition of AuthService and JwtService to the providers array is consistent with the PR objectives to enhance authentication within the chat module.\n\n\n11-17: The testing module setup using beforeEach and the retrieval of ChatController from the module are correctly implemented.\n\n\n\nbackend/src/chat/chat.service.spec.ts (3)\n\n\n4-5: The imports for AuthService and JwtService are correctly added to support the new authentication functionalities within the ChatService.\n\n\n12-12: The inclusion of AuthService and JwtService in the providers array is appropriate for setting up the testing environment with the necessary dependencies.\n\n\n1-15: While the setup for the ChatService tests has been updated to include the new dependencies, ensure that new tests have been added to cover the enhanced functionalities as mentioned in the PR objectives.\n\n\n\nVerification successful\n\nThe shell script output confirms the presence of multiple E2E test cases in the chat-gateway.e2e-spec.ts file. These tests cover various chat functionalities such as connecting to the chat server, creating and entering rooms, sending and receiving messages, and joining rooms, which align with the PR objectives to enhance E2E testing for the chat gateway.\nBased on this information, it appears that the PR's objectives regarding the expansion of E2E tests have been met.\n\n\nScripts Executed\nThe following scripts were executed for the analysis:\n\nScript:\n#!/bin/bash\n# Search for new test cases related to AuthService and JwtService in the chat.service.spec.ts file.\nrg 'it\\(.*AuthService.*|.*JwtService.*' backend/src/chat/chat.service.spec.ts\n\nLength of output: 193\n\n\nScript:\n#!/bin/bash\n# Search for all test cases in the chat.service.spec.ts file to see if new tests have been added.\nrg 'it\\(' backend/src/chat/chat.service.spec.ts\n\nLength of output: 83\n\n\nScript:\n#!/bin/bash\n# Search for test cases in the chat-gateway.e2e-spec.ts file to verify the presence of new E2E tests.\nrg 'it\\(' backend/src/chat/chat-gateway.e2e-spec.ts\n\nLength of output: 135\n\n\nScript:\n#!/bin/bash\n# Search for the chat-gateway.e2e-spec.ts file in the repository to find its correct path.\nfd 'chat-gateway.e2e-spec.ts'\n\nLength of output: 67\n\n\nScript:\n#!/bin/bash\n# Search for test cases in the chat-gateway.e2e-spec.ts file to verify the presence of new E2E tests.\nrg 'it\\(' backend/test/chat-gateway.e2e-spec.ts\n\nLength of output: 1305\n\n\nbackend/src/room/room.controller.ts (1)\n\n34-37: The addition of ChatService to the RoomController constructor is consistent with the PR objectives to enhance chat functionality integration.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Consider adding validation to ensure roomId and userId are positive integers, as negative values or zero are typically not valid identifiers.\n  @IsNumber()\n+ @Min(1)\n  @ApiProperty()\n  roomId: number;\n\n  @IsNumber()\n+ @Min(1)\n  @ApiProperty()\n  userId: number;\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n              @IsNumber()\n          \n          \n            \n              @ApiProperty()\n          \n          \n            \n              roomId: number;\n          \n          \n            \n            \n          \n          \n            \n              @IsNumber()\n          \n          \n            \n              @ApiProperty()\n          \n          \n            \n              userId: number;\n          \n          \n            \n              @IsNumber()\n          \n          \n            \n              @Min(1)\n          \n          \n            \n              @ApiProperty()\n          \n          \n            \n              roomId: number;\n          \n          \n            \n            \n          \n          \n            \n              @IsNumber()\n          \n          \n            \n              @Min(1)\n          \n          \n            \n              @ApiProperty()\n          \n          \n            \n              userId: number;",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708084",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The create method correctly implements asynchronous behavior to handle room creation and user addition to the chat room. However, the call to this.chatService.addUserToRoom should be awaited to ensure the user is added before the response is returned.\n- 44: this.chatService.addUserToRoom(res.id, req.user);\n+ 44: await this.chatService.addUserToRoom(res.id, req.user);\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n              async create(@Body() createRoomDto: CreateRoomDto, @Req() req: { user }) {\n          \n          \n            \n                const res = await this.roomService.create(createRoomDto, req.user);\n          \n          \n            \n                this.chatService.addUserToRoom(res.id, req.user);\n          \n          \n            \n                return res;\n          \n          \n            \n              async create(@Body() createRoomDto: CreateRoomDto, @Req() req: { user }) {\n          \n          \n            \n                const res = await this.roomService.create(createRoomDto, req.user);\n          \n          \n            \n                await this.chatService.addUserToRoom(res.id, req.user);\n          \n          \n            \n                return res;",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708087",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The import for CreateMessageDto has a typo in the filename (craete-message.dto instead of create-message.dto).\n- import { CreateMessageDto } from './dto/craete-message.dto';\n+ import { CreateMessageDto } from './dto/create-message.dto';\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            import {\n          \n          \n            \n              Injectable,\n          \n          \n            \n              ConflictException,\n          \n          \n            \n              UnauthorizedException,\n          \n          \n            \n            } from '@nestjs/common';\n          \n          \n            \n            import { CreateDirectMessageDto } from './dto/create-direct-message.dto';\n          \n          \n            \n            import { PrismaService } from 'src/prisma/prisma.service';\n          \n          \n            \n            import { User } from '@prisma/client';\n          \n          \n            \n            import { Socket } from 'socket.io';\n          \n          \n            \n            import { WebSocketGateway } from '@nestjs/websockets';\n          \n          \n            \n            import { AuthService } from 'src/auth/auth.service';\n          \n          \n            \n            import {\n          \n          \n            \n              Injectable,\n          \n          \n            \n              ConflictException,\n          \n          \n            \n              UnauthorizedException,\n          \n          \n            \n            } from '@nestjs/common';\n          \n          \n            \n            import { CreateDirectMessageDto } from './dto/create-direct-message.dto';\n          \n          \n            \n            import { PrismaService } from 'src/prisma/prisma.service';\n          \n          \n            \n            import { User } from '@prisma/client';\n          \n          \n            \n            import { Socket } from 'socket.io';\n          \n          \n            \n            import { WebSocketGateway } from '@nestjs/websockets';\n          \n          \n            \n            import { AuthService } from 'src/auth/auth.service';",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708094",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Ensure proper error handling in handleConnection. Catching the error and logging it without rethrowing or handling it might cause silent failures.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708096",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The createMessage and deleteRoom methods are placeholders and need to be implemented.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708098",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The comment about receiverId validation from a previous review has not been addressed. This needs to be resolved to ensure message sending is authorized.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708101",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "authentication\u306fcontroller/gateway\u3067\u3084\u308b\u306e\u304c\u901a\u4f8b\u304b\u3068\u601d\u3063\u305f\u308a\nhttps://chat.openai.com/share/3918b060-510b-4b3e-a94a-7cfaf1e2f996",
                                                        "author": {
                                                            "login": "takumihara"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1429054015",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u3053\u308c\u3063\u3066\u52d5\u304d\u307e\u3059\uff1f",
                                                        "author": {
                                                            "login": "takumihara"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1429055734",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjM5",
                "hasNextPage": false,
                "hasPreviousPage": true,
                "startCursor": "Y3Vyc29yOjMx"
            },
            "issueCount": 39
        }
    }
}