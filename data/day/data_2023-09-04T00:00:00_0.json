{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 2617,
                        "title": "refactor: receive screen",
                        "repository": {
                            "nameWithOwner": "GaloyMoney/galoy-mobile",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-09-04T09:58:19Z",
                        "mergedAt": "2023-09-05T19:23:14Z",
                        "url": "https://github.com/GaloyMoney/galoy-mobile/pull/2617",
                        "state": "MERGED",
                        "author": {
                            "login": "sandipndev"
                        },
                        "editor": {
                            "login": "sandipndev"
                        },
                        "body": "Fixes Spanish Receive screen\r\nFixes https://github.com/GaloyMoney/galoy-mobile/issues/2616",
                        "comments": {
                            "nodes": []
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "this may need to be changed in transifex? (not sure if the sync goes both way, we'll see)",
                                                        "author": {
                                                            "login": "nicolasburtey"
                                                        },
                                                        "url": "https://github.com/GaloyMoney/galoy-mobile/pull/2617#discussion_r1314763067",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "37beaab",
                                                            "authoredDate": "2023-09-04T10:40:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think it does sync. https://chat.openai.com/share/e5d50333-2d70-4c70-b4ce-652cf5d407e9",
                                                        "author": {
                                                            "login": "sandipndev"
                                                        },
                                                        "url": "https://github.com/GaloyMoney/galoy-mobile/pull/2617#discussion_r1315920182",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "37beaab",
                                                            "authoredDate": "2023-09-04T10:40:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              const xs = \"********\u2014****\u2014****\u2014****\u2014****** \"\n          \n          \n            \n              const xs = \"********\u2014****\u2014****\u2014****\u2014******\"",
                                                        "author": {
                                                            "login": "nicolasburtey"
                                                        },
                                                        "url": "https://github.com/GaloyMoney/galoy-mobile/pull/2617#discussion_r1316223191",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7dd8a7e",
                                                            "authoredDate": "2023-09-05T16:26:08Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The extra space gives the text some padding. Didn't add a style for that.",
                                                        "author": {
                                                            "login": "sandipndev"
                                                        },
                                                        "url": "https://github.com/GaloyMoney/galoy-mobile/pull/2617#discussion_r1316279833",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7dd8a7e",
                                                            "authoredDate": "2023-09-05T16:26:08Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 880,
                        "title": "Implementation of `sz deploy android` command",
                        "repository": {
                            "nameWithOwner": "SharezoneApp/sharezone-app",
                            "primaryLanguage": {
                                "name": "Dart"
                            }
                        },
                        "createdAt": "2023-09-04T15:51:42Z",
                        "mergedAt": "2023-09-04T18:11:35Z",
                        "url": "https://github.com/SharezoneApp/sharezone-app/pull/880",
                        "state": "MERGED",
                        "author": {
                            "login": "nilsreichardt"
                        },
                        "editor": null,
                        "body": "**Description**:\r\n\r\nThis pull request introduces the `sz deploy android` command into our CLI. The new command is designed to automate and simplify the process of building and deploying the Sharezone Android app to Google Play.\r\n\r\n**Key Features**:\r\n1. **Stage Selection**: Users can specify whether they want to deploy the app to the 'stable' or 'beta' stage in Google Play.\r\n2. **Flavor Support**: Currently, only the 'prod' flavor is supported for deployment, but the architecture allows for easy addition of more flavors in the future.\r\n3. **Build Number Automation**: The command fetches the latest build number from Google Play and automatically increments it for the new release.\r\n4. **Changelog Integration**: Users can provide release notes, which are automatically integrated with Fastlane for Play Store submission. If no changelog is provided, the step is gracefully skipped.\r\n5. **Google Play Credentials Validation**: Before deployment, the command checks if Fastlane can establish a connection to Google Play, ensuring no unexpected authentication issues during deployment.\r\n6. **Track Mapping**: Depending on the specified stage (beta or stable), the command determines the correct Google Play track for the deployment.\r\n\r\n**Changes Introduced**:\r\n- Defined the possible stages and flavors for the Android app deployment.\r\n- Introduced argument parsers for the `stage`, `flavor`, and `whats-new` options.\r\n- Added methods to validate Google Play credentials, fetch the latest build number, build the app, and publish it to Google Play.\r\n- Integrated Fastlane and Codemagic CLI tools for building and deployment.\r\n\r\n**Usage**:\r\n\r\n```bash\r\nsz deploy android --stage [stable|beta] --flavor prod --whats-new \"Your release notes here\"\r\n```\r\n\r\n**Note**:\r\nEnsure that Fastlane and Codemagic CLI tools are correctly installed and set up before using this command. Also, Google Play credentials should be properly configured in Fastlane.",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-09-04T16:00:56Z",
                                    "bodyText": "Visit the preview URL for this PR (updated for commit 0e1dc15):\nhttps://sharezone-test--pr880-add-fastlane-android-1prgz5wx.web.app\n(expires Thu, 07 Sep 2023 16:25:58 GMT)\n\ud83d\udd25 via Firebase Hosting GitHub Action \ud83c\udf0e\nSign: 4cb3ae61e1e018abfd9841fd3239f5b49ccc034b",
                                    "url": "https://github.com/SharezoneApp/sharezone-app/pull/880#issuecomment-1705486937",
                                    "author": {
                                        "login": "github-actions"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-04T17:14:48Z",
                                    "bodyText": "LGTM. Will the Gemfile.lock need a regular update (similar to running pub get for our packages)? If so, how would one update it?\n\nI don't think that the Gemfile.lock needs a regular update.\nHowever, if you still need to update them, you use the following command:\n[sudo] bundle update\nFor more information: https://chat.openai.com/share/69c2afd4-0e1d-4747-912e-8cbb08d321b1",
                                    "url": "https://github.com/SharezoneApp/sharezone-app/pull/880#issuecomment-1705553269",
                                    "author": {
                                        "login": "nilsreichardt"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM. Will the Gemfile.lock need a regular update (similar to running pub get for our packages)? If so, how would one update it?",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 105,
                        "title": "Add PDF reports functionality",
                        "repository": {
                            "nameWithOwner": "esag-swiss/iDig-Webapp",
                            "primaryLanguage": {
                                "name": "Vue"
                            }
                        },
                        "createdAt": "2023-09-04T06:25:05Z",
                        "mergedAt": "2023-09-06T11:23:45Z",
                        "url": "https://github.com/esag-swiss/iDig-Webapp/pull/105",
                        "state": "MERGED",
                        "author": {
                            "login": "AlZorba"
                        },
                        "editor": null,
                        "body": "**Issue** :  `https://github.com/esag-swiss/iDig-Webapp/issues/104`\r\n\r\n**Description** :    \r\nThis PR add a PDF format export/report as requested by ESAG. \r\nTHis PR also refactors the catch error when preference.json of the project is invalid.",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-09-05T15:36:19Z",
                                    "bodyText": "@dev-francois je n'ai pas r\u00e9ussi \u00e0 mettre la font dans dossier Public, mais elle est un peu plus l\u00e9g\u00e8re.",
                                    "url": "https://github.com/esag-swiss/iDig-Webapp/pull/105#issuecomment-1706853490",
                                    "author": {
                                        "login": "AlZorba"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "@AlZorba c'est vraiment tres tres bien, avec des cleans et des ameliorations ux en plus !\n\nUne remarque sur la fonction rows, \u00e7a peut\u2013\u00eatre pas mal de le faire, mais pas fondamental.\nUne remarque sur le loading du font. Si \u00e7a t'interresse, sinon plus tard\nJ'approuve et bravo !",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@AlZorba Ici tu peux utiliser une fat arrow, et donc ne pas avoir besoin de  let arr = this.checkedFieldNames; (qui sinon pourrait \u00eatre un const, par ailleurs)`",
                                                        "author": {
                                                            "login": "dev-francois"
                                                        },
                                                        "url": "https://github.com/esag-swiss/iDig-Webapp/pull/105#discussion_r1316971541",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "89f5566",
                                                            "authoredDate": "2023-09-05T15:31:37Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "@AlZorba Je suggere de renommer cette variable en rows, voir result, \u00e7a sera plus facile \u00e0 lire",
                                                        "author": {
                                                            "login": "dev-francois"
                                                        },
                                                        "url": "https://github.com/esag-swiss/iDig-Webapp/pull/105#discussion_r1316973025",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "89f5566",
                                                            "authoredDate": "2023-09-05T15:31:37Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "@AlZorba ok c'est vachement mega mieux. Par contre c'est vrai qu'on rajoute 1,3 mb au bundle, m\u00eame si l'utilisateur n'utilise jamais cet export.\nQuand on voudra ameliorer \u00e7a :\n\nsoit on regarde ensemble comment inserer \u00e7a comme une font classique, dans public.\nsoit utiliser le lazy loading, \u00e7a \u00e0 l'air assez facile : https://chat.openai.com/share/7bbcf2d4-1a64-46f2-97a3-103985367c1e\n\nCa peut-\u00eatre fait plus tard, et notons qu'il y a aussi d'autres point o\u00f9 on pourrait reduire la taille de l'app.\nNote pour debugger/ameliorer :  on peut regarder dans la console, dans la tab network, \u00e0 quelle moment cette font est load\u00e9e",
                                                        "author": {
                                                            "login": "dev-francois"
                                                        },
                                                        "url": "https://github.com/esag-swiss/iDig-Webapp/pull/105#discussion_r1316979869",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "89f5566",
                                                            "authoredDate": "2023-09-05T15:31:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "en effet",
                                                        "author": {
                                                            "login": "AlZorba"
                                                        },
                                                        "url": "https://github.com/esag-swiss/iDig-Webapp/pull/105#discussion_r1317005274",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "89f5566",
                                                            "authoredDate": "2023-09-05T15:31:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "oui",
                                                        "author": {
                                                            "login": "AlZorba"
                                                        },
                                                        "url": "https://github.com/esag-swiss/iDig-Webapp/pull/105#discussion_r1317005503",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "89f5566",
                                                            "authoredDate": "2023-09-05T15:31:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "volontiers, on pourrait regarder",
                                                        "author": {
                                                            "login": "AlZorba"
                                                        },
                                                        "url": "https://github.com/esag-swiss/iDig-Webapp/pull/105#discussion_r1317006752",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "89f5566",
                                                            "authoredDate": "2023-09-05T15:31:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 5058,
                        "title": "Move Some List and String builtins to packages",
                        "repository": {
                            "nameWithOwner": "darklang/dark",
                            "primaryLanguage": {
                                "name": "F#"
                            }
                        },
                        "createdAt": "2023-09-04T13:56:14Z",
                        "mergedAt": "2023-09-06T01:40:24Z",
                        "url": "https://github.com/darklang/dark/pull/5058",
                        "state": "MERGED",
                        "author": {
                            "login": "OceanOak"
                        },
                        "editor": {
                            "login": "OceanOak"
                        },
                        "body": "\r\nNo changelog\r\n\r\nThis PR implements the requested changes in #5043\r\n\r\n",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-09-04T19:03:54Z",
                                    "bodyText": "I think the right way to approach it is this:\nuse a builtin for slice, as that can be made pretty fast (1 slow thing)\nif you can, see if you can convert functions into slice. For example, trimFront could be implemented by finding the index of first non-whitespace element, and then calling slice\nif you need to do something to every element, converting to a list and iterating is the right approach\n\nI tried to follow this approach for String.trimStart and String.trimEnd, but I couldn't find a way to do it without using loops or turning the string into a list and use list functions.\nThese are three solutions that have worked, but one of the tests failed using these approaches:\nPACKAGE.Darklang.Stdlib.String.trimEnd_v0 \"\ud83c\uddfa\ud83c\uddf8\ud83c\uddf7\ud83c\uddfa\ud83c\uddf8 \ud83c\udde6\ud83c\uddeb\ud83c\udde6\ud83c\uddf2\ud83c\uddf8\" = \"\ud83c\uddfa\ud83c\uddf8\ud83c\uddf7\ud83c\uddfa\ud83c\uddf8 \ud83c\udde6\ud83c\uddeb\ud83c\udde6\ud83c\uddf2\ud83c\uddf8\"\nApproach 1 :\na helper function\n      let findFirstNonWhitespace (idx: Int) (str: String) : Int =\n          if (Builtin.Int.greaterThan_v0 idx (Builtin.String.length str)) then\n            -1\n          else\n            let charAtIdx = Builtin.String.slice_v0 str idx (idx + 1)\n            match charAtIdx with\n            | \" \" -> PACKAGE.Darklang.Stdlib.String.findFirstNonWhitespace (idx + 1) str\n            | \"\\t\" -> PACKAGE.Darklang.Stdlib.String.findFirstNonWhitespace (idx + 1) str\n            | \"\\n\" -> PACKAGE.Darklang.Stdlib.String.findFirstNonWhitespace (idx + 1) str\n            | \"\\u2003\" -> PACKAGE.Darklang.Stdlib.String.findFirstNonWhitespace (idx + 1) str\n            | _ -> idx\n\n\nString.trimStart and String.trimEnd\n          let trimStart (str: String) : String =\n            let firstNonWhitespace = PACKAGE.Darklang.Stdlib.String.findFirstNonWhitespace 0 str\n            if firstNonWhitespace == -1 then\n              str\n            else\n              Builtin.String.slice_v0 str firstNonWhitespace (Builtin.String.length str)\n            \n            \n        let trimEnd (str: String) : String =\n          let reversedString = Builtin.String.reverse_v0 str\n          (PACKAGE.Darklang.Stdlib.String.trimStart reversedString) |> Builtin.String.reverse_v0\n\nI am including this approach in this comment for this reason:\n\nI couldn't refactor the helper function since we don't support the following in dark\n\n         match charAtIdx with\n          | \" \"\n          | \"\\t\"\n          | \"\\n\"\n          | \"\\u2003\" ->\n            PACKAGE.Darklang.Stdlib.String.findFirstNonWhitespace (idx + 1) str\n          | _ -> idx\n          \n         // OR \n         \n         match charAtIdx with\n          | charAtIdx when Char.isWhitespace ...\n          | _ -> idx\n\nApproach 2:\n      let trimStart (str: String) : String =\n        if\n          (PACKAGE.Darklang.Stdlib.String.startsWith str \" \")\n          || (PACKAGE.Darklang.Stdlib.String.startsWith str \"\\t\")\n          || (PACKAGE.Darklang.Stdlib.String.startsWith str \"\\n\")\n          || (PACKAGE.Darklang.Stdlib.String.startsWith str \"\\u2003\")\n        then\n          PACKAGE.Darklang.Stdlib.String.trimStart (\n            PACKAGE.Darklang.Stdlib.String.dropFirst str 1\n          )\n        else\n          str\n\nApproach 3: probably the closest to what we want\nlet trimStart (str: String) : String =\n        if str == \"\" then\n          \"\"\n        else\n          if\n            (Builtin.Char.isWhitespace (\n              match (Builtin.String.head str) with\n              | Some c -> c\n              | None -> ' '\n            ))\n          then\n            PACKAGE.Darklang.Stdlib.String.trimStart (\n              PACKAGE.Darklang.Stdlib.String.dropFirst str 1\n            )\n          else\n            str\n           \n   //Char.fs\n   { name = fn \"isWhitespace\" 0\n      typeParams = []\n      parameters = [ Param.make \"c\" TChar \"\" ]\n      returnType = TBool\n      description = \"Return whether <param c> is a whitespace character\"\n      fn =\n        (function\n        | _, _, [ DChar c ] when c <> null ->\n          Ply(DBool(System.Char.IsWhiteSpace(c[0])))\n        | _ -> incorrectArgs ())\n      sqlSpec = NotQueryable\n      previewable = Pure\n      deprecated = NotDeprecated }\n\nFeedback is appreciated",
                                    "url": "https://github.com/darklang/dark/pull/5058#issuecomment-1705626573",
                                    "author": {
                                        "login": "OceanOak"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-05T02:45:07Z",
                                    "bodyText": "Approach 1 :\na helper function\n\nThis creates a full copy of the string for each whitespace character, in findFirstNonWhitespace. This is fine for 1 character but does duplicate work for more, and could be an N^2 implementation (eg for a string that's entirely whitespace).\n          let trimStart (str: String) : String =\n            let firstNonWhitespace = PACKAGE.Darklang.Stdlib.String.findFirstNonWhitespace 0 str\n            if firstNonWhitespace == -1 then\n              str\n            else\n              Builtin.String.slice_v0 str firstNonWhitespace (Builtin.String.length str)\n\nThis looks good.\n        let trimEnd (str: String) : String =\n          let reversedString = Builtin.String.reverse_v0 str\n          (PACKAGE.Darklang.Stdlib.String.trimStart reversedString) |> Builtin.String.reverse_v0\n\nThis is good except for the reversed bit. We could have a lastNonWhitespace that does the same thing but goes from the back.\nFirst non-whitespace could be done with zero copies, using something like String.findFirstIndex : (Char -> Bool) -> String -> Int. Char.IsWhitespace from approach 3 would work nicely for it. However, the approaches you've used here are all recursive, and recursive approaches don't work well for strings as they involve breaking the whole string (and thus copying it).\nStrings instead have O(1) random access, meaning you can access any element of the string immediately using the index (a property lists don't have). So you can iterate over the string using just the integer.",
                                    "url": "https://github.com/darklang/dark/pull/5058#issuecomment-1705870545",
                                    "author": {
                                        "login": "pbiggar"
                                    }
                                },
                                {
                                    "createdAt": "2023-09-06T01:40:21Z",
                                    "bodyText": "Looking good. There are I think two remaining changes, maybe more? It would make sense to merge now and do those as a followup.",
                                    "url": "https://github.com/darklang/dark/pull/5058#issuecomment-1707522739",
                                    "author": {
                                        "login": "pbiggar"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Since List.map uses List.push (which pushes elements to the front of the list) the error message changed from Builtin.Test.derrorMessage \"1\" to Builtin.Test.derrorMessage \"4\"\nPlease correct if I am wrong about the reason behind this change. And let me know if it is ok to keep it this way.",
                                                        "author": {
                                                            "login": "OceanOak"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315038722",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Looks good! Only a few comments apart from String.trimLeft (might be easier to do that in a followup PR).",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This formatting is odd?",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315201882",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "No need for this edge case here (it was because of the API in F#)",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315214224",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Could we do this without wrapping and unwrapping it with a result each time?",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315214369",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                  ///Returns a list containing <param val> repeated <param times> times\n          \n          \n            \n                  /// Returns a list containing <param val> repeated <param times> times",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315273174",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I was thinking about whether recursive implementations were more appropriate here, since this can also be implemented with List.fold. I didn't come up with a conclusion, but you might enjoy what chatgpt told me about it: https://chat.openai.com/share/809df2ba-1509-44a0-a231-e986a8a99321",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315278678",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah, your implementation does the last items first, but i think the previous implementation did the first items first.\nI think it would make more sense for it to do the first elements of the list first, but there may be reasons that isn't feasible?",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315299145",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This also relates to the ordering of List.map.",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315300349",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Neat - this taught me the strpos() fn, thanks!",
                                                        "author": {
                                                            "login": "StachuDotNet"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315310821",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "if we remove it the following test will raise an exception\nPACKAGE.Darklang.Stdlib.List.repeat_v0 11844674407356L 1 = PACKAGE.Darklang.Stdlib.Result.Result.Error\n  \"Expected `times` to be less than 2147483647, but it was `11844674407356`\"\n\nException:\nat Ply.TplPrimitives+ContinuationStateMachine`1[[System.__Canon, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=...\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(System.Threading.Thread, System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.__Canon, System.Private.CoreLib, ...\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\n   at System.Threading.PortableThreadPool+WorkerThread.WorkerThreadStart()\n./scripts/run-backend-tests: line 117: 64030 Aborted      \n\nDARK_CONFIG_TELEMETRY_EXPORTER=none DARK_CONFIG_ROLLBAR_ENABLED=n DARK_CONFIG_DB_HOST=localhost DARK_CONFIG_DB_DBNAME=...\" \"${EXPECTO_ARGS[@]}\"\n\nUnless we want to delete that test, and we don't care about that edge case?",
                                                        "author": {
                                                            "login": "OceanOak"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315661586",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think it is fine (annoying but fine), is there something specific that appears odd to you?\nI tried to write it as a single line PACKAGE.Darklang.Stdlib.Result.Result.Ok -1 but the formatter keeps changing it",
                                                        "author": {
                                                            "login": "OceanOak"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315665089",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I believe this implementation is more performant than the previous one. wdyt?",
                                                        "author": {
                                                            "login": "OceanOak"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315682278",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2c13167",
                                                            "authoredDate": "2023-09-05T10:05:26Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This was only happening with that error case; I didn't have to change the results of the other tests. Updating List.map to use List.fold solved this issue",
                                                        "author": {
                                                            "login": "OceanOak"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315685409",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I couldn't find a way of doing it without wrapping and unwrapping",
                                                        "author": {
                                                            "login": "OceanOak"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315710544",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Is it worth renaming our List.fold to List.foldRight and add List.foldLeft?",
                                                        "author": {
                                                            "login": "OceanOak"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1315760582",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2c13167",
                                                            "authoredDate": "2023-09-05T10:05:26Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Maybe - is that what they are? I forget the difference between foldLeft and foldRight. I wouldn't mind having fold be a synonym of whichever one is an appropriate default as well.",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1316580318",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2c13167",
                                                            "authoredDate": "2023-09-05T10:05:26Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Turns out this was just how github was displaying it to me (it looked like there was a blank line between each list element).",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1316581269",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We can delete that test. Eventually we run out of memory, not a lot can be done about that, right?",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1316583452",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Make one version that returns a list (not a result), and assumes valid inputs. Call that from an outer function that checks the inputs and uses Results.",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1316584244",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "1c516f1",
                                                            "authoredDate": "2023-09-04T14:44:24Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I believe this implementation is more performant than the previous one. wdyt?\n\nHonestly no idea.",
                                                        "author": {
                                                            "login": "pbiggar"
                                                        },
                                                        "url": "https://github.com/darklang/dark/pull/5058#discussion_r1316585085",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2c13167",
                                                            "authoredDate": "2023-09-05T10:05:26Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjQ=",
                "hasNextPage": false,
                "hasPreviousPage": false,
                "startCursor": "Y3Vyc29yOjE="
            },
            "issueCount": 4
        }
    }
}