{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 8231,
                        "title": "feat: implement redis database number",
                        "repository": {
                            "nameWithOwner": "chatwoot/chatwoot",
                            "primaryLanguage": {
                                "name": "Ruby"
                            }
                        },
                        "createdAt": "2023-10-27T10:13:03Z",
                        "mergedAt": null,
                        "url": "https://github.com/chatwoot/chatwoot/pull/8231",
                        "state": "OPEN",
                        "author": {
                            "login": "legioner0"
                        },
                        "editor": {
                            "login": "legioner0"
                        },
                        "body": "# Pull Request Template\r\n\r\n## Description\r\n\r\nThis PR adds configurable Redis database number.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n## How Has This Been Tested?\r\n\r\nBuild and start app in docker with custom `REDIS_DB_NUM` value - works correctly.\r\n\r\n## Checklist:\r\n\r\n- [x] My code follows the style guidelines of this project\r\n- [x] I have performed a self-review of my code\r\n- [ ] I have commented on my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] Any dependent changes have been merged and published in downstream modules\r\n",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-10-27T10:13:09Z",
                                    "bodyText": "\u2705 Deploy Preview for chatwoot-storybook canceled.\n\n\n\nName\nLink\n\n\n\n\n\ud83d\udd28 Latest commit\n9068e82\n\n\n\ud83d\udd0d Latest deploy log\nhttps://app.netlify.com/sites/chatwoot-storybook/deploys/65a0f087739a31000839dac1",
                                    "url": "https://github.com/chatwoot/chatwoot/pull/8231#issuecomment-1782657739",
                                    "author": {
                                        "login": "netlify"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Few review comments\n\nref:\nhttps://gitlab.com/gitlab-org/omnibus-gitlab/-/issues/454\nhttps://chat.openai.com/share/4ebcdaf3-79aa-495d-b25b-c53ac7197eed",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Think the default db which rails use is 0",
                                                        "author": {
                                                            "login": "sojan-official"
                                                        },
                                                        "url": "https://github.com/chatwoot/chatwoot/pull/8231#discussion_r1480005185",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f6bd514",
                                                            "authoredDate": "2024-02-05T05:49:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "the default value should be 0",
                                                        "author": {
                                                            "login": "sojan-official"
                                                        },
                                                        "url": "https://github.com/chatwoot/chatwoot/pull/8231#discussion_r1480006070",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f6bd514",
                                                            "authoredDate": "2024-02-05T05:49:25Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "let's take the case where Redis db number is specified as a separate case in the specs and ensure the default one remains 0 when environment variable is not present",
                                                        "author": {
                                                            "login": "sojan-official"
                                                        },
                                                        "url": "https://github.com/chatwoot/chatwoot/pull/8231#discussion_r1480009160",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f6bd514",
                                                            "authoredDate": "2024-02-05T05:49:25Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "done",
                                                        "author": {
                                                            "login": "legioner0"
                                                        },
                                                        "url": "https://github.com/chatwoot/chatwoot/pull/8231#discussion_r1481552769",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f6bd514",
                                                            "authoredDate": "2024-02-05T05:49:25Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 33,
                        "title": "Support more languages",
                        "repository": {
                            "nameWithOwner": "grantjenks/py-tree-sitter-languages",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-10-27T16:01:58Z",
                        "mergedAt": null,
                        "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33",
                        "state": "CLOSED",
                        "author": {
                            "login": "Freed-Wu"
                        },
                        "editor": {
                            "login": "Freed-Wu"
                        },
                        "body": "Fix #32",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-10-27T16:13:15Z",
                                    "bodyText": "Look at the past merges. You have to change more than repos.txt",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1783173522",
                                    "author": {
                                        "login": "grantjenks"
                                    }
                                },
                                {
                                    "createdAt": "2023-10-28T05:22:04Z",
                                    "bodyText": "Update build.py",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1783706877",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2023-10-28T14:41:56Z",
                                    "bodyText": "Also the readme and the tests.",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1783833828",
                                    "author": {
                                        "login": "grantjenks"
                                    }
                                },
                                {
                                    "createdAt": "2023-10-29T10:20:14Z",
                                    "bodyText": "Updated",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1784057647",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2023-10-29T10:20:54Z",
                                    "bodyText": "Related discussion: nvim-treesitter/nvim-treesitter#5588",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1784057785",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-06T15:35:31Z",
                                    "bodyText": "@grantjenks",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1795146651",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-06T15:53:12Z",
                                    "bodyText": "You can\u2019t just delete all the licenses from the readme. Distributing in binary form doesn\u2019t necessarily remove all license restrictions.",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1795198321",
                                    "author": {
                                        "login": "grantjenks"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-06T16:56:15Z",
                                    "bodyText": "Can we have some method to update license automatically like nvim-treesitter/nvim-treesitter#5588 (comment)?",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1795488860",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-28T06:29:38Z",
                                    "bodyText": "You can\u2019t just delete all the licenses from the readme.\n\nI have added the licenses.\n\nDistributing in binary form doesn\u2019t necessarily remove all license restrictions.\n\nnvim-treesitter doesn't add any license in README. Is it necessary?",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1829196809",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-29T08:50:01Z",
                                    "bodyText": "@grantjenks",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1831465796",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-29T13:17:42Z",
                                    "bodyText": "And, I advise to add a scheduled CI/CD to update the version.",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1831880632",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2023-12-22T05:31:39Z",
                                    "bodyText": "@grantjenks Any other problem? If you are busy to review this PR, can you add me to collaborators?",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1867260757",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2024-01-02T19:17:14Z",
                                    "bodyText": "Looking at the project licenses, I don't think you can add GPL'd code and maintain this project as Apache 2.\nChatGPT thinks so too: https://chat.openai.com/share/fe181dca-6ebc-4965-890e-d8ef20cfcb6b\nIANAL",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1874441068",
                                    "author": {
                                        "login": "grantjenks"
                                    }
                                },
                                {
                                    "createdAt": "2024-01-03T02:12:10Z",
                                    "bodyText": "add GPL'd code and maintain this project as Apache 2.\n\nWhere is GPL's code? This project's license shouldn't be changed.",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1874770737",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2024-01-04T16:00:37Z",
                                    "bodyText": "Could you move the hashes of the subrepo to stable commit (or the commit with latest release attached if possible)? I don't think all of them are stable.",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1877343894",
                                    "author": {
                                        "login": "sansmoraxz"
                                    }
                                },
                                {
                                    "createdAt": "2024-01-04T21:25:14Z",
                                    "bodyText": "Also a lot of them are missing src/parser.c. (Written in JS)\nThose will fail to build.",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1877780880",
                                    "author": {
                                        "login": "sansmoraxz"
                                    }
                                },
                                {
                                    "createdAt": "2024-01-20T16:33:10Z",
                                    "bodyText": "a lot of them are missing src/parser.c\n\nNot sure why missing. Let us delete them before we know why.",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1902169257",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2024-01-20T16:34:40Z",
                                    "bodyText": "There will need to be an ALLOWLIST of Apache2 compatible software licenses.\n\nHow to get the allowlist?",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1902169521",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2024-02-17T10:09:58Z",
                                    "bodyText": "There are many languages information is stored in https://github.com/nvim-treesitter/nvim-treesitter/blob/master/lua/nvim-treesitter/parsers.lua#L79-L2269 and updated very frequently.\nWe should have a method to extract them to get the latest parsers.",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1949923848",
                                    "author": {
                                        "login": "Freed-Wu"
                                    }
                                },
                                {
                                    "createdAt": "2024-02-17T11:57:22Z",
                                    "bodyText": "Is it really a better approach though?\nI find locking down to commit id's to be a much more sensible option.",
                                    "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#issuecomment-1949983231",
                                    "author": {
                                        "login": "sansmoraxz"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "There will need to be an ALLOWLIST of Apache2 compatible software licenses.\nGPLv3 is not compatible with Apache2.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "GPL'd code",
                                                        "author": {
                                                            "login": "grantjenks"
                                                        },
                                                        "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#discussion_r1440691973",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "553520a",
                                                            "authoredDate": "2023-10-27T16:01:15Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "GPL'd code",
                                                        "author": {
                                                            "login": "grantjenks"
                                                        },
                                                        "url": "https://github.com/grantjenks/py-tree-sitter-languages/pull/33#discussion_r1440692351",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "553520a",
                                                            "authoredDate": "2023-10-27T16:01:15Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 198,
                        "title": "Use \"inherit left, wildcard right\" behavior in base URL application and constructor string parsing.",
                        "repository": {
                            "nameWithOwner": "whatwg/urlpattern",
                            "primaryLanguage": {
                                "name": "HTML"
                            }
                        },
                        "createdAt": "2023-10-27T20:40:22Z",
                        "mergedAt": "2023-11-07T21:53:28Z",
                        "url": "https://github.com/whatwg/urlpattern/pull/198",
                        "state": "MERGED",
                        "author": {
                            "login": "jeremyroman"
                        },
                        "editor": {
                            "login": "pr-preview"
                        },
                        "body": "The following changes apply to patterns which are constructed using a base URL, the constructor string syntax, or both -- but not any pattern which explicitly specifies components separately without a base URL.\n\n* Components are not inherited from a base URL if an \"earlier\" component is explicitly specified.\n* In the string format, unspecified \"later\" components are implicitly wildcarded, rather than required to be empty (with the exception of the port, which is always taken to be specified when the hostname is).\n* Username and password are never implicitly specified or inherited.\n\nFor example:\n1. `\"https://example.com/*\"` also matches with any username, password, search, and hash. Previously this would be written `\"https://*:*@example.com/*\\\\?*#*\"`.\n2. `new URLPattern({ pathname: \"/login\" }, \"https://example.com/?q=hello\")` accepts any query string and hash, not only `\"?q=hello\"` and `\"\"`.\n3. `\"https://*:*\"` or `{protocol: \"https\"}` means \"any HTTPS URL, on any port\", and `\"https://*\"` means \"any HTTPS URL on the default port (443)\". These have the same meaning whether or not a base URL is provided, since specifying the protocol prohibits inheritance of other components.\n\nThis makes patterns more expansive than before, in cases where wildcards are likely to be desirable.\n\nThe logic of inheriting components from a base URL dictionary is also similarly changed in a way that may make it _not_ match where it did before, but more consistently with the above and with how relative URL strings are resolved. For example, `new URLPattern(\"https://example.com/foo?q=1#hello\").test({pathname: \"/foo\", hash: \"hello\", baseURL: \"https://example.com/bar?q=1\"})` previously returned `true` but will now be `false`, since the search component is not inherited when the pathname is specified. This is analogous to how `new URL(\"/foo#hello\", \"https://example.com/bar?q=1\")` works. The reverse is also possible; in both cases this is quite niche.\n\nFixes #179.\n\n---\n\n<!--\nThank you for contributing to the URL Pattern Standard! Please describe the change you are making and complete the checklist below if your change is not editorial.\nWhen editing this comment after the PR is created, check that PR-Preview doesn't overwrite your changes.\nIf you think your PR is ready to land, please double-check that the build is passing and the checklist is complete before pinging.\n-->\n\n- [x] At least two implementers are interested (and none opposed):\n   * Google Chrome\n   * Safari (per https://github.com/whatwg/urlpattern/issues/179#issuecomment-1735850741)\n- [x] [Tests](https://github.com/web-platform-tests/wpt) are written and can be reviewed and commented upon at:\n   * https://chromium-review.googlesource.com/c/chromium/src/+/4975595\n- [x] [Implementation bugs](https://github.com/whatwg/meta/blob/main/MAINTAINERS.md#handling-pull-requests) are filed:\n   * Chromium: https://bugs.chromium.org/p/chromium/issues/detail?id=1468446\n   * Gecko: https://bugzilla.mozilla.org/show_bug.cgi?id=1731418 (vendor does not yet implement the spec)\n   * WebKit: [no known URLPattern bug] (vendor does not yet implement the spec)\n   * Deno: https://github.com/denoland/deno/issues/21073\n   * kenchris/urlpattern-polyfill: https://github.com/kenchris/urlpattern-polyfill/issues/122\n- [x] [MDN issue](https://github.com/whatwg/meta/blob/main/MAINTAINERS.md#handling-pull-requests) is filed: https://github.com/mdn/content/issues/30024\n- [x] The top of this comment includes a [clear commit message](https://github.com/whatwg/meta/blob/main/COMMITTING.md) to use. <!-- If you created this PR from a single commit, Github copied its message. Otherwise, you need to add a commit message yourself. -->\n\n(See [WHATWG Working Mode: Changes](https://whatwg.org/working-mode#changes) for more details.)\n\n\n<!--\n    This comment and the below content is programmatically generated.\n    You may add a comma-separated list of anchors you'd like a\n    direct link to below (e.g. #idl-serializers, #idl-sequence):\n\n    Don't remove this comment or modify anything below this line.\n    If you don't want a preview generated for this pull request,\n    just replace the whole of this comment's content by \"no preview\"\n    and remove what's below.\n-->\n***\n<a href=\"https://whatpr.org/urlpattern/198.html\" title=\"Last updated on Nov 7, 2023, 6:15 PM UTC (7cad49e)\">Preview</a> | <a href=\"https://whatpr.org/urlpattern/198/c8d5072...7cad49e.html\" title=\"Last updated on Nov 7, 2023, 6:15 PM UTC (7cad49e)\">Diff</a>",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-10-27T20:40:37Z",
                                    "bodyText": "@sisidovski @domenic FYI",
                                    "url": "https://github.com/whatwg/urlpattern/pull/198#issuecomment-1783488240",
                                    "author": {
                                        "login": "jeremyroman"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-01T01:54:05Z",
                                    "bodyText": "Updated commit message in the opening comment (hopefully it's reasonably clear).\nI assume Gecko and WebKit implementation bugs are not desired since they don't yet (to my knowledge) implement URLPattern; is that right? I can file Deno and urlpattern-polyfill ones shortly before merging if appropriate. Ditto for MDN.\nFor implementer interest, it sounded like Anne was on board with this direction; what level of assent is required to add WebKit to the implementer interest list?",
                                    "url": "https://github.com/whatwg/urlpattern/pull/198#issuecomment-1788277845",
                                    "author": {
                                        "login": "jeremyroman"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-01T04:01:32Z",
                                    "bodyText": "Updated commit message in the opening comment (hopefully it's reasonably clear).\n\nLGTM! You might want to add something about the compatibility implications, and how we've measured them to be low.\n\nI assume Gecko and WebKit implementation bugs are not desired since they don't yet (to my knowledge) implement URLPattern; is that right?\n\nRight, we can treat them as being under the umbrella \"implement URLPattern\" bugs.\n\nFor implementer interest, it sounded like Anne was on board with this direction; what level of assent is required to add WebKit to the implementer interest list?\n\nWhat I would do is check the box for WebKit, linking to #179 (comment) , but also tag @annevk to confirm, and give a few days before merging in case he has objections or wants to take a closer look.",
                                    "url": "https://github.com/whatwg/urlpattern/pull/198#issuecomment-1788372122",
                                    "author": {
                                        "login": "domenic"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-02T20:14:21Z",
                                    "bodyText": "What I would do is check the box for WebKit, linking to #179 (comment) , but also tag @annevk to confirm, and give a few days before merging in case he has objections or wants to take a closer look.\n\nAlright, will do unless @annevk objects.",
                                    "url": "https://github.com/whatwg/urlpattern/pull/198#issuecomment-1791476258",
                                    "author": {
                                        "login": "jeremyroman"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-06T09:07:27Z",
                                    "bodyText": "I didn't do an in-depth review, but happy to agree on behalf of WebKit with the behavior we're aiming for here.",
                                    "url": "https://github.com/whatwg/urlpattern/pull/198#issuecomment-1794366677",
                                    "author": {
                                        "login": "annevk"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-07T08:23:04Z",
                                    "bodyText": "Apologize for the delay, LGTM with a few questions.",
                                    "url": "https://github.com/whatwg/urlpattern/pull/198#issuecomment-1798020061",
                                    "author": {
                                        "login": "sisidovski"
                                    }
                                },
                                {
                                    "createdAt": "2023-11-07T21:52:13Z",
                                    "bodyText": "Chromium CL has also landed, and should ship in M121. \ud83e\udd1e",
                                    "url": "https://github.com/whatwg/urlpattern/pull/198#issuecomment-1800239551",
                                    "author": {
                                        "login": "jeremyroman"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Normatively LGTM, just editorial suggestions",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Maybe add or or two examples with searches and hashes here.",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1382895363",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              <p>In the constructor string algorithm, the pathname, search and hash are wildcarded if earlier components are specified but later ones are not. For example, \"`https://example.com/foo`\" matches any search and any hash. Similarly, \"`https://example.com`\" matches any URL on that origin. The username and password components are always wildcard unless they are explicitly specified.\n          \n          \n            \n              <p>In the constructor string algorithm, the pathname, search, and hash are wildcarded if earlier components are specified but later ones are not. For example, \"`https://example.com/foo`\" matches any search and any hash. Similarly, \"`https://example.com`\" matches any URL on that origin. The username and password components are always wildcard unless they are explicitly specified.\n          \n      \n    \n    \n  \n\nper https://whatwg.org/style-guide#grammar",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1382895800",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The new version of this note doesn't make a lot of sense. Previously, it was contrasting new URLPattern({ pathname: 'foo' }) and the constructor string parser. Now, it's stating two disconnected facts: one about the { pathname: 'foo' } version, and one about the constructor string parser. And for some reason it's using \"instead\" to contrast them, even though the two disconnected facts are actually very similar.\nI think maybe this note could be deleted, now that the treatment is more symmetric? Or maybe something like the following:\n\nWhen constructing a pattern using a {{URLPatternInit}} like new URLPattern({ pathname: 'foo' }) any missing components will be defaulted to wildcards. For the constructor string case, a somewhat-similar behavior applies: missing components are treated as either the empty string, or as wildcards, depending on what components do appear in the input string. In particular, missing components which appear \"later\" than present components are treated as wildcards, whereas missing components that appear \"earlier\" than present components are treated as the empty string.\nTo accomplish this behavior, missing components aren't set in the parser's result until a later component is encountered, as part of the change state algorithm.",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1382900095",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                1. If |parser|'s [=constructor string parser/state=] is \"<a for=\"constructor string parser/state\">`protocol`</a>\", \"<a for=\"constructor string parser/state\">`authority`</a>\", \"<a for=\"constructor string parser/state\">`username`</a>\", \"<a for=\"constructor string parser/state\">`password`</a>\", \"<a for=\"constructor string parser/state\">`hostname`</a>\", or \"<a for=\"constructor string parser/state\">`port`</a>\"; |new state| is \"<a for=\"constructor string parser/state\">`search`</a>\", or \"<a for=\"constructor string parser/state\">`hash`</a>\"; and |parser|'s [=constructor string parser/result=][\"{{URLPatternInit/pathname}}\"] does not [=map/exist=], then:\n          \n          \n            \n                1. If |parser|'s [=constructor string parser/state=] is \"<a for=\"constructor string parser/state\">`protocol`</a>\", \"<a for=\"constructor string parser/state\">`authority`</a>\", \"<a for=\"constructor string parser/state\">`username`</a>\", \"<a for=\"constructor string parser/state\">`password`</a>\", \"<a for=\"constructor string parser/state\">`hostname`</a>\", or \"<a for=\"constructor string parser/state\">`port`</a>\"; |new state| is \"<a for=\"constructor string parser/state\">`search`</a>\" or \"<a for=\"constructor string parser/state\">`hash`</a>\"; and |parser|'s [=constructor string parser/result=][\"{{URLPatternInit/pathname}}\"] does not [=map/exist=], then:",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1382903472",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Is this notion of \"more specific\" shared by both inheritance schemes? If so, maybe this helpful note should be moved somewhere more generic? Then the discussions of \"later\" can link to it.\nHowever, they do seem subtlely different, so probably there's not much to be done here. (I guess, is it possible to give a similar nice list-based explanation for the constructor string parsing?)",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1382905677",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                  Username and password are also never inherited when constructing patterns, only for a URL being matched.\n          \n          \n            \n                  Username and password are also never inherited from the base URL when constructing a new {{URLPattern}} from a {{URLPatternInit}}. (They are, however, inherited from the base URL supplied as an argument to {{URLPattern/test()}} or {{URLPattern/exec()}}, for the URL being matched.)",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1382907942",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I think this algorithm has a persistent, existing problem of conflating \"not present\" and null. This is worse now because you're doing the right thing and doing \"exists\" checks in your new spec text, but the spec text right below it is doing \"null\" checks.\nProbably you should fix them all to be \"exists\" checks.",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1382910296",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "and -> or here and below, I think?",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1382913335",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Added a couple of additional examples, one with more going on with search and hash, and another with a base URL which doesn't inherit the search.",
                                                        "author": {
                                                            "login": "jeremyroman"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384014327",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Okay, removed.",
                                                        "author": {
                                                            "login": "jeremyroman"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384018280",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "It is essentially the same notion (with a couple of subtleties), but it so happens that the constructor string syntax doesn't have any way to specify, e.g., just a port with no hostname or protocol, or a password without a username, so only a few cases are actually possible there.\nBecause how it applies to the two cases is different, in normative text (and implementation code) it's a little simpler to just deal with cases that are possible rather than the underlying principle.\nI've expanded the constructor string note to refer to this one a little. I could give the first of these lists there, but I'm not sure how much clarity it adds.",
                                                        "author": {
                                                            "login": "jeremyroman"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384074592",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Done, with slightly different wording.",
                                                        "author": {
                                                            "login": "jeremyroman"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384083154",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "I'm unsure. The WHATWG style guide is silent and I haven't found another style reference, probably because \"none of\" in formal writing generally doesn't go directly into a list. To me \"none of A, B, and C\" seems most natural (i.e., none of the elements in this set, which consists of A, B, and C), but \"or\" doesn't sound wrong either.\nAnother alternative would be \"neither...nor\", but for three or more items it's usual to repeat \"nor\" which gets pretty tedious for like 7 items that we get to (even more than the famous USPS creed):\n\nIf init contains neither \"protocol\", nor \"hostname\", nor \"port\", nor \"pathname\", nor \"search\", nor \"hash\", ...\n\nYet another would be to use \"any\" instead of \"none\" and move the negation earlier, but it reads as a little more verbose too:\n\nIf init does not contain any of \"protocol\", \"hostname\", \"port\", \"pathname\", \"search\", and \"hash\", ...\n\nI don't think it's ambiguous in any case; what do you think?",
                                                        "author": {
                                                            "login": "jeremyroman"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384092770",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM with more nits, not all of which I'm sure about. @sisidovski did you want to take a look?",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                <dd>\"*\"\n          \n          \n            \n                <dd>\"`*`\"",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384406042",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "551c882",
                                                            "authoredDate": "2023-11-06T22:59:52Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Maybe insert a </div><div class=\"note\"> before this since logically it feels like there are two notes here.",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384407040",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "551c882",
                                                            "authoredDate": "2023-11-06T22:59:52Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "LGTM",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384407785",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                  Username and password are also never inherited from a base URL when constructing a {{URLPattern}}. (They are, however, inherited from the base URL supplied as an argument to {{URLPattern/test()}} or {{URLPattern/exec()}}.)\n          \n          \n            \n                  Username and password are also never inherited from a base URL when constructing a {{URLPattern}}. (They are, however, inherited from the base URL when parsing a URL from the string supplied as an argument to {{URLPattern/test()}} or {{URLPattern/exec()}}.)",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384408204",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "551c882",
                                                            "authoredDate": "2023-11-06T22:59:52Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "ChatGPT agrees with \"and\": https://chat.openai.com/share/550e4e1f-39cf-4a01-8664-85cdbb399d2b. (Bard is incoherent.)\nI might go with\n\nIf init does not contain \"protocol\", \"hostname\", \"port\", \"pathname\", \"search\", or \"hash\", ...\n\nbut I don't think we need to spend any more time on this. I agree people will understand either way :)",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384410615",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "2d122ee",
                                                            "authoredDate": "2023-10-31T02:54:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              1. If |init|[\"{{URLPatternInit/protocol}}\"] [=map/exists=] then set |result|[\"{{URLPatternInit/protocol}}\"] to the result of [=process protocol for init=] given |init|[\"{{URLPatternInit/protocol}}\"] and |type|.\n          \n          \n            \n              1. If |init|[\"{{URLPatternInit/protocol}}\"] [=map/exists=], then set |result|[\"{{URLPatternInit/protocol}}\"] to the result of [=process protocol for init=] given |init|[\"{{URLPatternInit/protocol}}\"] and |type|.\n          \n      \n    \n    \n  \n\nhere and below feels slightly nicer to me.",
                                                        "author": {
                                                            "login": "domenic"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384411013",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "551c882",
                                                            "authoredDate": "2023-11-06T22:59:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Do we want a mention the exception of port here as other components are explicitly mentioned? It also makes sense not having it since we have a note in L723 though.",
                                                        "author": {
                                                            "login": "sisidovski"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384450011",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "551c882",
                                                            "authoredDate": "2023-11-06T22:59:52Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Just to confirm, |type| will be pattern only when constructing, right? match() and exec() also process URLPatternInit, but |type| is \"url\" in that case so I believe this is correct.",
                                                        "author": {
                                                            "login": "sisidovski"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1384529372",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "551c882",
                                                            "authoredDate": "2023-11-06T22:59:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Added \"when parsing a URL\". You can actually supply a dictionary rather than a string if you want, and this behavior also applies there. e.g. urlPattern.test({pathname: \"/world\"}, \"https://user:pass@example.com/\") is a thing you can do.",
                                                        "author": {
                                                            "login": "jeremyroman"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1385277242",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "551c882",
                                                            "authoredDate": "2023-11-06T22:59:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Added a mention here.",
                                                        "author": {
                                                            "login": "jeremyroman"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1385280735",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "551c882",
                                                            "authoredDate": "2023-11-06T22:59:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes, exactly.",
                                                        "author": {
                                                            "login": "jeremyroman"
                                                        },
                                                        "url": "https://github.com/whatwg/urlpattern/pull/198#discussion_r1385281216",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "551c882",
                                                            "authoredDate": "2023-11-06T22:59:52Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjM=",
                "hasNextPage": false,
                "hasPreviousPage": false,
                "startCursor": "Y3Vyc29yOjE="
            },
            "issueCount": 3
        }
    }
}