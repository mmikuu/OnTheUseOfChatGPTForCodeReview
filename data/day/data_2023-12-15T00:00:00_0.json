{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 8,
                        "title": "Ac404 26 deleting merchant",
                        "repository": {
                            "nameWithOwner": "timjuic/paypro-android",
                            "primaryLanguage": {
                                "name": "Kotlin"
                            }
                        },
                        "createdAt": "2023-12-15T11:13:35Z",
                        "mergedAt": "2024-01-04T11:34:29Z",
                        "url": "https://github.com/timjuic/paypro-android/pull/8",
                        "state": "MERGED",
                        "author": {
                            "login": "dominikn1"
                        },
                        "editor": null,
                        "body": "I added DeletingMerchantPage inside app/ui module.",
                        "comments": {
                            "nodes": []
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "You should delete the empty space here so the code looks nicer",
                                                        "author": {
                                                            "login": "mkljaic20"
                                                        },
                                                        "url": "https://github.com/timjuic/paypro-android/pull/8#discussion_r1427860469",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4f0ab6b",
                                                            "authoredDate": "2023-12-15T10:13:42Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "You should delete an empty space left around line 80 in DeletingMerchantPage. Everything else looks good",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "DISMISSED",
                                        "bodyText": "Everything looks good, nice work.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "Its a solid looking page for deleting merchants. However, according to our app sketches this should be a modal window. There is no need for an extra page for this.\nHere is how you could implement it as a modal window. I asked chatgpt to make it based on your existing code. https://chat.openai.com/share/d94fa9ba-11a5-4c40-bae8-067e01039e30",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "DISMISSED",
                                        "bodyText": "@timjuic already covered any remark I had, so just fix what he already said.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "DISMISSED",
                                        "bodyText": "Deleting merchants appears to be working well now. Modal window and buttons look okay. It would be nice if you could just replace your inputField with our composable PayProLabeledInput Its single line and has already predefined styling.\nThere is 1 more thing that needs to be done here. And that is removing the merchant from the page that was just deleted. This could be done by just refreshing the merchant list. (getting it from the database again)",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Is there a reason why this was switched to 8.2.0? This might cause issues with other modules and code",
                                                        "author": {
                                                            "login": "timjuic"
                                                        },
                                                        "url": "https://github.com/timjuic/paypro-android/pull/8#discussion_r1441454108",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6ed2b30",
                                                            "authoredDate": "2024-01-03T23:05:17Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "DISMISSED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 33,
                        "title": "feat: Add altfire_lints",
                        "repository": {
                            "nameWithOwner": "altive/altfire",
                            "primaryLanguage": {
                                "name": "Dart"
                            }
                        },
                        "createdAt": "2023-12-15T11:43:58Z",
                        "mergedAt": "2023-12-26T02:51:41Z",
                        "url": "https://github.com/altive/altfire/pull/33",
                        "state": "MERGED",
                        "author": {
                            "login": "naipaka"
                        },
                        "editor": {
                            "login": "naipaka"
                        },
                        "body": "## \ud83d\udd17 Issue Link\r\n\r\ncloses #40\r\n\r\n## \ud83d\ude4c What I did\r\n\r\n<!-- What did you do in this pull request? -->\r\n\r\n- Add flutterfire lint package\r\n- Add dispose_config lint\r\n\r\n## \u270d\ufe0f What I didn't do\r\n\r\n<!-- What didn't you address in this pull request? If none, you can write \"None\". -->\r\n\r\n- None\r\n\r\n## \u2705 Verification\r\n\r\n<!-- Build and launch verification + any necessary operational checks -->\r\n\r\n- [ ] Android\r\n- [ ] iOS\r\n- [ ] macOS\r\n- [ ] Web\r\n\r\n## Screenshots\r\n\r\n<!-- If there are UI changes, attach Before and After screenshots or videos -->\r\n\r\n## Additional Information\r\n\r\n<!-- Any reference information for the reviewer (such as concerns or notes about the implementation) -->\r\n",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-12-22T06:07:02Z",
                                    "bodyText": "Codecov Report\nAll modified and coverable lines are covered by tests \u2705\n\nComparison is base (62f405a) 54.47% compared to head (a4fb9a6) 54.47%.\n\nAdditional details and impacted files\n@@           Coverage Diff           @@\n##             main      #33   +/-   ##\n=======================================\n  Coverage   54.47%   54.47%           \n=======================================\n  Files          11       11           \n  Lines         268      268           \n=======================================\n  Hits          146      146           \n  Misses        122      122           \n\n\u2614 View full report in Codecov by Sentry.\n\ud83d\udce2 Have feedback on the report? Share it here.",
                                    "url": "https://github.com/altive/altfire/pull/33#issuecomment-1867280988",
                                    "author": {
                                        "login": "codecov"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Added a melos command for custom_lint!",
                                                        "author": {
                                                            "login": "naipaka"
                                                        },
                                                        "url": "https://github.com/altive/altfire/pull/33#discussion_r1434763641",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a4fb9a6",
                                                            "authoredDate": "2023-12-22T06:22:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Added missing dispose in tests.",
                                                        "author": {
                                                            "login": "naipaka"
                                                        },
                                                        "url": "https://github.com/altive/altfire/pull/33#discussion_r1434763804",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a4fb9a6",
                                                            "authoredDate": "2023-12-22T06:22:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Added a dummy test as the test would fail without any test files.",
                                                        "author": {
                                                            "login": "naipaka"
                                                        },
                                                        "url": "https://github.com/altive/altfire/pull/33#discussion_r1434763928",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a4fb9a6",
                                                            "authoredDate": "2023-12-22T06:22:34Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "This is a test file for Custom Lint Rule. Referenced riverpod_lint tests from https://github.com/rrousselGit/riverpod/tree/master/packages/riverpod_lint_flutter_test.",
                                                        "author": {
                                                            "login": "naipaka"
                                                        },
                                                        "url": "https://github.com/altive/altfire/pull/33#discussion_r1434764051",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a4fb9a6",
                                                            "authoredDate": "2023-12-22T06:22:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'm starting to think that naming it flutterfire_adapter_lint might be better than fluttefire_lints, as the latter could be mistaken for a lint package of FlutterFire itself. What do you think?\ud83e\uddd0",
                                                        "author": {
                                                            "login": "naipaka"
                                                        },
                                                        "url": "https://github.com/altive/altfire/pull/33#discussion_r1434811836",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a4fb9a6",
                                                            "authoredDate": "2023-12-22T06:22:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hmmm, I'm stumped. I guess it's correct that it's adpter that's the target.\nIf it's flutterfire_lint, it feels like a linter on using FlutterFire itself directly \ud83e\uddd0.",
                                                        "author": {
                                                            "login": "riscait"
                                                        },
                                                        "url": "https://github.com/altive/altfire/pull/33#discussion_r1434819691",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a4fb9a6",
                                                            "authoredDate": "2023-12-22T06:22:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "How about alt(ive) + fire(base) for altfire_lints?\nwith an alternate meaning for alt.\nMaybe the plural would be better since we have multiple lint rules?\nhttps://chat.openai.com/share/a979e3fb-f3fc-4216-bd93-7b6265b32a46",
                                                        "author": {
                                                            "login": "riscait"
                                                        },
                                                        "url": "https://github.com/altive/altfire/pull/33#discussion_r1435908762",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a4fb9a6",
                                                            "authoredDate": "2023-12-22T06:22:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Thank you for the suggestion!\nI like the idea of using altfire_lints. I'll make the change!",
                                                        "author": {
                                                            "login": "naipaka"
                                                        },
                                                        "url": "https://github.com/altive/altfire/pull/33#discussion_r1435978137",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a4fb9a6",
                                                            "authoredDate": "2023-12-22T06:22:34Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Thanks for the rename too!",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 138,
                        "title": "chat\u7528\u306eE2E\u30c6\u30b9\u30c8\u3092\u62e1\u5145\u3001REST API\u3067\u5165\u5ba4\u3057\u305f\u969b\u306bwebsocket\u306eroom\u306b\u3082join\u3059\u308b\u306a\u3069",
                        "repository": {
                            "nameWithOwner": "usatie/pong",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-12-15T08:05:50Z",
                        "mergedAt": "2023-12-15T08:44:56Z",
                        "url": "https://github.com/usatie/pong/pull/138",
                        "state": "MERGED",
                        "author": {
                            "login": "usatie"
                        },
                        "editor": {
                            "login": "coderabbitai"
                        },
                        "body": "\u3053\u3061\u3089\u3060\u3051\u3067\u3082\u5c11\u3057\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001EventEmitter\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u5909\u66f4\u306f\u6b21\u306ePR\u3067\u3084\u308b\u65b9\u304c\u3044\u3044\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\r\nhttps://docs.nestjs.com/techniques/events\r\n\r\n- Add verifyAccessToken method to AuthService\r\n- Add handleConnection and handleDisconnect to ChatService\r\n- Enhance e2e test for chat gateway\r\n\r\n<!-- This is an auto-generated comment: release notes by coderabbit.ai -->\n## Summary by CodeRabbit\n\n## Summary by CodeRabbit\n\n- **New Features**\n  - Enhanced chat functionality with the ability to verify user access and manage chat rooms.\n  - Implemented new message creation and handling within chat rooms.\n  - Added user authentication for chat services.\n\n- **Improvements**\n  - Chat services now support user connections and disconnections.\n  - Rooms module now integrates with chat features for a seamless user experience.\n\n- **Bug Fixes**\n  - Fixed issues related to user authentication in chat services.\n\n- **Documentation**\n  - Updated instructions for chat usage and room management in end-user guides.\n\n- **Tests**\n  - Added end-to-end tests for chat gateway to ensure reliable messaging and room interactions.\n<!-- end of auto-generated comment: release notes by coderabbit.ai -->",
                        "comments": {
                            "nodes": [
                                {
                                    "createdAt": "2023-12-15T08:05:59Z",
                                    "bodyText": "Walkthrough\nThe software has undergone enhancements to integrate authentication and chat functionality across various modules. The AuthService is now accessible by other components, and a new verifyAccessToken method ensures secure user verification. The ChatModule and ChatService have been expanded with new features for message handling and user management within chat rooms, while the RoomModule now includes chat capabilities. Testing reflects these updates, focusing on the chat experience.\nChanges\n\n\n\nFile(s)\nChange Summary\n\n\n\n\n.../auth/auth.module.ts,.../auth/auth.service.ts\nExported AuthService and added a method to verify access tokens.\n\n\n.../chat/chat.gateway.ts,.../chat/chat.service.ts,.../chat/chat.module.ts\nAdded new DTO, methods for message handling, and integrated AuthService for chat functionality. Updated module imports and exports.\n\n\n.../room/room.controller.ts,.../room/room.module.ts\nModified room controller methods to be asynchronous and to interact with chat services. Updated RoomModule to import ChatModule.\n\n\n.../test/chat-gateway.e2e-spec.ts\nRefactored tests to align with chat functionality, adding new tests and updating setup hooks.\n\n\n\n\n\ud83d\udc07\ud83d\udcbb\ud83c\udf89\nCode hops and leaps, new features align,\nChat blooms with words, auth checks in time.\nModules now friends, with secrets to keep,\nA rabbit's work done, now time for some sleep. \ud83c\udf1c\u2728\n\n\n\n\n\n\n\n\n\n\nThank you for using CodeRabbit. We offer it for free to the OSS community and would appreciate your support in helping us grow. If you find it useful, would you consider giving us a shout-out on X ?\n\n\n\nTips\nChat with CodeRabbit Bot (@coderabbitai)\n\nYou can reply to a review comment made by CodeRabbit.\nYou can tag CodeRabbit on specific lines of code or files in the PR by tagging @coderabbitai in a comment.\nYou can tag @coderabbitai in a PR comment and ask one-off questions about the PR and the codebase. Use quoted replies to pass the context for follow-up questions.\n\nCodeRabbit Commands (invoked as PR comments)\n\n@coderabbitai pause to pause the reviews on a PR.\n@coderabbitai resume to resume the paused reviews.\n@coderabbitai review to trigger a review. This is useful when automatic reviews are disabled for the repository.\n@coderabbitai resolve resolve all the CodeRabbit review comments.\n@coderabbitai help to get help.\n\nAdditionally, you can add @coderabbitai ignore anywhere in the PR description to prevent this PR from being reviewed.\nCodeRabbit Configration File (.coderabbit.yaml)\n\nYou can programmatically configure CodeRabbit by adding a .coderabbit.yaml file to the root of your repository.\nThe JSON schema for the configuration file is available here.\nIf your editor has YAML language server enabled, you can add the path at the top of this file to enable auto-completion and validation: # yaml-language-server: $schema=https://coderabbit.ai/integrations/coderabbit-overrides.v2.json",
                                    "url": "https://github.com/usatie/pong/pull/138#issuecomment-1857448279",
                                    "author": {
                                        "login": "coderabbitai"
                                    }
                                }
                            ]
                        },
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 11\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between 98be248 and 0b2bd0d.\n\n\nFiles selected for processing (8)\n\nbackend/src/auth/auth.module.ts (1 hunks)\nbackend/src/auth/auth.service.ts (2 hunks)\nbackend/src/chat/chat.gateway.ts (2 hunks)\nbackend/src/chat/chat.module.ts (1 hunks)\nbackend/src/chat/chat.service.ts (1 hunks)\nbackend/src/room/room.controller.ts (2 hunks)\nbackend/src/room/room.module.ts (1 hunks)\nbackend/test/chat-gateway.e2e-spec.ts (4 hunks)\n\n\nAdditional comments: 9\nbackend/src/auth/auth.module.ts (1)\n\n33-33: The change to export AuthService from AuthModule is correct and aligns with the PR objectives to enhance module interdependencies and authentication capabilities.\n\n\nbackend/src/auth/auth.service.ts (2)\n\n\n46-57: The implementation of verifyAccessToken looks correct. It uses jwtService.verify to validate the token and throws a NotFoundException if the user does not exist, which aligns with the PR objectives and the AI-generated summary.\n\n\n16-16: The import of jwtConstants is used correctly in the verifyAccessToken method to provide the publicKey for token verification.\n\n\n\nbackend/src/chat/chat.module.ts (2)\n\n\n14-14: The change to export ChatService aligns with the PR objectives to enhance the chat functionality and is correctly reflected in the module's decorator.\n\n\n13-13: The inclusion of AuthModule in the imports array is consistent with the PR objectives to integrate authentication into the chat functionalities.\n\n\n\nbackend/src/room/room.module.ts (2)\n\n\n5-10: The addition of ChatModule to the RoomModule imports is consistent with the PR objectives to integrate chat functionalities into room-related features.\n\n\n5-10: Verify that the addition of ChatModule does not introduce circular dependencies with RoomModule or other modules.\n\n\n\nVerification successful\nThe previous script contained an error due to the use of an unrecognized flag -Ttypescript with rg. I will correct the script and execute it again to verify the potential circular dependencies.\n\nThe output indicates that RoomModule is used within app.module.ts, but it does not provide direct evidence of a circular dependency between RoomModule and ChatModule. To verify the presence of a circular dependency, I need to check if ChatModule also imports RoomModule. I will create a script to search for instances where RoomModule is imported in the files that import ChatModule.\n\nThe script failed because of an incorrect regex pattern. I will correct the regex to properly search for instances of RoomModule being imported in files that import ChatModule.\n\nThe output indicates that RoomModule is imported in app.module.ts, which is the same file that was identified earlier. However, there is no new evidence of RoomModule being imported in any file that imports ChatModule. This suggests that there is no direct circular dependency between RoomModule and ChatModule based on the information available.\nGiven the results, it appears that the addition of ChatModule to RoomModule does not introduce any circular dependencies, at least not in the direct manner that would be detectable with the provided search.\n\n\nScripts Executed\nThe following scripts were executed for the analysis:\n\nScript:\n#!/bin/bash\n# Check for potential circular dependencies involving RoomModule and ChatModule\nrg -Ttypescript \"ChatModule\" --files-with-matches | xargs rg -Ttypescript \"RoomModule\"\n\nLength of output: 154\n\n\nScript:\n#!/bin/bash\n# Check for potential circular dependencies involving RoomModule and ChatModule\nrg \"ChatModule\" --files-with-matches | xargs rg \"RoomModule\"\n\nLength of output: 234\n\n\nScript:\n#!/bin/bash\n# Search for RoomModule imports within files that import ChatModule\nrg \"ChatModule\" --files-with-matches | xargs rg \"import {.*RoomModule.*}\"\n\nLength of output: 187\n\n\nScript:\n#!/bin/bash\n# Search for RoomModule imports within files that import ChatModule\nrg \"ChatModule\" --files-with-matches | xargs rg \"import.*RoomModule\"\n\nLength of output: 143\n\n\nbackend/test/chat-gateway.e2e-spec.ts (2)\n\n218-234: > Note: This review was outside the patches, so it was mapped to the patch with the greatest overlap. Original lines [176-258]\n\nThe commented-out code blocks for test cases related to [joinRoom], [block], [unblock], and other functionalities should be addressed. If these tests are no longer relevant, consider removing the commented-out code to keep the codebase clean. If they are to be implemented later, add a TODO with a clear description or create an issue in the project's issue tracker to track this work.\n\n155-173: The commented-out test case for getting all messages in a room seems to be an important part of the chat functionality testing. If this test is intended to be implemented later, please add a TODO with a clear description or create an issue in the project's issue tracker. If it's no longer needed, consider removing the commented-out code.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The createMessage method is currently a placeholder with commented-out code. Ensure that the implementation is tracked and completed, or remove the placeholder if it's not needed.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675765",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The deleteRoom and sendToRoom methods contain commented-out TODOs. Confirm that these methods are on the roadmap for implementation and are tracked appropriately.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675768",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The CreateMessageDto class is defined in the global scope. Consider moving it inside the ChatGateway class or to a separate DTO file if it is intended to be used across different parts of the application.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675774",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The room check in handleMessage uses client.rooms.has(data.roomId.toString()), but elsewhere in the code, rooms are referred to with a 'room/' prefix. This inconsistency may cause the check to fail.\n- if (!client.rooms.has(data.roomId.toString())) {\n+ if (!client.rooms.has('room/' + data.roomId.toString())) {\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                if (!client.rooms.has(data.roomId.toString())) {\n          \n          \n            \n                if (!client.rooms.has('room/' + data.roomId.toString())) {",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675777",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Consider adding validation for the message content in handleMessage before saving it to the database and emitting it to the room to prevent potential issues with invalid data.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675779",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The handleMessage method is marked as async but does not handle exceptions that may be thrown by the asynchronous operation this.chatService.createMessage(data). Consider wrapping this call in a try-catch block to handle potential errors gracefully.\n    // Save message to the database\n+   try {\n      await this.chatService.createMessage(data);\n+   } catch (error) {\n+     this.logger.error('Failed to save message:', error);\n+     return;\n+   }\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n              async handleMessage(\n          \n          \n            \n                @MessageBody() data: CreateMessageDto,\n          \n          \n            \n                @ConnectedSocket() client: Socket,\n          \n          \n            \n              ) {\n          \n          \n            \n                this.logger.log(`message: ${data}`);\n          \n          \n            \n                // Check if a user is in the room\n          \n          \n            \n                if (!client.rooms.has(data.roomId.toString())) {\n          \n          \n            \n                  this.logger.error('socket has not joined this room');\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                // Check if the userId is valid\n          \n          \n            \n                if (this.chatService.getUserId(client) !== data.userId) {\n          \n          \n            \n                  this.logger.error('invalid userId');\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                // Save message to the database\n          \n          \n            \n                await this.chatService.createMessage(data);\n          \n          \n            \n            \n          \n          \n            \n                // Send message to the room\n          \n          \n            \n                const room = this.server.to(data.roomId.toString());\n          \n          \n            \n                room.emit('message', data);\n          \n          \n            \n              async handleMessage(\n          \n          \n            \n                @MessageBody() data: CreateMessageDto,\n          \n          \n            \n                @ConnectedSocket() client: Socket,\n          \n          \n            \n              ) {\n          \n          \n            \n                this.logger.log(`message: ${data}`);\n          \n          \n            \n                // Check if a user is in the room\n          \n          \n            \n                if (!client.rooms.has(data.roomId.toString())) {\n          \n          \n            \n                  this.logger.error('socket has not joined this room');\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                // Check if the userId is valid\n          \n          \n            \n                if (this.chatService.getUserId(client) !== data.userId) {\n          \n          \n            \n                  this.logger.error('invalid userId');\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                // Save message to the database\n          \n          \n            \n                try {\n          \n          \n            \n                  await this.chatService.createMessage(data);\n          \n          \n            \n                } catch (error) {\n          \n          \n            \n                  this.logger.error('Failed to save message:', error);\n          \n          \n            \n                  return;\n          \n          \n            \n                }\n          \n          \n            \n            \n          \n          \n            \n                // Send message to the room\n          \n          \n            \n                const room = this.server.to(data.roomId.toString());\n          \n          \n            \n                room.emit('message', data);",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675783",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The TODO comment in the create method should be addressed or removed if the corresponding task is completed.\n\n\nEnsure that this.chatService.addUserToRoom is awaited to prevent race conditions and ensure the user is added to the room before the response is returned.\n- 45:   this.chatService.addUserToRoom(res.id, request['user']);\n+ 45:   await this.chatService.addUserToRoom(res.id, request['user']);\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n              async create(@Body() createRoomDto: CreateRoomDto, @Req() request: Request) {\n          \n          \n            \n                const res = await this.roomService.create(createRoomDto, request['user']);\n          \n          \n            \n                // TODO: Add user to room\n          \n          \n            \n                this.chatService.addUserToRoom(res.id, request['user']);\n          \n          \n            \n                return res;\n          \n          \n            \n              async create(@Body() createRoomDto: CreateRoomDto, @Req() request: Request) {\n          \n          \n            \n                const res = await this.roomService.create(createRoomDto, request['user']);\n          \n          \n            \n                // TODO: Add user to room\n          \n          \n            \n                await this.chatService.addUserToRoom(res.id, request['user']);\n          \n          \n            \n                return res;",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675784",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The addUserToRoom call in the createUserOnRoom method should be awaited to ensure that the user is added to the room before the response is returned.\n- 93: this.chatService.addUserToRoom(id, request['user']);\n+ 93: await this.chatService.addUserToRoom(id, request['user']);\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                const res = await this.roomService.createUserOnRoom(id, request['user']);\n          \n          \n            \n                this.chatService.addUserToRoom(id, request['user']);\n          \n          \n            \n                return res;\n          \n          \n            \n                const res = await this.roomService.createUserOnRoom(id, request['user']);\n          \n          \n            \n                await this.chatService.addUserToRoom(id, request['user']);\n          \n          \n            \n                return res;",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675785",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Consider using a DTO or a decorator to extract the user information from the request in a type-safe manner.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427675787",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "0b2bd0d",
                                                            "authoredDate": "2023-12-15T08:03:21Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 2\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between 0b2bd0d and f1b8bc5.\n\n\nFiles selected for processing (2)\n\nbackend/src/chat/chat.module.ts (1 hunks)\nbackend/src/chat/chat.service.ts (1 hunks)\n\n\n\nFiles skipped from review as they are similar to previous changes (1)\n\nbackend/src/chat/chat.module.ts\n\n\nAdditional comments: 4\nbackend/src/chat/chat.service.ts (4)\n\n\n16-18: The AuthService is now being injected into the ChatService. Ensure that the AuthService is properly provided in the module where ChatService is declared.\n\n\n21-23: The clients and users maps are used to manage WebSocket connections and user information. Verify that the usage of these maps is thread-safe and that there are no data races, especially if the service can be accessed concurrently.\n\n\n88-108: The handleConnection method correctly extracts the token and uses the AuthService to validate it. Ensure that the error handling is robust and that any exceptions thrown are handled gracefully by the WebSocket gateway.\n\n\n111-113: The handleDisconnect method removes the client from the clients and users maps. Confirm that this cleanup is sufficient and that there are no additional resources that need to be released upon disconnection.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "There are several TODO comments in the code related to creating messages and deleting rooms. Determine if these are placeholders for future implementation or if they need to be addressed before merging this pull request.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427686120",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f1b8bc5",
                                                            "authoredDate": "2023-12-15T08:21:18Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "Review Status\nActionable comments generated: 6\nConfiguration used: CodeRabbit UI\n\nCommits\nFiles that changed from the base of the PR and between f1b8bc5 and fa95e86.\n\n\nFiles selected for processing (6)\n\nbackend/src/chat/chat.controller.spec.ts (1 hunks)\nbackend/src/chat/chat.gateway.ts (2 hunks)\nbackend/src/chat/chat.service.spec.ts (1 hunks)\nbackend/src/chat/chat.service.ts (1 hunks)\nbackend/src/chat/dto/craete-message.dto.ts (1 hunks)\nbackend/src/room/room.controller.ts (2 hunks)\n\n\n\nFiles skipped from review due to trivial changes (1)\n\nbackend/src/chat/chat.gateway.ts\n\n\nAdditional comments: 6\nbackend/src/chat/chat.controller.spec.ts (2)\n\n\n5-6: The addition of AuthService and JwtService to the providers array is consistent with the PR objectives to enhance authentication within the chat module.\n\n\n11-17: The testing module setup using beforeEach and the retrieval of ChatController from the module are correctly implemented.\n\n\n\nbackend/src/chat/chat.service.spec.ts (3)\n\n\n4-5: The imports for AuthService and JwtService are correctly added to support the new authentication functionalities within the ChatService.\n\n\n12-12: The inclusion of AuthService and JwtService in the providers array is appropriate for setting up the testing environment with the necessary dependencies.\n\n\n1-15: While the setup for the ChatService tests has been updated to include the new dependencies, ensure that new tests have been added to cover the enhanced functionalities as mentioned in the PR objectives.\n\n\n\nVerification successful\n\nThe shell script output confirms the presence of multiple E2E test cases in the chat-gateway.e2e-spec.ts file. These tests cover various chat functionalities such as connecting to the chat server, creating and entering rooms, sending and receiving messages, and joining rooms, which align with the PR objectives to enhance E2E testing for the chat gateway.\nBased on this information, it appears that the PR's objectives regarding the expansion of E2E tests have been met.\n\n\nScripts Executed\nThe following scripts were executed for the analysis:\n\nScript:\n#!/bin/bash\n# Search for new test cases related to AuthService and JwtService in the chat.service.spec.ts file.\nrg 'it\\(.*AuthService.*|.*JwtService.*' backend/src/chat/chat.service.spec.ts\n\nLength of output: 193\n\n\nScript:\n#!/bin/bash\n# Search for all test cases in the chat.service.spec.ts file to see if new tests have been added.\nrg 'it\\(' backend/src/chat/chat.service.spec.ts\n\nLength of output: 83\n\n\nScript:\n#!/bin/bash\n# Search for test cases in the chat-gateway.e2e-spec.ts file to verify the presence of new E2E tests.\nrg 'it\\(' backend/src/chat/chat-gateway.e2e-spec.ts\n\nLength of output: 135\n\n\nScript:\n#!/bin/bash\n# Search for the chat-gateway.e2e-spec.ts file in the repository to find its correct path.\nfd 'chat-gateway.e2e-spec.ts'\n\nLength of output: 67\n\n\nScript:\n#!/bin/bash\n# Search for test cases in the chat-gateway.e2e-spec.ts file to verify the presence of new E2E tests.\nrg 'it\\(' backend/test/chat-gateway.e2e-spec.ts\n\nLength of output: 1305\n\n\nbackend/src/room/room.controller.ts (1)\n\n34-37: The addition of ChatService to the RoomController constructor is consistent with the PR objectives to enhance chat functionality integration.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Consider adding validation to ensure roomId and userId are positive integers, as negative values or zero are typically not valid identifiers.\n  @IsNumber()\n+ @Min(1)\n  @ApiProperty()\n  roomId: number;\n\n  @IsNumber()\n+ @Min(1)\n  @ApiProperty()\n  userId: number;\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n              @IsNumber()\n          \n          \n            \n              @ApiProperty()\n          \n          \n            \n              roomId: number;\n          \n          \n            \n            \n          \n          \n            \n              @IsNumber()\n          \n          \n            \n              @ApiProperty()\n          \n          \n            \n              userId: number;\n          \n          \n            \n              @IsNumber()\n          \n          \n            \n              @Min(1)\n          \n          \n            \n              @ApiProperty()\n          \n          \n            \n              roomId: number;\n          \n          \n            \n            \n          \n          \n            \n              @IsNumber()\n          \n          \n            \n              @Min(1)\n          \n          \n            \n              @ApiProperty()\n          \n          \n            \n              userId: number;",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708084",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The create method correctly implements asynchronous behavior to handle room creation and user addition to the chat room. However, the call to this.chatService.addUserToRoom should be awaited to ensure the user is added before the response is returned.\n- 44: this.chatService.addUserToRoom(res.id, req.user);\n+ 44: await this.chatService.addUserToRoom(res.id, req.user);\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n              async create(@Body() createRoomDto: CreateRoomDto, @Req() req: { user }) {\n          \n          \n            \n                const res = await this.roomService.create(createRoomDto, req.user);\n          \n          \n            \n                this.chatService.addUserToRoom(res.id, req.user);\n          \n          \n            \n                return res;\n          \n          \n            \n              async create(@Body() createRoomDto: CreateRoomDto, @Req() req: { user }) {\n          \n          \n            \n                const res = await this.roomService.create(createRoomDto, req.user);\n          \n          \n            \n                await this.chatService.addUserToRoom(res.id, req.user);\n          \n          \n            \n                return res;",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708087",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The import for CreateMessageDto has a typo in the filename (craete-message.dto instead of create-message.dto).\n- import { CreateMessageDto } from './dto/craete-message.dto';\n+ import { CreateMessageDto } from './dto/create-message.dto';\n\n\n\n\nCommittable suggestion\n\n\u2757 IMPORTANT\nCarefully review the code before committing. Ensure that it accurately replaces the highlighted code, contains no missing lines, and has no issues with indentation.\n\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n            import {\n          \n          \n            \n              Injectable,\n          \n          \n            \n              ConflictException,\n          \n          \n            \n              UnauthorizedException,\n          \n          \n            \n            } from '@nestjs/common';\n          \n          \n            \n            import { CreateDirectMessageDto } from './dto/create-direct-message.dto';\n          \n          \n            \n            import { PrismaService } from 'src/prisma/prisma.service';\n          \n          \n            \n            import { User } from '@prisma/client';\n          \n          \n            \n            import { Socket } from 'socket.io';\n          \n          \n            \n            import { WebSocketGateway } from '@nestjs/websockets';\n          \n          \n            \n            import { AuthService } from 'src/auth/auth.service';\n          \n          \n            \n            import {\n          \n          \n            \n              Injectable,\n          \n          \n            \n              ConflictException,\n          \n          \n            \n              UnauthorizedException,\n          \n          \n            \n            } from '@nestjs/common';\n          \n          \n            \n            import { CreateDirectMessageDto } from './dto/create-direct-message.dto';\n          \n          \n            \n            import { PrismaService } from 'src/prisma/prisma.service';\n          \n          \n            \n            import { User } from '@prisma/client';\n          \n          \n            \n            import { Socket } from 'socket.io';\n          \n          \n            \n            import { WebSocketGateway } from '@nestjs/websockets';\n          \n          \n            \n            import { AuthService } from 'src/auth/auth.service';",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708094",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Ensure proper error handling in handleConnection. Catching the error and logging it without rethrowing or handling it might cause silent failures.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708096",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The createMessage and deleteRoom methods are placeholders and need to be implemented.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708098",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "The comment about receiverId validation from a previous review has not been addressed. This needs to be resolved to ensure message sending is authorized.",
                                                        "author": {
                                                            "login": "coderabbitai"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1427708101",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "authentication\u306fcontroller/gateway\u3067\u3084\u308b\u306e\u304c\u901a\u4f8b\u304b\u3068\u601d\u3063\u305f\u308a\nhttps://chat.openai.com/share/3918b060-510b-4b3e-a94a-7cfaf1e2f996",
                                                        "author": {
                                                            "login": "takumihara"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1429054015",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u3053\u308c\u3063\u3066\u52d5\u304d\u307e\u3059\uff1f",
                                                        "author": {
                                                            "login": "takumihara"
                                                        },
                                                        "url": "https://github.com/usatie/pong/pull/138#discussion_r1429055734",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "fa95e86",
                                                            "authoredDate": "2023-12-15T08:41:04Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjM=",
                "hasNextPage": false,
                "hasPreviousPage": false,
                "startCursor": "Y3Vyc29yOjE="
            },
            "issueCount": 3
        }
    }
}