{
    "data": {
        "search": {
            "edges": [
                {
                    "node": {
                        "number": 3258,
                        "title": "Montana Elderly Residential Property Tax Credit (Renter/Homeowner)",
                        "repository": {
                            "nameWithOwner": "PolicyEngine/policyengine-us",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-11-09T23:12:00Z",
                        "mergedAt": "2024-01-06T13:51:11Z",
                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258",
                        "state": "MERGED",
                        "author": {
                            "login": "Jingj-WANG"
                        },
                        "editor": null,
                        "body": "Fixed: #2579\n\n<!--\ncopilot:all\n-->\n### <samp>\ud83e\udd16 Generated by Copilot at f3cb5b5</samp>\n\n### Summary\n:sparkles::page_facing_up::test_tube:\n\n<!--\n1.  :sparkles: This emoji represents the addition of a new feature or enhancement, which is the main purpose of the pull request. The Montana elderly homeowner/renter credit is a new feature that adds functionality and value to the policy engine.\n2. :page_facing_up: This emoji represents the addition of new documentation or data, which is a significant part of the pull request. The changelog entry, the parameter files, and the test files are all examples of documentation or data that help explain and support the new feature.\n3. :test_tube: This emoji represents the addition of new tests or refactoring of existing tests, which is another important part of the pull request. The test files are examples of tests that ensure the quality and reliability of the new feature and the policy engine.\n-->\nThis pull request adds the Montana elderly homeowner/renter credit to the policy engine. It creates new parameter, variable, and test files for the credit computation and eligibility logic, based on the Montana tax code and forms. It also updates the changelog file to document the new feature and the required version bump.\n\n> _`Montana_credit`_\n> _New feature for the engine_\n> _Autumn of one's life_\n\n### Walkthrough\n*  Add the Montana elderly homeowner/renter credit to the policy engine ([link](https://github.com/PolicyEngine/policyengine-us/pull/3258/files?diff=unified&w=0#diff-5885042762833a4aef51405a4036067e4e6aefa7a5091a2987d1d9d1fc2647e8R1-R4), [link](https://github.com/PolicyEngine/policyengine-us/pull/3258/files?diff=unified&w=0#diff-14e9ce3a91a1d3d6a4ec058c47b82050ae6dd00381c0bd6ec683da4bafdcd62bR1-R37), [link](https://github.com/PolicyEngine/policyengine-us/pull/3258/files?diff=unified&w=0#diff-2c9810939c2135dc8c1bb528d96dd398a64f6166307fa8b114a46b6f01a26806R1-R21), [link](https://github.com/PolicyEngine/policyengine-us/pull/3258/files?diff=unified&w=0#diff-b45eda50fbbf6c9ac1aa9ced8d8ad36aa93a4d0bac5a66b1ca0390a04ef26d78L1-R13))\n\n\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                age_spuse: 64\n          \n          \n            \n                age_spouse: 64\n          \n          \n            \n                # and others",
                                                        "author": {
                                                            "login": "hua7450"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1409883049",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "769bedc",
                                                            "authoredDate": "2023-11-10T00:17:30Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                - tax_exempt_pension_income\n          \n          \n            \n                - pension_income",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1411455304",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "073d47e",
                                                            "authoredDate": "2023-12-01T00:12:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "IRA:\nregular_ira_distributions\nroth_ira_distributions",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1411456450",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "073d47e",
                                                            "authoredDate": "2023-12-01T00:12:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                subtracts = [\"tax_exempt_social_security\"]\n          \n          \n            \n                # Tax form specifies total social social security - the taxable social security amounts\n          \n          \n            \n                subtracts = [\"tax_exempt_social_security\"]",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1411460752",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "073d47e",
                                                            "authoredDate": "2023-12-01T00:12:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "check whether for all or just head and spouse",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1411462679",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "073d47e",
                                                            "authoredDate": "2023-12-01T00:12:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "for all members in the household either related or not\nimage.png",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418036402",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "073d47e",
                                                            "authoredDate": "2023-12-01T00:12:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418036624",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "073d47e",
                                                            "authoredDate": "2023-12-01T00:12:57Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana multiplies the credit by this multiplier for the calculation of the final elderly homeowner or renter credit.\n          \n          \n            \n            description: Montana multiplies the final elderly homeowner or renter credit amount by this multiplier.",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418876861",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "rename to multiplier.yaml",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418877054",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana provides this elderly homeowner or renter credit for filers at or above this age.\n          \n          \n            \n            description: Montana provides the elderly homeowner or renter credit for filers at or above this age.",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418877404",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              label: Montana elderly homeowner or renter credit minimum age threshold\n          \n          \n            \n              label: Montana elderly homeowner or renter credit age threshold",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418877608",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              unit: list\n          \n          \n            \n              unit: list\n          \n          \n            \n              period: year",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418877993",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "need a legal code reference",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418878212",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "rename to cap",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418878689",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana provides this maximum amount for the elderly homeowner or renter credit before credit multiplier.\n          \n          \n            \n            description: Montana caps the pre-multiplier amount of the elderly homeowner or renter credit to this amount.",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418879166",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              label: Montana elderly homeowner or renter credit max amount before credit multiplier\n          \n          \n            \n              label: Montana elderly homeowner or renter credit pre multiplier cap",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418879442",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "rename to phase_out_rate.yaml",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418880033",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              amount_unit: /1\n          \n          \n            \n              amount_unit: /1\n          \n          \n            \n              period: year",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418880238",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana uses this reduction amount for the computation based of the elderly homeowner or renter credit.\n          \n          \n            \n            description: Montana phases the net household income out at this rate under the elderly homeowner or renter credit.",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418880815",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              label: Montana household income reduction amount\n          \n          \n            \n              label: Montana elderly or homeowner credit household income reduction amount",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418881029",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "rename to standard_exclusion_amount.yaml",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418882433",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana allows for this standard exclusion for the computation of the elderly homeowner or renter credit.\n          \n          \n            \n            description: Montana allows for this standard exclusion amount of net household income under the elderly homeowner or renter credit.",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418882680",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              label: Montana elderly homeowner or renter credit standard exclusion\n          \n          \n            \n              label: Montana elderly homeowner or renter credit net household income standard exclusion amount",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418883089",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "right?",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418883354",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "right?",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418883548",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana uses this rate in computation of the rent equivalent tax paid.\n          \n          \n            \n            description: Montana multiplies the rent by this rate for the computation of the rent equivalent tax paid.",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418884376",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "should this be a montana general parameter? (Would we use this rate for other programs)",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418885021",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              unit: list\n          \n          \n            \n              unit: list\n          \n          \n            \n              period: year",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418885224",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "add a comment why we do this",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418886860",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Other way around\nWe take all credits here and then add the renter credit, not subtract it\nadjust the mt_refundable_credits to add this and the renter credit (adds function)",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1418889083",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Net household income = Max_((Gross household income - standard exclusion), 0) * rate. I think it's correct",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1419178874",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1419191449",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "https://law.justia.com/codes/montana/2022/title-15/chapter-30/part-23/section-15-30-2337/",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1419191836",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think it's only for Montana. I check federal law and there's no definition for that. https://www.irs.gov/businesses/small-businesses-self-employed/tips-on-rental-real-estate-income-deductions-and-recordkeeping",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1419196545",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4a8e023",
                                                            "authoredDate": "2023-12-06T23:41:08Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                label = \"Montana Elderly Homeowner/Renter Credit Eligibility\"\n          \n          \n            \n                label = \"Eligible for the Montana Elderly Homeowner/Renter Credit\"",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1419790375",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "622757d",
                                                            "authoredDate": "2023-12-07T23:00:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                - title: Montana 2022 Form2 Individual Income Tax Instructions, Page48, Line 7 # Montana Elderly Homeowner or renter credit\n          \n          \n            \n                - title: Montana 2022 Form2 Individual Income Tax Instructions",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1419793041",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "308bee0",
                                                            "authoredDate": "2023-12-08T00:08:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                  href: https://mtrevenue.gov/wp-content/uploads/dlm_uploads/2022/12/Form-2-2022-Instructions.pdf#page=48\n          \n          \n            \n                  href: https://mtrevenue.gov/wp-content/uploads/dlm_uploads/2022/12/Form-2-2022-Instructions.pdf#page=17",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1419793190",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "308bee0",
                                                            "authoredDate": "2023-12-08T00:08:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              2009-01-01:\n          \n          \n            \n              2021-01-01:",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1419793299",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "308bee0",
                                                            "authoredDate": "2023-12-08T00:08:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "create a new mt_elderly_homeowner_or_renter_credit_net_household_income variable with the computation:",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1419795201",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "308bee0",
                                                            "authoredDate": "2023-12-08T00:08:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "logic is great!",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1419795459",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "308bee0",
                                                            "authoredDate": "2023-12-08T00:08:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              label: Montana elderly or homeowner credit household income reduction amount\n          \n          \n            \n              label: Montana elderly or homeowner credit household income phase out rate",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1419795767",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "308bee0",
                                                            "authoredDate": "2023-12-08T00:08:44Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This passed in your test but wouldn't in other tests, due to very weird Python internals that I didn't know of: https://chat.openai.com/share/46ad69dc-4ce7-4572-88e7-d60dc69f6715\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                    age_eligible = age_head | age_spouse >= p.age_threshold\n          \n          \n            \n                    age_eligible = (age_head >= p.age_threshold) | (age_spouse >= p.age_threshold)\n          \n      \n    \n    \n  \n\nAlternatively, implement #3148",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421599212",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "For extra clarity\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                    return age_eligible & (gross_household_income < p.income_limit)\n          \n          \n            \n                    income_eligible = gross_household_income < p.income_limit\n          \n          \n            \n                    return age_eligible & income_eligible",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421599479",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "where's this from? subsection 7 says $1,000 on contingency for 2022-25, but the tax forms indicate that those contigency requirements were not met, so it's just $1,150 since 2021. please update and leave a comment about this\nhttps://chat.openai.com/share/3cf6ad03-3174-4f09-9ed7-a3a1afce7a27\nSimilarly fix this with the standard exclusion",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421605401",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "remove credit from the folder since it's in credits/",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421605442",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              label: Montana elderly homeowner or renter credit pre multiplier cap \n          \n          \n            \n              # The legal code is ambiguous about whether the cap applies before or after\n          \n          \n            \n              # the multiplier, but the tax form indicates it applies before.\n          \n          \n            \n              label: Montana elderly homeowner or renter credit pre multiplier cap",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421605577",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana qualifies filers for the elderly homeowner or renter credit with gross household income below this amount.\n          \n          \n            \n            description: Montana limits its elderly homeowner or renter credit to filers with gross household income below this amount.",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421605598",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              label: Montana elderly homeowner or renter credit gross household income limit\n          \n          \n            \n              label: Montana elderly homeowner or renter credit income limit",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421605622",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              label: Monatna elderly homeowner or renter credit gross income sources\n          \n          \n            \n              label: Montana elderly homeowner or renter credit gross income sources",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421605654",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                  2009-01-01: 42_000\n          \n          \n            \n                  2009-01-01: 45_000",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421605822",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "remove _amount",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421606037",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana allows for this standard exclusion amount of net household income under the elderly homeowner or renter credit.\n          \n          \n            \n            description: Montana excludes this amount when computing net household income for the elderly homeowner or renter credit.",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421606067",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              label: Montana elderly homeowner or renter credit net household income standard exclusion amount\n          \n          \n            \n              label: Montana elderly homeowner or renter credit net household income standard exclusion",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421606084",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana multiplies the rent by this rate for the computation of the rent equivalent tax paid.\n          \n          \n            \n            description: Montana counts this fraction of rent as property tax for its elderly homeowner or renter credit.",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421606130",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              label: Montana rent equivalent tax rate\n          \n          \n            \n              label: Montana elderly homeowner or renter credit rent equivalent rate",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421606151",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "reduction_rate",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421606276",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              label: Montana elderly or homeowner credit household income phase out rate\n          \n          \n            \n              label: Montana elderly or homeowner credit household income reduction rate",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421606304",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana phases the net household income out at this rate under the elderly homeowner or renter credit.\n          \n          \n            \n            description: Montana reduces net household income by this fraction under the elderly homeowner or renter credit, depending on income.",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421606383",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                    credit_amount = max_(\n          \n          \n            \n                    countable_rent = rent * p.rent_equivalent_rate\n          \n          \n            \n                    countable_rent_property_tax = property_tax + countable_rent\n          \n          \n            \n                    uncapped_credit = max_(countable_rent_property_tax - net_household_income, 0)\n          \n          \n            \n                    capped_credit = min_(uncapped_credit, p.cap)\n          \n          \n            \n                    multiplier = p.multiplier.calc(gross_household_income)\n          \n          \n            \n                    return capped_credit * multiplier",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421606811",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                    return (\n          \n          \n            \n                    reduction_rate = p.net_household_income.reduction_rate.calc(\n          \n          \n            \n                            reduced_household_income\n          \n          \n            \n                        )\n          \n          \n            \n                    return reduced_household_income * reduction_rate",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421606861",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "space others similarly\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                - tax_exempt_interest   # Line2: exempt interest\n          \n          \n            \n                - tax_exempt_interest # Line 2: exempt interest",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421608268",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            class mt_gross_household_income(Variable):\n          \n          \n            \n            class mt_elderly_homeowner_or_renter_credit_gross_household_income(Variable):",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421608520",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "delete this through 15. it's correctly added to gross_income_sources as to capture total SS benefits: taxable via AGI, plus tax-exempt",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1421608592",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Here are the legislative changes in the Montana 2022 tax form: (increased elderly homeowner/renter credit)\nhttps://mtrevenue.gov/wp-content/uploads/dlm_uploads/2022/12/Form-2-2022-Instructions.pdf#page=5\n\nHere's what it says in 2021 tax instructions:\nhttps://mtrevenue.gov/wp-content/uploads/mdocs/form%202%202021%20instructions.pdf#page=5",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1425983255",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@MaxGhenis\nThis credit is in FORM 2EC before year 2018 and was combined in FORM 2 in 2018\n\nI double-checked the tax form and instructions each year:\nhttps://mtrevenue.gov/publications/montana-individual-income-tax-return-form-2/\nhttps://mtrevenue.gov/publications/montana-form-2-individual-income-tax-return-forms-and-instructions-includes-form-2ec/\nHere's a 2EC evaluation file, talking about how cap_value changes:\nhttps://leg.mt.gov/content/Committees/Interim/2019-2020/Revenue/Meetings/July-2020/Tax-Credit-Review/2EC-evaluation.pdf#page=10\n\nIn tax form\n\nin 2022: cap = 1150\nin 2018-2021: cap = 1000\nbefore 2018, it shows in 2EC FORM and cap=1000, LINE11 (2017)\nhttps://www.taxformfinder.org/forms/2019/2019-montana-form-2ec.pdf#page=1\n\nI didn't see the $900 and $950 in any tax forms and doubt what GPT answered",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1426001499",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "thanks should you change line 4 to 2022 then?",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1426023703",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "yes, I am revising that now.",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1426024484",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "d906fcd",
                                                            "authoredDate": "2023-12-08T01:19:54Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "rename to standard_exclusion.yaml",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1432035642",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6c73c88",
                                                            "authoredDate": "2023-12-15T18:58:27Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "And elsewhere\n  \n    \n      \n        Suggested change\n      \n    \n    \n      \n          \n            \n                mt_elderly_homeowner_or_renter_credit_net_household_income: 1070\n          \n          \n            \n                mt_elderly_homeowner_or_renter_credit_net_household_income: 1_070",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1428385262",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "6c73c88",
                                                            "authoredDate": "2023-12-15T18:58:27Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "delete this - redundant with multiplier",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434376546",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ef8020a",
                                                            "authoredDate": "2023-12-20T16:28:46Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana provides the elderly homeowner or renter credit for filers at or above this age.\n          \n          \n            \n            description: Montana limits the elderly homeowner or renter credit to filers this age or older.",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434376790",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "ef8020a",
                                                            "authoredDate": "2023-12-20T16:28:46Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "use older_age_head_spouse (might not be the exact variable name) to simplify this, i.e. return older_age_head_spouse >= p.age_threshold",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434509014",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b5f938b",
                                                            "authoredDate": "2023-12-21T20:29:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "is this correct? Or do you want me to create a new variable older_age_head_spouse?",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434512956",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b5f938b",
                                                            "authoredDate": "2023-12-21T20:29:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@MaxGhenis",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434513541",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b5f938b",
                                                            "authoredDate": "2023-12-21T20:29:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "there's already a variable in the system",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434541752",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b5f938b",
                                                            "authoredDate": "2023-12-21T20:29:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "got it.",
                                                        "author": {
                                                            "login": "Jingj-WANG"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434549253",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b5f938b",
                                                            "authoredDate": "2023-12-21T20:29:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                    age_spouse = tax_unit(\"age_spouse\", period)",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434588767",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bfdbb3c",
                                                            "authoredDate": "2023-12-21T22:06:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                    age_head = tax_unit(\"age_head\", period)",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434588792",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bfdbb3c",
                                                            "authoredDate": "2023-12-21T22:06:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                    countable_rent_property_tax = property_tax + countable_rent\n          \n          \n            \n                    countable_rent_and_property_tax = property_tax + countable_rent",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434588889",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bfdbb3c",
                                                            "authoredDate": "2023-12-21T22:06:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                - mt_ctc\n          \n          \n            \n                - mt_ctc\n          \n          \n            \n                - mt_eitc",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434589030",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bfdbb3c",
                                                            "authoredDate": "2023-12-21T22:06:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana excludes this amount when computing net household income for elderly homeowner or renter credit.\n          \n          \n            \n            description: Montana excludes this amount of net household income when computing net household income for elderly homeowner or renter credit.",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434589245",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bfdbb3c",
                                                            "authoredDate": "2023-12-21T22:06:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana reduces net household income by this fraction under the elderly homeowner or renter credit, depending on income.\n          \n          \n            \n            description: Montana reduces net household income by this fraction under the elderly homeowner or renter credit, depending on gross household income reduced by the standard exclusion.",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434589555",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bfdbb3c",
                                                            "authoredDate": "2023-12-21T22:06:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana multiplies the final elderly homeowner or renter credit amount by this multiplier.\n          \n          \n            \n            description: Montana multiplies the elderly homeowner or renter credit computation amount by this multiplier.",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434589666",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bfdbb3c",
                                                            "authoredDate": "2023-12-21T22:06:12Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            # due to circle reference\n          \n          \n            \n            # due to a potential circular reference",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434589790",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "bfdbb3c",
                                                            "authoredDate": "2023-12-21T22:06:12Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana gross income sources for the calculation of elderly homeowner or renter credit.\n          \n          \n            \n            description: Montana gross income sources for the calculation of the elderly homeowner or renter credit.",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434599493",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4892fa9",
                                                            "authoredDate": "2023-12-21T23:48:35Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n            description: Montana multiplies the elderly homeowner or renter credit computation amount by this multiplier.\n          \n          \n            \n            description: Montana multiplies the capped elderly homeowner or renter credit amount by this multiplier.",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434599821",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4892fa9",
                                                            "authoredDate": "2023-12-21T23:48:35Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                # In the gross income sources, we include the elderly homeowner or renter credit in refundable credits\n          \n          \n            \n                # Under the gross income sources computation, the elderly homeowner or renter credit \n          \n          \n            \n                # is included in the list of refundable credits",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434600526",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4892fa9",
                                                            "authoredDate": "2023-12-21T23:48:35Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                # So we created another variable mt_refundable_credits_before_renter_credit.py\n          \n          \n            \n                # mt_refundable_credits_before_renter_credit was created to circumvent this",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434600646",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4892fa9",
                                                            "authoredDate": "2023-12-21T23:48:35Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                label = \"Montana refundable credits before adding elderly homeowner or renter credit\"\n          \n          \n            \n                label = \"Montana refundable credits before adding the elderly homeowner or renter credit\"",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434600705",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4892fa9",
                                                            "authoredDate": "2023-12-21T23:48:35Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                # In gross income sources, we include the elderly homeowner or renter credit in refundable credits\n          \n          \n            \n                # Under the gross income sources computation, the elderly homeowner or renter credit \n          \n          \n            \n                # is included in the list of refundable credits```",
                                                        "author": {
                                                            "login": "PavelMakarchuk"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1434600811",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4892fa9",
                                                            "authoredDate": "2023-12-21T23:48:35Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                label = \"Montana Net Household Income\"\n          \n          \n            \n                label = \"Net household income for Montana elderly homeowner or renter credit\"",
                                                        "author": {
                                                            "login": "MaxGhenis"
                                                        },
                                                        "url": "https://github.com/PolicyEngine/policyengine-us/pull/3258#discussion_r1443322935",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "039aa0c",
                                                            "authoredDate": "2023-12-22T00:15:37Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 1295,
                        "title": "Fix broken hausdorff test",
                        "repository": {
                            "nameWithOwner": "rapidsai/cuspatial",
                            "primaryLanguage": {
                                "name": "Jupyter Notebook"
                            }
                        },
                        "createdAt": "2023-11-15T02:23:08Z",
                        "mergedAt": "2023-11-16T15:21:25Z",
                        "url": "https://github.com/rapidsai/cuspatial/pull/1295",
                        "state": "MERGED",
                        "author": {
                            "login": "isVoid"
                        },
                        "editor": null,
                        "body": "This PR revises the gold result of hausdorff empty input test to address\nan upstream change in cudf.\n\n## Description\n<!-- Provide a standalone description of changes in this PR. -->\n<!-- Reference any issues closed by this PR with \"closes #1234\". -->\n<!-- Note: The pull request title will be included in the CHANGELOG. -->\n\n## Checklist\n- [x] I am familiar with the [Contributing Guidelines](https://github.com/rapidsai/cuspatial/blob/HEAD/CONTRIBUTING.md).\n- [x] New or existing tests cover these changes.\n- [x] The documentation is up to date with these changes.\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Fix seems fine to me, although I wonder if maybe it should be changed the other way in the long term i.e. have cuspatial return an empty RangeIndex rather than force cudf to produce an empty Index.",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 145,
                        "title": "New banner with cards are added to all pages",
                        "repository": {
                            "nameWithOwner": "rohan9024/ecommerce",
                            "primaryLanguage": {
                                "name": "JavaScript"
                            }
                        },
                        "createdAt": "2023-12-14T11:26:27Z",
                        "mergedAt": "2023-12-19T19:32:49Z",
                        "url": "https://github.com/rohan9024/ecommerce/pull/145",
                        "state": "MERGED",
                        "author": {
                            "login": "Sami3160"
                        },
                        "editor": {
                            "login": "Sami3160"
                        },
                        "body": "issue #133 resolved\r\n\r\n-Cards like banners are added on every page, like men, women kids, shoes, sales.\r\n-Banner from all pages are responsive.\r\n-For more 'pluggable look' library is used.\r\n-All Images are good high quality\r\n-5-6 different cards are added as banner with effects and slide animation \r\n-Title and description is meant to be meaningful with images and nav link.\r\n-Every page, every card have unique image, title, description with well relatable meaning...\r\n-On every page changes cards are added, yet code is also kept optimized, with no redundancy.\r\n-Cards can be changed by mouse, or by clicking on a card then using keyboard buttons (to use keyboard focus on card i required)\r\nhere is screenshot of banner cards:\r\n![Screenshot (114)](https://github.com/rohan9024/ecommerce/assets/110652247/597d52d2-ad7d-4654-84e0-89157ef5758b)\r\n-page of shoes section\r\n![Screenshot (115)](https://github.com/rohan9024/ecommerce/assets/110652247/c61fd1b3-99d3-482c-ac77-e65d10e0d3ff)\r\n-responsive testing\r\n![Screenshot (116)](https://github.com/rohan9024/ecommerce/assets/110652247/3dd29278-93a9-44d0-87d5-41454acfc616)\r\n![Screenshot (117)](https://github.com/rohan9024/ecommerce/assets/110652247/d53b18bc-d67b-4eba-a25f-35667e7f462a)\r\n-Can change the the cards as slides by both mouse and keyboard \r\n![Screenshot (118)](https://github.com/rohan9024/ecommerce/assets/110652247/80032e13-e856-43f1-8436-9f217ab20a4d)\r\n\r\n\r\nplease do check my pr, it was soo hard as react newbie \ud83d\ude05but it was so fun also\ud83d\ude01",
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 50,
                        "title": "feat: neuron rotation",
                        "repository": {
                            "nameWithOwner": "s1dlx/meh",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-11-10T04:19:20Z",
                        "mergedAt": null,
                        "url": "https://github.com/s1dlx/meh/pull/50",
                        "state": "OPEN",
                        "author": {
                            "login": "ljleb"
                        },
                        "editor": {
                            "login": "ljleb"
                        },
                        "body": "For each key:\r\n1. extract an orthogonal matrix, model $A$ is the base and model $B$ is the target orientation\r\n2. apply the orthogonal transform immediately\r\n\r\nNote: this is pretty slow. On my RTX 3080 it takes me ~3 minutes to merge two models.",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This is actually a lot more complex than meets the eye. We should be determining the svd driver based on the size of the matrix. Different drivers perform faster on smaller/bigger matrices. And in some instances the CPU will out perform the GPU. What exactly is our average matrix size when we call svd?",
                                                        "author": {
                                                            "login": "mariaWitch"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419652579",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "If we include all keys, it goes form $320^2$ to ~ $20K^2$. As this upper bound isn't really practical, if we exclude all conv layers (which have the largest neurons), the upper bound is ~ $5K^2$. I can list all sizes in a bit, they all are square matrices.\nI've never done this before at all, this is all new to me. Appreciate the help. IIUC, this only matters on cuda devices?",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419713533",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "all matrices sizes that currently go through svd are listed below:\n\n320x320: 47 keys\n640x640: 48 keys\n768x768: 94 keys\n960x960: 2 keys\n1280x1280: 83 keys\n2560x2560: 10 keys\n3072x3072: 12 keys\n5120x5120: 6 keys",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419746439",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I did some benchmarking between jax's svd functions jitted through XLA and pytorch's different drivers on a colab using a v100 (a 3080 is about equal to this in PyTorch Performance), and these were the results.\n\nBasically unless you need full accuracy, even with full_matrices set to true, gesvdj is going to be faster. However the speed you gain comes at the cost of some accuracy, and the potential to not always converge without needing to fall back to gesvd.",
                                                        "author": {
                                                            "login": "mariaWitch"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419802419",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I tested gesvdj with fractional alpha a while ago and the error builds up pretty quickly. IIRC it works okay in the non fractional cases (alpha = 0 or alpha = 1). I'll run some tests again to verify this and make sure this was the cause.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419804656",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "It appears that I can't practically merge models using gesvdj, on my 3080 it takes 1m10s to merge a single 3072x3072 key. The full merge might take more than a hour. Maybe the proper merge driver to use is hardware dependent?\nstage 1:  11%|\u2588         | 121/1133 [08:28<22:51,  1.36s/it]\nshape: torch.Size([3072, 3072])\nstage 1:  11%|\u2588         | 125/1133 [09:38<1:46:57,  6.37s/it]",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419812072",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'll make sure to try it here in a bit on my system.",
                                                        "author": {
                                                            "login": "mariaWitch"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419834913",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Apart from taking 57 minutes to merge gesvdj on a RTX 3080, there doesn't seem to be any quality difference between merging using gesvd and gesvdj with alpha=1.0 and beta=0.0:\n\nUnless of course I did not switch the driver correctly. All I did was use the string \"gesvdj\" instead of \"gesvd\". All merges were made using --driver cuda",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419871893",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yeah, something seems wrong on your end, are you sure that PyTorch is seeing your GPU?",
                                                        "author": {
                                                            "login": "mariaWitch"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419872612",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Yes my device is setup correctly and I can see that it uses cuda:0 during the merge. I don't have any other cuda hardware on my system.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419875731",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'll try updating pytorch to 2.1.x and see if that fixes it. Currently my version is 2.0.1 compiled with cuda support.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419880035",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Updating did not increase merge speed with gesvdj.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419884319",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "How long does it take on your end to merge the same set of models with gesvd and then with gesvdj? I understand that the benchmarks above indicate that gesvdj should be faster, but I wonder if we should run benchmarks against the particular type of data we would see with model merging in case gesvdj runs faster or slower depending on what the value of the input is.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419910898",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I'm getting 1.3 sec/it to 1.8it/sec with gesvd.  gesvdj does seem slower. My guess is that our matrices aren't converging. Now, do we need the full matrix from svd? Setting that to false would help speed things up as well.",
                                                        "author": {
                                                            "login": "mariaWitch"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419952364",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Does the full_matrices parameter even have an effect when the input matrix is square? But even if it has an effect, I believe we do. Basically, what we're doing here is solving the procrustes problem where the points are the neurons from A and B. We need $U$ and $V^T$ to be (square) unitary matrices. If computing reduced matrices shrinks $U$ and $V$ in width, I'm not sure the resulting $UV^T$ would necessarily be unitary.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419959499",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Hm, according to the docs, it seems that the columns of $U$ and $V$ should be orthonormal with full_matrices=False. IIUC, $UV^T$ should then be a orthogonal matrix. Experimentally, that seems to be the case. I'll test if there's any quality loss/drawback to this and how much quicker it is.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419962737",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "There is no apparent quality loss, so I'll commit full_matrices=False.\nleft image is full_matrices=False, right image is full_matrices=True",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419964640",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Actually I don't see a major speedup with full_matrices=False. I'll try to remove neuron dimensions that are more similar. One idea I had was to lower the similarity threshold during the comparison so that the values in a dimension closer to 0 are discarded before applying SVD.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1419978192",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "If we have a lot of similar matrices, it might be worth it to try jax instead of pytorch and use the XLA accelerated svd functions there. From what I understanding, the caching will make repeated runs of similar data faster.",
                                                        "author": {
                                                            "login": "mariaWitch"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1420395357",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I just did a speed test on CPU and the performance is significantly better. With 4 threads, CPU was able to get to key 943/1145 in only 5 minutes using the default driver (gesvdj) before the process ran out of memory. (I use WSL for my SD env).",
                                                        "author": {
                                                            "login": "mariaWitch"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1420705562",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Also, I am currently having an issue where moving beyond stage 1 causes a crash with the following backtrace on cpu.\nstage 1:  98%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 1105/1131 [04:51<00:06,  3.79it/s]\nUsing already loaded model bbwm_Aurora.safetensors [431eebe43e]: done in 8.9s (send model to device: 8.9s)\n*** API error: POST: http://127.0.0.1:7860/bbwm/merge-models {'error': 'RuntimeError', 'detail': '', 'body': '', 'errors': 'torch.linalg.eig: input tensor should not contain infs or NaNs.'}\n    Traceback (most recent call last):\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/anyio/streams/memory.py\", line 98, in receive\n        return self.receive_nowait()\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/anyio/streams/memory.py\", line 93, in receive_nowait\n        raise WouldBlock\n    anyio.WouldBlock\n\n    During handling of the above exception, another exception occurred:\n\n    Traceback (most recent call last):\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/middleware/base.py\", line 78, in call_next\n        message = await recv_stream.receive()\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/anyio/streams/memory.py\", line 118, in receive\n        raise EndOfStream\n    anyio.EndOfStream\n\n    During handling of the above exception, another exception occurred:\n\n    Traceback (most recent call last):\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/modules/api/api.py\", line 187, in exception_handling\n        return await call_next(request)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/middleware/base.py\", line 84, in call_next\n        raise app_exc\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/middleware/base.py\", line 70, in coro\n        await self.app(scope, receive_or_disconnect, send_no_error)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/middleware/base.py\", line 108, in __call__\n        response = await self.dispatch_func(request, call_next)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/modules/api/api.py\", line 151, in log_and_time\n        res: Response = await call_next(req)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/middleware/base.py\", line 84, in call_next\n        raise app_exc\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/middleware/base.py\", line 70, in coro\n        await self.app(scope, receive_or_disconnect, send_no_error)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/middleware/cors.py\", line 84, in __call__\n        await self.app(scope, receive, send)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/middleware/gzip.py\", line 24, in __call__\n        await responder(scope, receive, send)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/middleware/gzip.py\", line 44, in __call__\n        await self.app(scope, receive, self.send_with_gzip)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/middleware/exceptions.py\", line 79, in __call__\n        raise exc\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/middleware/exceptions.py\", line 68, in __call__\n        await self.app(scope, receive, sender)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/fastapi/middleware/asyncexitstack.py\", line 21, in __call__\n        raise e\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/fastapi/middleware/asyncexitstack.py\", line 18, in __call__\n        await self.app(scope, receive, send)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/routing.py\", line 718, in __call__\n        await route.handle(scope, receive, send)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/routing.py\", line 276, in handle\n        await self.app(scope, receive, send)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/starlette/routing.py\", line 66, in app\n        response = await func(request)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/fastapi/routing.py\", line 237, in app\n        raw_response = await run_endpoint_function(\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/fastapi/routing.py\", line 163, in run_endpoint_function\n        return await dependant.call(**values)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/extensions/sd-webui-bayesian-merger/scripts/api.py\", line 78, in merge_models_api\n        merged = merge_models(\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/sd_meh/merge.py\", line 162, in merge_models\n        merged = simple_merge(\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/sd_meh/merge.py\", line 245, in simple_merge\n        res.result()\n      File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 451, in result\n        return self.__get_result()\n      File \"/usr/lib/python3.10/concurrent/futures/_base.py\", line 403, in __get_result\n        raise self._exception\n      File \"/usr/lib/python3.10/concurrent/futures/thread.py\", line 58, in run\n        result = self.fn(*self.args, **self.kwargs)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/sd_meh/merge.py\", line 353, in simple_merge_key\n        with merge_key_context(key, thetas, *args, **kwargs) as result:\n      File \"/usr/lib/python3.10/contextlib.py\", line 135, in __enter__\n        return next(self.gen)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/sd_meh/merge.py\", line 450, in merge_key_context\n        result = merge_key(*args, **kwargs)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/sd_meh/merge.py\", line 422, in merge_key\n        merged_key = merge_method(**merge_args).to(device)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/sd_meh/merge_methods.py\", line 252, in rotate\n        transform = fractional_matrix_power(transform, alpha)\n      File \"/home/maria/stable-diffusion/stable-diffusion-webui/venv/lib/python3.10/site-packages/sd_meh/merge_methods.py\", line 272, in fractional_matrix_power\n        eigenvalues, eigenvectors = torch.linalg.eig(matrix)\n    RuntimeError: torch.linalg.eig: input tensor should not contain infs or NaNs.\n\n---",
                                                        "author": {
                                                            "login": "mariaWitch"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1420789172",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "on CPU [...] the performance is significantly better\n\n5 minutes is the time it takes on my system to merge on cuda with the gesvd driver. I'll see if I get a speed discount on cpu with gesvdj with 10 threads.\n\nAlso, I am currently having an issue where moving beyond stage 1 causes a crash with the following backtrace on cpu.\n\nAlthough I am not testing rotation through the bbmw API, even though I haven't seen this error before, it is probably caused by the merge method and not the API. It seems to be near the end of stage 1 (still in it because the exception is raised inside the merge method). It seems to be caused by imprecision in the svd calculation. It is possible that full_matrices=False is the cause, if it isn't because we are using the gesvdj driver on cpu.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1420934119",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Reading from the docs, it doesn't seem to be possible to pick a specific driver if the device is not cuda:\n\nThe driver kwarg may be used in CUDA with a cuSOLVER backend to choose the algorithm used to compute the SVD. The choice of a driver is a trade-off between accuracy and speed.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1420974208",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Sometimes torch.linalg.cond(a_neurons.T @ b_neurons) is very large (~1.0e+15) and at other times it is < 1000. According to the docs:\n\n\nIf A is well-conditioned (its condition number is not too large), or you do not mind some precision loss.\n\nFor a general matrix: \u2018gesvdj\u2019 (Jacobi method)\nIf A is tall or wide (m >> n or m << n): \u2018gesvda\u2019 (Approximate method)\n\n\n\n\nSo gesvda is definitely not appropriate, and gesvdj seems to be sometimes (but most keys seem to have a large cond experimentally). Calculating torch.linalg.cond takes a bit of time, so it may or may not be worth it to switch to gesvdj conditionally.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1420981246",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Do you know how I can install pytorch_xla? I'm not able to run the pip install here:\nhttps://github.com/pytorch/xla/#getting-started\n\nLooking in links: https://storage.googleapis.com/libtpu-releases/index.html\nRequirement already satisfied: torch~=2.1.0 in d:\\src\\meh-dev\\venv\\lib\\site-packages (2.1.1+cu118)\nERROR: Could not find a version that satisfies the requirement torch_xla[tpu]~=2.1.0 (from versions: 1.0)\nERROR: No matching distribution found for torch_xla[tpu]~=2.1.0",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1420989703",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "The quickest run I could get was under 5 minutes (~4m45s) using --work_device cuda and --threads 10 with the current code in the PR. IIUC threads are useful here to reduce the overhead of tensors being copied to another device.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1421020571",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "So I actually did a test with a full matrices turned on and the issue still occurred. So I'm not sure what is causing it.",
                                                        "author": {
                                                            "login": "mariaWitch"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1421053962",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Do you know how I can install pytorch_xla? I'm not able to run the pip install here: https://github.com/pytorch/xla/#getting-started\n\nLooking in links: https://storage.googleapis.com/libtpu-releases/index.html\nRequirement already satisfied: torch~=2.1.0 in d:\\src\\meh-dev\\venv\\lib\\site-packages (2.1.1+cu118)\nERROR: Could not find a version that satisfies the requirement torch_xla[tpu]~=2.1.0 (from versions: 1.0)\nERROR: No matching distribution found for torch_xla[tpu]~=2.1.0\n\n\n\nSo when I referenced XLA, I was using it in the context of JAX, where you precompile your function using the XLA JIT with JAX, and then go from there. You can interoperate PyTorch and JAX using DLpacks so there shouldn't be any issues with type compatibility, the notation might get a little messy though.",
                                                        "author": {
                                                            "login": "mariaWitch"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1421059162",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "By the way full_matrices=False doesn't produce a reduced SVD when $m=n$ ($m$ and $n$ being the width and height of the svd input). That's why it didn't seem to affect generation speed. We might want to remove it as it doesn't really change anything, since the input to the svd is always a square covariance matrix here.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1421067944",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "So I did complete a full merge on CUDA, and didn't receive the error. I think it has something to do with trying to move models between the CPU and GPU, interacting with WebUI keeping models loaded in memory. Is there sanity checking when the models are loaded to ensure that they have been moved to CPU if the work_device is set to CPU?",
                                                        "author": {
                                                            "login": "mariaWitch"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1423142229",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Before merging, when assembling the merge args, the weights are sent to the requested device:\n\n  \n    \n      meh/sd_meh/merge.py\n    \n    \n        Lines 465 to 466\n      in\n      2780321\n    \n  \n  \n    \n\n        \n          \n           \"a\": thetas[\"model_a\"][key].to(work_device), \n        \n\n        \n          \n           \"b\": thetas[\"model_b\"][key].to(work_device), \n        \n    \n  \n\n\nnote that if work_device is None, it takes the value of device:\n\n  \n    \n      meh/sd_meh/merge.py\n    \n    \n        Lines 371 to 372\n      in\n      2780321\n    \n  \n  \n    \n\n        \n          \n           if work_device is None: \n        \n\n        \n          \n               work_device = device \n        \n    \n  \n\n\nSo IIUC, it shouldn't be a device issue.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1423394967",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I think I found the culprit.\nIt seems that on CPU there isn't enough precision sometimes, which leads too $U$ or $V^T$ having a determinant of 0. This is not what SVD should output, $U$ and $V^T$ should always be orthogonal transforms, which implies $|det U| = |det V^T| = 1$.\nWhen the determinant of $U$ or $V^T$ is 0, then this line divides by 0:\n        u[:, -1] /= torch.det(u) * torch.det(v_t)\nSo the last column of u sometimes is filled with infinities. Then, when trying to compute the eigenvalues of the matrix, an error is then raised.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1429383612",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "As noted below, while this prevents the entire merge from raising an error, rotations with invalid determinants still result in a broken merge. I went the other direction and raised an error instead.",
                                                        "author": {
                                                            "login": "ljleb"
                                                        },
                                                        "url": "https://github.com/s1dlx/meh/pull/50#discussion_r1429469484",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "a6742b3",
                                                            "authoredDate": "2023-11-21T00:11:01Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 1061,
                        "title": "CC-859 add stripe invoice details",
                        "repository": {
                            "nameWithOwner": "codecrafters-io/frontend",
                            "primaryLanguage": {
                                "name": "JavaScript"
                            }
                        },
                        "createdAt": "2023-12-08T03:22:16Z",
                        "mergedAt": "2023-12-13T16:35:11Z",
                        "url": "https://github.com/codecrafters-io/frontend/pull/1061",
                        "state": "MERGED",
                        "author": {
                            "login": "libmartinito"
                        },
                        "editor": {
                            "login": "libmartinito"
                        },
                        "body": "**Checklist**:\r\n\r\n- [x] I've thoroughly self-reviewed my changes\r\n- [x] I've added tests for my changes, unless they affect admin-only areas (or are otherwise not worth testing)\r\n- [x] I've verified any visual changes using Percy (add a commit with `[percy]` in the message to trigger)\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n              @tracked isExtraInvoiceDetailsRequested = false;\n          \n          \n            \n              @tracked extraInvoiceDetailsRequested = false;",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420466104",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Our naming pattern is to use handleClick for handlers within the class, and @onClick for args - to be consistent I'd name this arg @onStartMembershipButtonClick",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420469067",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Let's add a space between the service declarations and the rest (not sure how we ended up without it here)",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420470335",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Bad naming, this should be something like selectedPricingFrequency.\nReasoning: https://chat.openai.com/share/d668d64c-182e-4e9d-8e17-6517d91fc65e\n@libmartinito we don't seem to be getting better with naming - I'd strongly suggest spending more time on this. Read books, talk to chatgpt about it, try to identify cases where our naming is wrong and ask me clarifying questions, do whatever it takes - usually these problems go away in a couple of months, doesn't seem to be happening so we need to pay extra attention to it",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420472117",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                    @handleStartMembershipButtonClick={{this.handleStartMembershipButtonClick}}\n          \n          \n            \n                    @onStartMembershipButtonClick={{this.handleStartMembershipButtonClick}}",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420477957",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Feel like this whole function could be far simpler:\nreturn {\n  pricingFrequency: this.selectedPricingFrequency,\n  regionalDiscount: this.shouldApplyRegionalDiscount ? this.model.regionalDiscount : null,\n  earlyBirdDiscountEnabled: this.selectedPricingFrequency == \"yearly\" && this.user.isEligibleForEarlyBirdDiscount,\n  referralDiscountEnabled: this.selectedPricingFrequency == \"yearly\" && this.user.isEligibleForReferralDiscount\n}",
                                                        "author": {
                                                            "login": "rohitpaulk"
                                                        },
                                                        "url": "https://github.com/codecrafters-io/frontend/pull/1061#discussion_r1420511531",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "f33f5d6",
                                                            "authoredDate": "2023-12-08T09:20:03Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 191,
                        "title": "build: bump core",
                        "repository": {
                            "nameWithOwner": "sablier-labs/v2-periphery",
                            "primaryLanguage": {
                                "name": "Solidity"
                            }
                        },
                        "createdAt": "2023-09-28T10:14:50Z",
                        "mergedAt": "2023-09-28T18:37:28Z",
                        "url": "https://github.com/sablier-labs/v2-periphery/pull/191",
                        "state": "MERGED",
                        "author": {
                            "login": "andreivladbrg"
                        },
                        "editor": null,
                        "body": "Update the `v2-core` branch to main and add the `transferable` parameter from this [PR](https://github.com/sablier-labs/v2-core/pull/668).\r\n\r\nNotes:\r\n1. I have not changed yet the `package.json` file for the new `v2-core` version because it's not released on npm. Installing it as a github package would not work due to [prepack](https://github.com/sablier-labs/v2-core/blob/e626e6f9f9c460a8b42b3501de71debb684965b3/package.json#L60) from core. It would fail as seen [here](https://app.warp.dev/block/dfG3EBwso2os6NbedCqQuh).\r\n2. At the moment we are deploying the core contracts in the fork tests because using the old version of them would not work due to the new boolean added.",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "looks good except for that gas optimization",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We need to define this before merkleRoot to save gas by tight packing.",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-periphery/pull/191#discussion_r1340520613",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "069b80c",
                                                            "authoredDate": "2023-09-28T12:23:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Update: it is not true that storage variables are tightly packed like struct fields.\n\nhttps://chat.openai.com/share/67619484-f686-4d11-8cac-cb9e8d4ca1ce\nhttps://ethereum.stackexchange.com/q/155029/24693",
                                                        "author": {
                                                            "login": "PaulRBerg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-periphery/pull/191#discussion_r1340538359",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "069b80c",
                                                            "authoredDate": "2023-09-28T12:23:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "lgtm",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ChatGPT seems to have given an incorrect response here. Storage variables are also tightly packed.\nIt's true that because of dealing with reduced-size variables in the same slot, changing the value of y will consume more gas (~100 in comparison) in the case of contract B, but it will also save gas (~16,000 in comparison) when setting it the first time. It depends on the use case and how many times each variable is read or written.\nHowever, in the above code, it does not matter because immutable variables are part of the creation code and not of the contract storage.\n\nhttps://docs.soliditylang.org/en/latest/internals/layout_in_storage.html\nhttps://docs.soliditylang.org/en/latest/contracts.html#immutable",
                                                        "author": {
                                                            "login": "smol-ninja"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-periphery/pull/191#discussion_r1418867427",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "069b80c",
                                                            "authoredDate": "2023-09-28T12:23:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "However, in the above code, it does not matter because immutable variables are part of the creation code and not of the contract storage.\n\nyes, this is correct, that's what i've told him privately",
                                                        "author": {
                                                            "login": "andreivladbrg"
                                                        },
                                                        "url": "https://github.com/sablier-labs/v2-periphery/pull/191#discussion_r1418874467",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "069b80c",
                                                            "authoredDate": "2023-09-28T12:23:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 22,
                        "title": "ODY-276 About\u30da\u30fc\u30b8\u306e\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u5bfe\u5fdc",
                        "repository": {
                            "nameWithOwner": "daydule/odyssey-frontend",
                            "primaryLanguage": {
                                "name": "TypeScript"
                            }
                        },
                        "createdAt": "2023-12-16T02:35:41Z",
                        "mergedAt": "2023-12-27T12:46:54Z",
                        "url": "https://github.com/daydule/odyssey-frontend/pull/22",
                        "state": "MERGED",
                        "author": {
                            "login": "atoook"
                        },
                        "editor": {
                            "login": "atoook"
                        },
                        "body": "# \u4e8b\u524d\u78ba\u8a8d\r\n\r\n- [x] PR\u524d\u306b\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u305f\u304b\r\n- [x] \u6a5f\u5bc6\u60c5\u5831\u3092\u542b\u3093\u3067\u3044\u306a\u3044\u304b\r\n- [x] [\u958b\u767a\u30eb\u30fc\u30eb](https://daydule.atlassian.net/wiki/spaces/DAYDULE/pages/9765029)\u3092\u5b88\u3063\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u304b\r\n- [x] \u5358\u4f53\u30c6\u30b9\u30c8\u304c\u5168\u3066OK\u306b\u306a\u3063\u3066\u3044\u308b\u304b\uff08\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u306a\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5834\u5408SKIP\uff09\r\n- [x] \u6700\u65b0\u306e`develop`\u30d6\u30e9\u30f3\u30c1\u3092\u53cd\u6620\u3057\u3066\u3044\u308b\u304b\r\n- [x] \u30d3\u30eb\u30c9\u30a8\u30e9\u30fc/ESLint\u30a8\u30e9\u30fc\u306f\u8d77\u304d\u3066\u3044\u306a\u3044\u304b\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u512a\u5148\u5ea6\uff08\u3069\u308c\u304b\u4e00\u3064\uff09\r\n\r\n- [ ] \u3059\u3050\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] 3\u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] 7\u65e5\u304f\u3089\u3044\u3067\u898b\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30fc\u306e\u5ea6\u5408\u3044\r\n\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [x] \u30b3\u30fc\u30c9\u3092\u3071\u3063\u3068\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n- [ ] \u30b3\u30fc\u30c9\u3092\u3057\u3063\u304b\u308a\u78ba\u8a8d & \u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3082\u3089\u3044\u305f\u3044\r\n\r\n# \u30ec\u30d3\u30e5\u30ef\u30fc\u306b\u3088\u308b\u52d5\u4f5c\u78ba\u8a8d\r\n\r\n- [ ] @tom-takeru \r\n- [ ] @Mellbrother \r\n- [ ] @kzk27 \r\n\r\n# \u3084\u3063\u305f\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n- \u4ee5\u4e0b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b7\u30d6\u5bfe\u5fdc\r\n AboutCardWithImage\r\n AboutCardWithText\r\n- AboutCardWithImage\u306eisImageLeft Props\u3092\u524a\u9664\u3057\u3066\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u81ea\u4f53\u3092Left/Right\u306b\u5206\u5272\uff08\u4f1a\u8b70\u3067\u5171\u6709\u6e08\uff09\r\n \u203b\u7406\u7531\uff11\uff1a\u753b\u9762\u30b5\u30a4\u30ba\u53d6\u5f97\u5f8c\u306bisImageLeft\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u51fa\u3057\u308f\u3051\u3057\u3088\u3046\u3068\u3059\u308b\u3068ssr\u51fa\u6765\u306a\u304f\u306a\u308b\u305f\u3081\r\n \u203b\u7406\u7531\uff12\uff1aAboutCardWithImage\u3092csr\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3068\u3053\u308d\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9NG\u304c\u89e3\u6d88\u3067\u304d\u306a\u304b\u3063\u305f\u305f\u3081 \r\n\r\n# \u3084\u3089\u306a\u3044\u3053\u3068<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3084\u3063\u3066\u3082\u304a\u304b\u3057\u304f\u306a\u3044\u3051\u3069\u3084\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u304a\u3051\u308b\u61f8\u5ff5\u70b9\u3084\u6ce8\u610f\u70b9\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n\r\n# \u305d\u306e\u4ed6<!-- \u3053\u306e\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u4e0a\u8a18\u306e\u9805\u76ee\u4ee5\u5916\u306b\u4f1d\u3048\u308b\u3079\u304d\u3053\u3068\u3092\u66f8\u304f -->\r\n\r\n\u7279\u306b\u306a\u3057\r\n",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "\u4ee5\u4e0b\u3092\u5225\u30c1\u30b1\u30c3\u30c8\u3067\u5bfe\u5fdc\u3059\u308b\u5206\u3068\u3057\u3066\u8d77\u7968\u3057\u307e\u3057\u305f\uff01\n\u3053\u306ePR\u304c\u30de\u30fc\u30b8\u3055\u308c\u3066\u304b\u3089\u3001\u3069\u3053\u304b\u3067\u512a\u5148\u5ea6\u3092\u898b\u3066\u3084\u308a\u307e\u3057\u3087\u3046\uff01\n\u672cPR\u3067\u5bfe\u5fdc\u53ef\u80fd\u3067\u3057\u305f\u3089\u3001\u5bfe\u5fdc\u3057\u3066\u3057\u307e\u3063\u3066\u30c1\u30b1\u30c3\u30c8\u3092\u524a\u9664\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\uff01\n\nAboutCardWithText.tsx\u3000\u304c\u30e2\u30d0\u30a4\u30eb\u306e\u6642\u306b\u753b\u9762\u3044\u3063\u3071\u3044\u306b\u5e83\u304c\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u4fee\u6b63\nAboutCardWith(Right/Left).stories.tsx\u306b\u30b9\u30de\u30db\u5e45\u3067\u306e\u30b9\u30c8\u30fc\u30ea\u3092\u8ffd\u52a0\n\n1\u306b\u3064\u3044\u3066",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u3053\u308c\u3063\u3066\u306a\u3093\u306e\u305f\u3081\u306b\u5165\u308c\u305f\u3093\u3067\u3059\u304b\uff1f",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436242042",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "ChatGPT\u306b\u8cea\u554f\u3060\u3051\u3057\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u3001\u77e5\u3089\u3093\u3068\u8a00\u308f\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3001\u3001\u3001\u3002\nhttps://chat.openai.com/share/adc90fb5-54c2-4f1c-8b17-e2928e556b02",
                                                        "author": {
                                                            "login": "tom-takeru"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436248823",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "@tom-takeru\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b.tsx\u306e\u62e1\u5f35\u5b50\u3092\u3064\u3051\u3066import\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u3059\u304c\uff08\u4fee\u6b63\u524d\u306b\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u8ffd\u52a0\u3057\u305f\u8a18\u61b6\u304c\u3042\u308a\u307e\u3059\uff09\u304c\u3001\u4e0d\u8981\u306a\u306e\u3067\u524a\u9664\u3057\u307e\u3059\u3002\nimport { XXX } from 'XXXX.tsx';",
                                                        "author": {
                                                            "login": "atoook"
                                                        },
                                                        "url": "https://github.com/daydule/odyssey-frontend/pull/22#discussion_r1436360202",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "b1d3dd5",
                                                            "authoredDate": "2023-12-25T11:12:59Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM\uff01 \ud83d\udc24",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        },
                        {
                            "property": "body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 114,
                        "title": "Show info header only on first command",
                        "repository": {
                            "nameWithOwner": "shakacode/heroku-to-control-plane",
                            "primaryLanguage": {
                                "name": "Ruby"
                            }
                        },
                        "createdAt": "2023-11-20T17:21:04Z",
                        "mergedAt": "2023-12-01T20:44:33Z",
                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114",
                        "state": "MERGED",
                        "author": {
                            "login": "ahangarha"
                        },
                        "editor": null,
                        "body": "\r\n---\r\nCloses #111 ",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Is this the best way to do this? In other places, we use instance/class variables:",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1403334504",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4cfaf11",
                                                            "authoredDate": "2023-11-20T17:18:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "I am not happy about it either but this was the only way I could implement it.\nI tried this at first. But when we run a command (run CLI start method) in another command, we get into a new instance, and we don't have access to the earlier instance variables.",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1404562743",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4cfaf11",
                                                            "authoredDate": "2023-11-20T17:18:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "This raises a WTF...\nWhere in the world did you get the ObjectSpace idea?\nCounting object instances is a total hack.\nYou could probably set a static counter on or boolean on the CPL class. In other words, instance variable on the class, not the instance.\nUse a class instance variable (aka static) on the cpl class.\nhttps://chat.openai.com/share/e62c8db1-0622-4617-b8a6-5c3a4d82f387",
                                                        "author": {
                                                            "login": "justin808"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1404708568",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "4cfaf11",
                                                            "authoredDate": "2023-11-20T17:18:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "CHANGES_REQUESTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\"already\" feels redundant. showed_info_header already gets the point across.",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1405147053",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "Can we not just call show_info_header directly without Cpl::Cli, since we're inside of the class?",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1405147230",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "No.\nIt seems we are defining instance methods for each command. If we want to call static methods from instance methods, we must prefix it with the class. This confusion was one of the reasons I tried to find another way to implement this feature.\nI can replace Cpl::Cli with self.class, but I think this is clearer.",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1405348325",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "Looks good to me, just one thing I missed about initializing the variable, but no need for re-review.",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "We don't need to initialize it.",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406016725",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "77ddae2",
                                                            "authoredDate": "2023-11-26T08:10:21Z"
                                                        }
                                                    }
                                                },
                                                {
                                                    "node": {
                                                        "bodyText": "You're right.\nMaybe it would be even better to move show_info_header to a helper then, because it would be easier to call it. But the current way works too, so up to you. I'll approve the PR.",
                                                        "author": {
                                                            "login": "rafaelgomesxyz"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406017865",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Since we use it once, let's keep it here. Let's move it there when we need to. Agree?",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406463687",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "16a829f",
                                                            "authoredDate": "2023-11-25T11:00:56Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Done! I removed it.\nI thought an explicit default value assignment would be better.",
                                                        "author": {
                                                            "login": "ahangarha"
                                                        },
                                                        "url": "https://github.com/shakacode/heroku-to-control-plane/pull/114#discussion_r1406469550",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "77ddae2",
                                                            "authoredDate": "2023-11-26T08:10:21Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 52,
                        "title": "Voice functionality added with Whisper",
                        "repository": {
                            "nameWithOwner": "OthersideAI/self-operating-computer",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-12-01T21:33:58Z",
                        "mergedAt": "2023-12-05T14:15:44Z",
                        "url": "https://github.com/OthersideAI/self-operating-computer/pull/52",
                        "state": "MERGED",
                        "author": {
                            "login": "younesbram"
                        },
                        "editor": null,
                        "body": "Added voice functionality with whisper. Implemented a `--voice` command-line flag using `argparse`.\r\n",
                        "reviews": {
                            "edges": []
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                },
                {
                    "node": {
                        "number": 904,
                        "title": "\u6574\u7406: \u7591\u554f\u5f62 upspeak \u306e\u5358\u7d14\u5316",
                        "repository": {
                            "nameWithOwner": "VOICEVOX/voicevox_engine",
                            "primaryLanguage": {
                                "name": "Python"
                            }
                        },
                        "createdAt": "2023-12-19T08:22:22Z",
                        "mergedAt": "2023-12-21T05:24:41Z",
                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904",
                        "state": "MERGED",
                        "author": {
                            "login": "tarepan"
                        },
                        "editor": {
                            "login": "tarepan"
                        },
                        "body": "## \u5185\u5bb9\r\n\u6982\u8981: \u7591\u554f\u5f62 upspeak \u51e6\u7406\u306e\u5358\u7d14\u5316\u306b\u3088\u308b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0  \r\n\r\n\u30cd\u30b9\u30c8\u306e\u89e3\u6d88\u30fb\u51e6\u7406\u306e\u7c21\u7d20\u5316\u306b\u3088\u3063\u3066\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3092\u304a\u3053\u306a\u3063\u305f\u3002  \r\n\r\n## \u95a2\u9023 Issue\r\npart of #897\r\n\r\n## Reviewer \u5411\u3051\u60c5\u5831\r\n3\u3064\u306e\u95a2\u6570\u30cd\u30b9\u30c8\u3092\u524a\u9664\u3057\u305f\u305f\u3081\u3001diff \u304c\u6a5f\u80fd\u3057\u3066\u3044\u307e\u305b\u3093\u3002  \r\ncommit \u3054\u3068\u306b 1 \u3064\u306e\u95a2\u6570\u3092\u524a\u9664\u3057\u305f\u305f\u3081\u3001\u30ec\u30d3\u30e5\u30fc\u6642\u306b\u306f commit log \u3092\u53c2\u7167\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002  ",
                        "reviews": {
                            "edges": [
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u3053\u306e\u5909\u66f4\u3067\u3059\u304c\u3001\u4e00\u822c\u7684\u306b\u306f\u95a2\u6570\u5074\u306b\u30d5\u30e9\u30b0\u3092\u4e0e\u3048\u3066\u3069\u3046\u3059\u308b\u304b\u3092\u59d4\u306d\u308b\u3088\u308a\u3082\u3001\u5358\u4e00\u51e6\u7406\u3092\u884c\u3046\u95a2\u6570\u306b\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u3055\u308c\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nChatGPT\u306b\u4e21\u8005\u306e\u30e1\u30ea\u30c3\u30c8\u3092\u805e\u3044\u3066\u307f\u305f\u611f\u3058\u3001\u3053\u306e\u8fd4\u7b54\u304c\u81ea\u5206\u306e\u8003\u3048\u3068\u8fd1\u304b\u3063\u305f\u3067\u3059\u3002\nhttps://chat.openai.com/share/cb0a7a43-fbff-4876-801a-921c90ed5618\n\u4f55\u304b\u3053\u3046\u3057\u3066\u3044\u308b\u610f\u56f3\u304c\u3042\u308c\u3070\u77e5\u308a\u305f\u3044\u3067\u3059\uff01",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433359944",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u4e00\u822c\u7684\u306b\u306f ... \u5358\u4e00\u51e6\u7406\u3092\u884c\u3046\u95a2\u6570\u306b\u3059\u308b\u306e\u304c\u826f\u3044\n\n\ud83d\udc4d\n\u4e00\u822c\u8ad6\u3068\u3057\u3066\u540c\u610f\u3067\u3059\u3002\n\n\u3053\u3046\u3057\u3066\u3044\u308b\u610f\u56f3\u304c\u3042\u308c\u3070\n\n\u300cupspeak \u9069\u7528\u6709\u7121\u542b\u3081\u3066 1 \u6a5f\u80fd\u3068\u307f\u306a\u3057\u3001\u53b3\u5bc6\u306b\u30c6\u30b9\u30c8\u3067\u304d\u308b\u304b\u3089\u300d\u304c\u610f\u56f3/\u7406\u7531\u3067\u3059\u3002\n\u73fe\u5728\u306e test_synthesis_engine_base.py \u3067\u306f spy \u306b\u7528\u3044\u3066 .synthesis() \u306e\u4e00\u90e8\u3092\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n  \n    \n      voicevox_engine/test/test_synthesis_engine_base.py\n    \n    \n        Lines 214 to 218\n      in\n      831d28a\n    \n  \n  \n    \n\n        \n          \n           self.synthesis_engine.synthesis( \n        \n\n        \n          \n               query, 0, enable_interrogative_upspeak=enable_interrogative_upspeak \n        \n\n        \n          \n           ) \n        \n\n        \n          \n           # _synthesis_impl\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u4e0e\u3048\u3089\u308c\u305fquery\u3092\u691c\u8a3c \n        \n\n        \n          \n           actual = self.synthesis_engine._synthesis_impl.call_args[0][0].accent_phrases \n        \n    \n  \n\n\n\n  \n    \n      voicevox_engine/test/test_synthesis_engine_base.py\n    \n    \n        Lines 255 to 259\n      in\n      831d28a\n    \n  \n  \n    \n\n        \n          \n           self.create_synthesis_test_base( \n        \n\n        \n          \n               text=\"\u3053\u308c\u306f\u3042\u308a\u307e\u3059\u304b\uff1f\", \n        \n\n        \n          \n               expected=expected, \n        \n\n        \n          \n               enable_interrogative_upspeak=False, \n        \n\n        \n          \n           ) \n        \n    \n  \n\n\n\u3053\u306e\u30c6\u30b9\u30c8\u5bfe\u8c61\u9818\u57df\u304c\u300cupspeak \u9069\u7528\u6709\u7121 + upspeak\u9069\u7528\u300d\u3064\u307e\u308a\u4eca\u56de\u5207\u308a\u51fa\u3055\u308c\u305f apply_interrogative_upspeak() \u306b\u76f8\u5f53\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u73fe\u5728\u306e\u30c6\u30b9\u30c8\u3067\u306f\u3053\u306e\u30b3\u30fc\u30c9\u3092 enable_interrogative_upspeak \u30d5\u30e9\u30b0\u5024\u3092\u5909\u3048\u306a\u304c\u3089\u5e45\u5e83\u3044\u30d1\u30bf\u30fc\u30f3\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5e45\u5e83\u3055\u306fupspeak\u6709\u7121\u306e\u30d0\u30b0\u304c\u54c1\u8cea\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u305f\u3081\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n#899 \u3067\u8b70\u8ad6\u3055\u308c\u305f\u3088\u3046\u306b .synthesis() \u306e\u5165\u529b\u8a2d\u5b9a\u5168\u30d1\u30bf\u30fc\u30f3\u30c6\u30b9\u30c8\u306f\u4e0d\u53ef\u80fd\u3067\u3059\u3002\n\u3053\u308c\u304c\u7406\u7531\u3067\u3001\u30d5\u30e9\u30b0\u3092\u5916\u306b\u51fa\u3059\u3068\u73fe\u884c\u306e\u300cenable_interrogative_upspeak \u30d5\u30e9\u30b0\u5024\u3092\u5909\u3048\u306a\u304c\u3089\u5e45\u5e83\u3044\u30d1\u30bf\u30fc\u30f3\u300d\u3092\u6368\u3066\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\nenable_interrogative_upspeak \u30d5\u30e9\u30b0\u3092 upspeak \u91cf\u3092\u8abf\u6574\u3059\u308b\u4f55\u304b\u3068\u898b\u505a\u3057\u3066\u3057\u307e\u3048\u3070\u3001apply_interrogative_upspeak() \u306e\u5f15\u6570\u306b\u8abf\u6574\u8a2d\u5b9a\u5024\u304c\u5165\u308b\u306e\u306f\u305d\u3053\u307e\u3067\u9055\u548c\u611f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3088\u3063\u3066 upspeak\u9069\u7528\u6709\u7121\u542b\u3081\u3066 1 \u6a5f\u80fd\u3068\u307f\u306a\u3059\u306e\u306f\uff08\u5c11\u306a\u304f\u3068\u3082\uff09\u304a\u304b\u3057\u306a\u3053\u3068\u3067\u306f\u306a\u304f\u3001\u4ed6\u306e\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8\u3067\u30d5\u30e9\u30b0\u3092\u5f15\u6570\u306b\u3059\u308b\u304b\u5426\u304b\u6c7a\u3081\u3066\u826f\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u89b3\u70b9\u3092\u7dcf\u5408\u3057\u305f\u7d50\u679c\u3001\u9069\u7528\u6709\u7121\u542b\u30811\u6a5f\u80fd\u3068\u898b\u505a\u3057\u3066\u73fe\u884c\u306e\u5e45\u5e83\u3044\u30c6\u30b9\u30c8\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u6700\u5584\u3068\u8003\u3048\u3001\u4e00\u822c\u8ad6\u3068\u306f\u7570\u306a\u308b\u5207\u308a\u51fa\u3057\u65b9\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u8ffd\u8a18:\n\u5c06\u6765\u306e\u65b9\u5411\u6027\u3068\u3057\u3066\u3001\n\n#897 \u304c\u9032\u884c\u3057\u3066 .synthesis() \u3068 ._synthesis_impl() \u304c\u7d71\u5408\nquery_to_decoder_feature() \u5185\u3078\u672c PR \u306e apply_interrogative_upspeak() \u3092\u79fb\u690d\n\u4ed6\u306e apply \u95a2\u6570\u9054\u3068\u4e26\u3076\n\n\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\uff08\u4e0b\u30b3\u30fc\u30c9\u306f\u6700\u7d42\u72b6\u614b\u306e\u30a4\u30e1\u30fc\u30b8\uff09\ndef query_to_decoder_feature(query) -> tuple[ndarray, ndarray]:\n    accent_phrases = query.accent_phrases\n    # \u8a2d\u5b9a\u3092\u9069\u7528\u3059\u308b\n    accent_phrases = apply_interrogative_upspeak(accent_phrases, query) # query\u5185upspeak\u30d5\u30e9\u30b0\n    moras = apply_prepost_silence(to_flatten_moras(accent_phrases), query)\n    moras = apply_speed_scale(moras, query)\n    moras = apply_pitch_scale(moras, query)\n    ...",
                                                        "author": {
                                                            "login": "tarepan"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433424756",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "\u306a\u308b\u307b\u3069\u3067\u3059\uff01\uff01\n\u5c11\u306a\u304f\u3068\u3082\u4eca\u306ePR\u306eapply_interrogative_upspeak\u95a2\u6570\u306f\u3001query\u30af\u30e9\u30b9\uff08\u3064\u307e\u308a\u95a2\u6570\u306e\u8cac\u52d9\u7bc4\u56f2\u5916\uff09\u306benable_interrogative_upspeak\u304c\u3042\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u306a\u3044\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u3060\u3051\u898b\u305f\u5834\u5408\u306b\u3001\u306a\u305c\u3053\u306e\u30d5\u30e9\u30b0\u304c\u3042\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u304b\u306a\u3068\u3002\nquery\u305d\u306e\u3082\u306e\u3092\u6e21\u3059\u8a2d\u8a08\u3092\u4e88\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u8a71\u306f\u5225\u3067\u3057\u305f\u3002\u3044\u3063\u305f\u3093NOTE\u30b3\u30e1\u30f3\u30c8\u304c\u6709\u308b\u3068\u826f\u3044\u306e\u304b\u306a\u3068\uff01\n\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u30de\u30fc\u30b8\u3055\u305b\u3066\u3044\u305f\u3060\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff01",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433522317",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "COMMENTED",
                                        "bodyText": "",
                                        "comments": {
                                            "edges": [
                                                {
                                                    "node": {
                                                        "bodyText": "Suggested change\n      \n    \n    \n      \n          \n            \n                \"\"\"\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5404\u30a2\u30af\u30bb\u30f3\u30c8\u53e5\u306e\u672b\u5c3e\u3078\u7591\u554f\u5f62\u30e2\u30fc\u30e9\uff08\u540c\u4e00\u6bcd\u97f3\u30fb\u7d99\u7d9a\u9577 0.15\u79d2\u30fb\u97f3\u9ad8\u2191\uff09\u3092\u4ed8\u4e0e\u3059\u308b\"\"\"\n          \n          \n            \n                \"\"\"\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5404\u30a2\u30af\u30bb\u30f3\u30c8\u53e5\u306e\u672b\u5c3e\u3078\u7591\u554f\u5f62\u30e2\u30fc\u30e9\uff08\u540c\u4e00\u6bcd\u97f3\u30fb\u7d99\u7d9a\u9577 0.15\u79d2\u30fb\u97f3\u9ad8\u2191\uff09\u3092\u4ed8\u4e0e\u3059\u308b\"\"\"\n          \n          \n            \n                # NOTE: \u5c06\u6765\u7684\u306bAudioQuery\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f15\u6570\u306b\u3059\u308b\u4e88\u5b9a",
                                                        "author": {
                                                            "login": "Hiroshiba"
                                                        },
                                                        "url": "https://github.com/VOICEVOX/voicevox_engine/pull/904#discussion_r1433523753",
                                                        "originalCommit": {
                                                            "abbreviatedOid": "7a645cc",
                                                            "authoredDate": "2023-12-19T07:46:49Z"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                {
                                    "node": {
                                        "state": "APPROVED",
                                        "bodyText": "LGTM\uff01\uff01\uff01",
                                        "comments": {
                                            "edges": []
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "textMatches": [
                        {
                            "property": "comments.body"
                        }
                    ]
                }
            ],
            "pageInfo": {
                "endCursor": "Y3Vyc29yOjYw",
                "hasNextPage": true,
                "hasPreviousPage": true,
                "startCursor": "Y3Vyc29yOjUx"
            },
            "issueCount": 191
        }
    }
}